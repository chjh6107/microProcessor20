
lab6_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000f1c  00000fb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080011e  0080011e  00000fce  2**0
                  ALLOC
  3 .stab         00001bf0  00000000  00000000  00000fd0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000006af  00000000  00000000  00002bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000e0  00000000  00000000  00003270  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c93  00000000  00000000  00003350  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004d7  00000000  00000000  00003fe3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000875  00000000  00000000  000044ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000214  00000000  00000000  00004d30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000274  00000000  00000000  00004f44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000090f  00000000  00000000  000051b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00005ac7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
   8:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
   c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  10:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  14:	0c 94 a0 00 	jmp	0x140	; 0x140 <__vector_5>
  18:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  1c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  20:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  24:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  28:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  2c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  30:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  34:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  38:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  3c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  40:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  44:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  48:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  4c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  50:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  54:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  58:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  5c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  60:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  64:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  68:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  6c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  70:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  74:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  78:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  7c:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  80:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  84:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>
  88:	0c 94 66 00 	jmp	0xcc	; 0xcc <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e1       	ldi	r30, 0x1C	; 28
  a0:	ff e0       	ldi	r31, 0x0F	; 15
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 31       	cpi	r26, 0x1E	; 30
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	1b be       	out	0x3b, r1	; 59

000000b4 <__do_clear_bss>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	ae e1       	ldi	r26, 0x1E	; 30
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	01 c0       	rjmp	.+2      	; 0xbe <.do_clear_bss_start>

000000bc <.do_clear_bss_loop>:
  bc:	1d 92       	st	X+, r1

000000be <.do_clear_bss_start>:
  be:	a1 32       	cpi	r26, 0x21	; 33
  c0:	b1 07       	cpc	r27, r17
  c2:	e1 f7       	brne	.-8      	; 0xbc <.do_clear_bss_loop>
  c4:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <main>
  c8:	0c 94 8c 07 	jmp	0xf18	; 0xf18 <_exit>

000000cc <__bad_interrupt>:
  cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d0 <usart_init>:
unsigned int count = 0;
unsigned char msg[];


void usart_init(void)
{
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	cd b7       	in	r28, 0x3d	; 61
  d6:	de b7       	in	r29, 0x3e	; 62
   UBRR0H = 0x00;
  d8:	80 e9       	ldi	r24, 0x90	; 144
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	fc 01       	movw	r30, r24
  de:	10 82       	st	Z, r1
   UBRR0L = 0x33;
  e0:	89 e2       	ldi	r24, 0x29	; 41
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	23 e3       	ldi	r18, 0x33	; 51
  e6:	fc 01       	movw	r30, r24
  e8:	20 83       	st	Z, r18
   UCSR0A = 0x00;
  ea:	8b e2       	ldi	r24, 0x2B	; 43
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	fc 01       	movw	r30, r24
  f0:	10 82       	st	Z, r1
   UCSR0B = 1<<TXEN;
  f2:	8a e2       	ldi	r24, 0x2A	; 42
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	28 e0       	ldi	r18, 0x08	; 8
  f8:	fc 01       	movw	r30, r24
  fa:	20 83       	st	Z, r18
   UCSR0C = 0B00000110;
  fc:	85 e9       	ldi	r24, 0x95	; 149
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	26 e0       	ldi	r18, 0x06	; 6
 102:	fc 01       	movw	r30, r24
 104:	20 83       	st	Z, r18
}
 106:	df 91       	pop	r29
 108:	cf 91       	pop	r28
 10a:	08 95       	ret

0000010c <usart_send>:

unsigned char usart_send(unsigned char ch)
{
 10c:	cf 93       	push	r28
 10e:	df 93       	push	r29
 110:	0f 92       	push	r0
 112:	cd b7       	in	r28, 0x3d	; 61
 114:	de b7       	in	r29, 0x3e	; 62
 116:	89 83       	std	Y+1, r24	; 0x01
   while(!(UCSR0A&(1<<UDRE)));
 118:	00 00       	nop
 11a:	8b e2       	ldi	r24, 0x2B	; 43
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	fc 01       	movw	r30, r24
 120:	80 81       	ld	r24, Z
 122:	88 2f       	mov	r24, r24
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	80 72       	andi	r24, 0x20	; 32
 128:	90 70       	andi	r25, 0x00	; 0
 12a:	00 97       	sbiw	r24, 0x00	; 0
 12c:	b1 f3       	breq	.-20     	; 0x11a <usart_send+0xe>
   UDR1 = ch;
 12e:	8c e9       	ldi	r24, 0x9C	; 156
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	29 81       	ldd	r18, Y+1	; 0x01
 134:	fc 01       	movw	r30, r24
 136:	20 83       	st	Z, r18
}
 138:	0f 90       	pop	r0
 13a:	df 91       	pop	r29
 13c:	cf 91       	pop	r28
 13e:	08 95       	ret

00000140 <__vector_5>:


ISR(INT4_vect)
{    
 140:	1f 92       	push	r1
 142:	0f 92       	push	r0
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	0f 92       	push	r0
 148:	00 90 5b 00 	lds	r0, 0x005B
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	0f 93       	push	r16
 152:	1f 93       	push	r17
 154:	2f 93       	push	r18
 156:	3f 93       	push	r19
 158:	4f 93       	push	r20
 15a:	5f 93       	push	r21
 15c:	6f 93       	push	r22
 15e:	7f 93       	push	r23
 160:	8f 93       	push	r24
 162:	9f 93       	push	r25
 164:	af 93       	push	r26
 166:	bf 93       	push	r27
 168:	ef 93       	push	r30
 16a:	ff 93       	push	r31
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
 170:	cd b7       	in	r28, 0x3d	; 61
 172:	de b7       	in	r29, 0x3e	; 62
 174:	6e 97       	sbiw	r28, 0x1e	; 30
 176:	de bf       	out	0x3e, r29	; 62
 178:	cd bf       	out	0x3d, r28	; 61
   usart_init();
 17a:	0e 94 68 00 	call	0xd0	; 0xd0 <usart_init>
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	a8 e4       	ldi	r26, 0x48	; 72
 184:	b2 e4       	ldi	r27, 0x42	; 66
 186:	8b 83       	std	Y+3, r24	; 0x03
 188:	9c 83       	std	Y+4, r25	; 0x04
 18a:	ad 83       	std	Y+5, r26	; 0x05
 18c:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 18e:	6b 81       	ldd	r22, Y+3	; 0x03
 190:	7c 81       	ldd	r23, Y+4	; 0x04
 192:	8d 81       	ldd	r24, Y+5	; 0x05
 194:	9e 81       	ldd	r25, Y+6	; 0x06
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	4a ef       	ldi	r20, 0xFA	; 250
 19c:	54 e4       	ldi	r21, 0x44	; 68
 19e:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 1a2:	dc 01       	movw	r26, r24
 1a4:	cb 01       	movw	r24, r22
 1a6:	8f 83       	std	Y+7, r24	; 0x07
 1a8:	98 87       	std	Y+8, r25	; 0x08
 1aa:	a9 87       	std	Y+9, r26	; 0x09
 1ac:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 1ae:	11 e0       	ldi	r17, 0x01	; 1
 1b0:	6f 81       	ldd	r22, Y+7	; 0x07
 1b2:	78 85       	ldd	r23, Y+8	; 0x08
 1b4:	89 85       	ldd	r24, Y+9	; 0x09
 1b6:	9a 85       	ldd	r25, Y+10	; 0x0a
 1b8:	20 e0       	ldi	r18, 0x00	; 0
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	40 e8       	ldi	r20, 0x80	; 128
 1be:	5f e3       	ldi	r21, 0x3F	; 63
 1c0:	0e 94 aa 03 	call	0x754	; 0x754 <__cmpsf2>
 1c4:	88 23       	and	r24, r24
 1c6:	0c f0       	brlt	.+2      	; 0x1ca <__vector_5+0x8a>
 1c8:	10 e0       	ldi	r17, 0x00	; 0
 1ca:	11 23       	and	r17, r17
 1cc:	29 f0       	breq	.+10     	; 0x1d8 <__vector_5+0x98>
		__ticks = 1;
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	9c 87       	std	Y+12, r25	; 0x0c
 1d4:	8b 87       	std	Y+11, r24	; 0x0b
 1d6:	46 c0       	rjmp	.+140    	; 0x264 <__vector_5+0x124>
	else if (__tmp > 65535)
 1d8:	11 e0       	ldi	r17, 0x01	; 1
 1da:	6f 81       	ldd	r22, Y+7	; 0x07
 1dc:	78 85       	ldd	r23, Y+8	; 0x08
 1de:	89 85       	ldd	r24, Y+9	; 0x09
 1e0:	9a 85       	ldd	r25, Y+10	; 0x0a
 1e2:	20 e0       	ldi	r18, 0x00	; 0
 1e4:	3f ef       	ldi	r19, 0xFF	; 255
 1e6:	4f e7       	ldi	r20, 0x7F	; 127
 1e8:	57 e4       	ldi	r21, 0x47	; 71
 1ea:	0e 94 27 04 	call	0x84e	; 0x84e <__gesf2>
 1ee:	18 16       	cp	r1, r24
 1f0:	0c f0       	brlt	.+2      	; 0x1f4 <__vector_5+0xb4>
 1f2:	10 e0       	ldi	r17, 0x00	; 0
 1f4:	11 23       	and	r17, r17
 1f6:	61 f1       	breq	.+88     	; 0x250 <__vector_5+0x110>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1f8:	6b 81       	ldd	r22, Y+3	; 0x03
 1fa:	7c 81       	ldd	r23, Y+4	; 0x04
 1fc:	8d 81       	ldd	r24, Y+5	; 0x05
 1fe:	9e 81       	ldd	r25, Y+6	; 0x06
 200:	20 e0       	ldi	r18, 0x00	; 0
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	40 e2       	ldi	r20, 0x20	; 32
 206:	51 e4       	ldi	r21, 0x41	; 65
 208:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 20c:	dc 01       	movw	r26, r24
 20e:	cb 01       	movw	r24, r22
 210:	bc 01       	movw	r22, r24
 212:	cd 01       	movw	r24, r26
 214:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixunssfsi>
 218:	dc 01       	movw	r26, r24
 21a:	cb 01       	movw	r24, r22
 21c:	9c 87       	std	Y+12, r25	; 0x0c
 21e:	8b 87       	std	Y+11, r24	; 0x0b
 220:	12 c0       	rjmp	.+36     	; 0x246 <__vector_5+0x106>
 222:	88 ec       	ldi	r24, 0xC8	; 200
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	9e 87       	std	Y+14, r25	; 0x0e
 228:	8d 87       	std	Y+13, r24	; 0x0d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 22a:	8d 85       	ldd	r24, Y+13	; 0x0d
 22c:	9e 85       	ldd	r25, Y+14	; 0x0e
 22e:	8c 01       	movw	r16, r24
 230:	c8 01       	movw	r24, r16
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <__vector_5+0xf2>
 236:	8c 01       	movw	r16, r24
 238:	1e 87       	std	Y+14, r17	; 0x0e
 23a:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 23c:	8b 85       	ldd	r24, Y+11	; 0x0b
 23e:	9c 85       	ldd	r25, Y+12	; 0x0c
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	9c 87       	std	Y+12, r25	; 0x0c
 244:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 246:	8b 85       	ldd	r24, Y+11	; 0x0b
 248:	9c 85       	ldd	r25, Y+12	; 0x0c
 24a:	00 97       	sbiw	r24, 0x00	; 0
 24c:	51 f7       	brne	.-44     	; 0x222 <__vector_5+0xe2>
 24e:	17 c0       	rjmp	.+46     	; 0x27e <__vector_5+0x13e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 250:	6f 81       	ldd	r22, Y+7	; 0x07
 252:	78 85       	ldd	r23, Y+8	; 0x08
 254:	89 85       	ldd	r24, Y+9	; 0x09
 256:	9a 85       	ldd	r25, Y+10	; 0x0a
 258:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixunssfsi>
 25c:	dc 01       	movw	r26, r24
 25e:	cb 01       	movw	r24, r22
 260:	9c 87       	std	Y+12, r25	; 0x0c
 262:	8b 87       	std	Y+11, r24	; 0x0b
 264:	8b 85       	ldd	r24, Y+11	; 0x0b
 266:	9c 85       	ldd	r25, Y+12	; 0x0c
 268:	98 8b       	std	Y+16, r25	; 0x10
 26a:	8f 87       	std	Y+15, r24	; 0x0f
 26c:	8f 85       	ldd	r24, Y+15	; 0x0f
 26e:	98 89       	ldd	r25, Y+16	; 0x10
 270:	8c 01       	movw	r16, r24
 272:	f8 01       	movw	r30, r16
 274:	31 97       	sbiw	r30, 0x01	; 1
 276:	f1 f7       	brne	.-4      	; 0x274 <__vector_5+0x134>
 278:	8f 01       	movw	r16, r30
 27a:	18 8b       	std	Y+16, r17	; 0x10
 27c:	0f 87       	std	Y+15, r16	; 0x0f
   _delay_ms(50);
   int i = 0;
 27e:	1a 82       	std	Y+2, r1	; 0x02
 280:	19 82       	std	Y+1, r1	; 0x01
   count++;
 282:	80 91 1e 01 	lds	r24, 0x011E
 286:	90 91 1f 01 	lds	r25, 0x011F
 28a:	01 96       	adiw	r24, 0x01	; 1
 28c:	90 93 1f 01 	sts	0x011F, r25
 290:	80 93 1e 01 	sts	0x011E, r24
   sprintf(msg, "%d people", count);
 294:	20 91 1e 01 	lds	r18, 0x011E
 298:	30 91 1f 01 	lds	r19, 0x011F
 29c:	00 d0       	rcall	.+0      	; 0x29e <__vector_5+0x15e>
 29e:	00 d0       	rcall	.+0      	; 0x2a0 <__vector_5+0x160>
 2a0:	00 d0       	rcall	.+0      	; 0x2a2 <__vector_5+0x162>
 2a2:	8d b7       	in	r24, 0x3d	; 61
 2a4:	9e b7       	in	r25, 0x3e	; 62
 2a6:	01 96       	adiw	r24, 0x01	; 1
 2a8:	40 e2       	ldi	r20, 0x20	; 32
 2aa:	51 e0       	ldi	r21, 0x01	; 1
 2ac:	fc 01       	movw	r30, r24
 2ae:	51 83       	std	Z+1, r21	; 0x01
 2b0:	40 83       	st	Z, r20
 2b2:	40 e0       	ldi	r20, 0x00	; 0
 2b4:	51 e0       	ldi	r21, 0x01	; 1
 2b6:	fc 01       	movw	r30, r24
 2b8:	53 83       	std	Z+3, r21	; 0x03
 2ba:	42 83       	std	Z+2, r20	; 0x02
 2bc:	fc 01       	movw	r30, r24
 2be:	35 83       	std	Z+5, r19	; 0x05
 2c0:	24 83       	std	Z+4, r18	; 0x04
 2c2:	0e 94 b6 04 	call	0x96c	; 0x96c <sprintf>
 2c6:	8d b7       	in	r24, 0x3d	; 61
 2c8:	9e b7       	in	r25, 0x3e	; 62
 2ca:	06 96       	adiw	r24, 0x06	; 6
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	f8 94       	cli
 2d0:	9e bf       	out	0x3e, r25	; 62
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	8d bf       	out	0x3d, r24	; 61

    while(1){
         if(msg[i] == '\0')break;
 2d6:	89 81       	ldd	r24, Y+1	; 0x01
 2d8:	9a 81       	ldd	r25, Y+2	; 0x02
 2da:	80 5e       	subi	r24, 0xE0	; 224
 2dc:	9e 4f       	sbci	r25, 0xFE	; 254
 2de:	fc 01       	movw	r30, r24
 2e0:	80 81       	ld	r24, Z
 2e2:	88 23       	and	r24, r24
 2e4:	09 f4       	brne	.+2      	; 0x2e8 <__vector_5+0x1a8>
 2e6:	90 c0       	rjmp	.+288    	; 0x408 <__vector_5+0x2c8>
        usart_send(msg[i++]);
 2e8:	89 81       	ldd	r24, Y+1	; 0x01
 2ea:	9a 81       	ldd	r25, Y+2	; 0x02
 2ec:	80 5e       	subi	r24, 0xE0	; 224
 2ee:	9e 4f       	sbci	r25, 0xFE	; 254
 2f0:	fc 01       	movw	r30, r24
 2f2:	20 81       	ld	r18, Z
 2f4:	89 81       	ldd	r24, Y+1	; 0x01
 2f6:	9a 81       	ldd	r25, Y+2	; 0x02
 2f8:	01 96       	adiw	r24, 0x01	; 1
 2fa:	9a 83       	std	Y+2, r25	; 0x02
 2fc:	89 83       	std	Y+1, r24	; 0x01
 2fe:	82 2f       	mov	r24, r18
 300:	0e 94 86 00 	call	0x10c	; 0x10c <usart_send>
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	a8 e4       	ldi	r26, 0x48	; 72
 30a:	b3 e4       	ldi	r27, 0x43	; 67
 30c:	89 8b       	std	Y+17, r24	; 0x11
 30e:	9a 8b       	std	Y+18, r25	; 0x12
 310:	ab 8b       	std	Y+19, r26	; 0x13
 312:	bc 8b       	std	Y+20, r27	; 0x14
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 314:	69 89       	ldd	r22, Y+17	; 0x11
 316:	7a 89       	ldd	r23, Y+18	; 0x12
 318:	8b 89       	ldd	r24, Y+19	; 0x13
 31a:	9c 89       	ldd	r25, Y+20	; 0x14
 31c:	20 e0       	ldi	r18, 0x00	; 0
 31e:	30 e0       	ldi	r19, 0x00	; 0
 320:	4a ef       	ldi	r20, 0xFA	; 250
 322:	54 e4       	ldi	r21, 0x44	; 68
 324:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 328:	dc 01       	movw	r26, r24
 32a:	cb 01       	movw	r24, r22
 32c:	8d 8b       	std	Y+21, r24	; 0x15
 32e:	9e 8b       	std	Y+22, r25	; 0x16
 330:	af 8b       	std	Y+23, r26	; 0x17
 332:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
 334:	11 e0       	ldi	r17, 0x01	; 1
 336:	6d 89       	ldd	r22, Y+21	; 0x15
 338:	7e 89       	ldd	r23, Y+22	; 0x16
 33a:	8f 89       	ldd	r24, Y+23	; 0x17
 33c:	98 8d       	ldd	r25, Y+24	; 0x18
 33e:	20 e0       	ldi	r18, 0x00	; 0
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	40 e8       	ldi	r20, 0x80	; 128
 344:	5f e3       	ldi	r21, 0x3F	; 63
 346:	0e 94 aa 03 	call	0x754	; 0x754 <__cmpsf2>
 34a:	88 23       	and	r24, r24
 34c:	0c f0       	brlt	.+2      	; 0x350 <__vector_5+0x210>
 34e:	10 e0       	ldi	r17, 0x00	; 0
 350:	11 23       	and	r17, r17
 352:	29 f0       	breq	.+10     	; 0x35e <__vector_5+0x21e>
		__ticks = 1;
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	9a 8f       	std	Y+26, r25	; 0x1a
 35a:	89 8f       	std	Y+25, r24	; 0x19
 35c:	46 c0       	rjmp	.+140    	; 0x3ea <__vector_5+0x2aa>
	else if (__tmp > 65535)
 35e:	11 e0       	ldi	r17, 0x01	; 1
 360:	6d 89       	ldd	r22, Y+21	; 0x15
 362:	7e 89       	ldd	r23, Y+22	; 0x16
 364:	8f 89       	ldd	r24, Y+23	; 0x17
 366:	98 8d       	ldd	r25, Y+24	; 0x18
 368:	20 e0       	ldi	r18, 0x00	; 0
 36a:	3f ef       	ldi	r19, 0xFF	; 255
 36c:	4f e7       	ldi	r20, 0x7F	; 127
 36e:	57 e4       	ldi	r21, 0x47	; 71
 370:	0e 94 27 04 	call	0x84e	; 0x84e <__gesf2>
 374:	18 16       	cp	r1, r24
 376:	0c f0       	brlt	.+2      	; 0x37a <__vector_5+0x23a>
 378:	10 e0       	ldi	r17, 0x00	; 0
 37a:	11 23       	and	r17, r17
 37c:	61 f1       	breq	.+88     	; 0x3d6 <__vector_5+0x296>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 37e:	69 89       	ldd	r22, Y+17	; 0x11
 380:	7a 89       	ldd	r23, Y+18	; 0x12
 382:	8b 89       	ldd	r24, Y+19	; 0x13
 384:	9c 89       	ldd	r25, Y+20	; 0x14
 386:	20 e0       	ldi	r18, 0x00	; 0
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	40 e2       	ldi	r20, 0x20	; 32
 38c:	51 e4       	ldi	r21, 0x41	; 65
 38e:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 392:	dc 01       	movw	r26, r24
 394:	cb 01       	movw	r24, r22
 396:	bc 01       	movw	r22, r24
 398:	cd 01       	movw	r24, r26
 39a:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixunssfsi>
 39e:	dc 01       	movw	r26, r24
 3a0:	cb 01       	movw	r24, r22
 3a2:	9a 8f       	std	Y+26, r25	; 0x1a
 3a4:	89 8f       	std	Y+25, r24	; 0x19
 3a6:	12 c0       	rjmp	.+36     	; 0x3cc <__vector_5+0x28c>
 3a8:	88 ec       	ldi	r24, 0xC8	; 200
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	9c 8f       	std	Y+28, r25	; 0x1c
 3ae:	8b 8f       	std	Y+27, r24	; 0x1b
 3b0:	8b 8d       	ldd	r24, Y+27	; 0x1b
 3b2:	9c 8d       	ldd	r25, Y+28	; 0x1c
 3b4:	8c 01       	movw	r16, r24
 3b6:	c8 01       	movw	r24, r16
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <__vector_5+0x278>
 3bc:	8c 01       	movw	r16, r24
 3be:	1c 8f       	std	Y+28, r17	; 0x1c
 3c0:	0b 8f       	std	Y+27, r16	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3c2:	89 8d       	ldd	r24, Y+25	; 0x19
 3c4:	9a 8d       	ldd	r25, Y+26	; 0x1a
 3c6:	01 97       	sbiw	r24, 0x01	; 1
 3c8:	9a 8f       	std	Y+26, r25	; 0x1a
 3ca:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3cc:	89 8d       	ldd	r24, Y+25	; 0x19
 3ce:	9a 8d       	ldd	r25, Y+26	; 0x1a
 3d0:	00 97       	sbiw	r24, 0x00	; 0
 3d2:	51 f7       	brne	.-44     	; 0x3a8 <__vector_5+0x268>
 3d4:	18 c0       	rjmp	.+48     	; 0x406 <__vector_5+0x2c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 3d6:	6d 89       	ldd	r22, Y+21	; 0x15
 3d8:	7e 89       	ldd	r23, Y+22	; 0x16
 3da:	8f 89       	ldd	r24, Y+23	; 0x17
 3dc:	98 8d       	ldd	r25, Y+24	; 0x18
 3de:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixunssfsi>
 3e2:	dc 01       	movw	r26, r24
 3e4:	cb 01       	movw	r24, r22
 3e6:	9a 8f       	std	Y+26, r25	; 0x1a
 3e8:	89 8f       	std	Y+25, r24	; 0x19
 3ea:	89 8d       	ldd	r24, Y+25	; 0x19
 3ec:	9a 8d       	ldd	r25, Y+26	; 0x1a
 3ee:	9e 8f       	std	Y+30, r25	; 0x1e
 3f0:	8d 8f       	std	Y+29, r24	; 0x1d
 3f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
 3f4:	9e 8d       	ldd	r25, Y+30	; 0x1e
 3f6:	8c 01       	movw	r16, r24
 3f8:	f8 01       	movw	r30, r16
 3fa:	31 97       	sbiw	r30, 0x01	; 1
 3fc:	f1 f7       	brne	.-4      	; 0x3fa <__vector_5+0x2ba>
 3fe:	8f 01       	movw	r16, r30
 400:	1e 8f       	std	Y+30, r17	; 0x1e
 402:	0d 8f       	std	Y+29, r16	; 0x1d
      _delay_ms(200);
       }
 404:	68 cf       	rjmp	.-304    	; 0x2d6 <__vector_5+0x196>
 406:	67 cf       	rjmp	.-306    	; 0x2d6 <__vector_5+0x196>
   int i = 0;
   count++;
   sprintf(msg, "%d people", count);

    while(1){
         if(msg[i] == '\0')break;
 408:	00 00       	nop
        usart_send(msg[i++]);
      _delay_ms(200);
       }
}
 40a:	6e 96       	adiw	r28, 0x1e	; 30
 40c:	de bf       	out	0x3e, r29	; 62
 40e:	cd bf       	out	0x3d, r28	; 61
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	ff 91       	pop	r31
 416:	ef 91       	pop	r30
 418:	bf 91       	pop	r27
 41a:	af 91       	pop	r26
 41c:	9f 91       	pop	r25
 41e:	8f 91       	pop	r24
 420:	7f 91       	pop	r23
 422:	6f 91       	pop	r22
 424:	5f 91       	pop	r21
 426:	4f 91       	pop	r20
 428:	3f 91       	pop	r19
 42a:	2f 91       	pop	r18
 42c:	1f 91       	pop	r17
 42e:	0f 91       	pop	r16
 430:	0f 90       	pop	r0
 432:	00 92 5b 00 	sts	0x005B, r0
 436:	0f 90       	pop	r0
 438:	0f be       	out	0x3f, r0	; 63
 43a:	0f 90       	pop	r0
 43c:	1f 90       	pop	r1
 43e:	18 95       	reti

00000440 <usart_string>:

void usart_string(unsigned char *str)
{
 440:	0f 93       	push	r16
 442:	1f 93       	push	r17
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	cd b7       	in	r28, 0x3d	; 61
 44a:	de b7       	in	r29, 0x3e	; 62
 44c:	62 97       	sbiw	r28, 0x12	; 18
 44e:	0f b6       	in	r0, 0x3f	; 63
 450:	f8 94       	cli
 452:	de bf       	out	0x3e, r29	; 62
 454:	0f be       	out	0x3f, r0	; 63
 456:	cd bf       	out	0x3d, r28	; 61
 458:	9a 8b       	std	Y+18, r25	; 0x12
 45a:	89 8b       	std	Y+17, r24	; 0x11
 int i=0;
 45c:	1a 82       	std	Y+2, r1	; 0x02
 45e:	19 82       	std	Y+1, r1	; 0x01
 while(1){
  if(str[i] == '\0')break;
 460:	89 81       	ldd	r24, Y+1	; 0x01
 462:	9a 81       	ldd	r25, Y+2	; 0x02
 464:	29 89       	ldd	r18, Y+17	; 0x11
 466:	3a 89       	ldd	r19, Y+18	; 0x12
 468:	82 0f       	add	r24, r18
 46a:	93 1f       	adc	r25, r19
 46c:	fc 01       	movw	r30, r24
 46e:	80 81       	ld	r24, Z
 470:	88 23       	and	r24, r24
 472:	09 f4       	brne	.+2      	; 0x476 <usart_string+0x36>
 474:	92 c0       	rjmp	.+292    	; 0x59a <usart_string+0x15a>
  usart_send(str[i++]);
 476:	89 81       	ldd	r24, Y+1	; 0x01
 478:	9a 81       	ldd	r25, Y+2	; 0x02
 47a:	29 89       	ldd	r18, Y+17	; 0x11
 47c:	3a 89       	ldd	r19, Y+18	; 0x12
 47e:	82 0f       	add	r24, r18
 480:	93 1f       	adc	r25, r19
 482:	fc 01       	movw	r30, r24
 484:	20 81       	ld	r18, Z
 486:	89 81       	ldd	r24, Y+1	; 0x01
 488:	9a 81       	ldd	r25, Y+2	; 0x02
 48a:	01 96       	adiw	r24, 0x01	; 1
 48c:	9a 83       	std	Y+2, r25	; 0x02
 48e:	89 83       	std	Y+1, r24	; 0x01
 490:	82 2f       	mov	r24, r18
 492:	0e 94 86 00 	call	0x10c	; 0x10c <usart_send>
 496:	80 e0       	ldi	r24, 0x00	; 0
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	a8 e4       	ldi	r26, 0x48	; 72
 49c:	b3 e4       	ldi	r27, 0x43	; 67
 49e:	8b 83       	std	Y+3, r24	; 0x03
 4a0:	9c 83       	std	Y+4, r25	; 0x04
 4a2:	ad 83       	std	Y+5, r26	; 0x05
 4a4:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 4a6:	6b 81       	ldd	r22, Y+3	; 0x03
 4a8:	7c 81       	ldd	r23, Y+4	; 0x04
 4aa:	8d 81       	ldd	r24, Y+5	; 0x05
 4ac:	9e 81       	ldd	r25, Y+6	; 0x06
 4ae:	20 e0       	ldi	r18, 0x00	; 0
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	4a ef       	ldi	r20, 0xFA	; 250
 4b4:	54 e4       	ldi	r21, 0x44	; 68
 4b6:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 4ba:	dc 01       	movw	r26, r24
 4bc:	cb 01       	movw	r24, r22
 4be:	8f 83       	std	Y+7, r24	; 0x07
 4c0:	98 87       	std	Y+8, r25	; 0x08
 4c2:	a9 87       	std	Y+9, r26	; 0x09
 4c4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 4c6:	11 e0       	ldi	r17, 0x01	; 1
 4c8:	6f 81       	ldd	r22, Y+7	; 0x07
 4ca:	78 85       	ldd	r23, Y+8	; 0x08
 4cc:	89 85       	ldd	r24, Y+9	; 0x09
 4ce:	9a 85       	ldd	r25, Y+10	; 0x0a
 4d0:	20 e0       	ldi	r18, 0x00	; 0
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	40 e8       	ldi	r20, 0x80	; 128
 4d6:	5f e3       	ldi	r21, 0x3F	; 63
 4d8:	0e 94 aa 03 	call	0x754	; 0x754 <__cmpsf2>
 4dc:	88 23       	and	r24, r24
 4de:	0c f0       	brlt	.+2      	; 0x4e2 <usart_string+0xa2>
 4e0:	10 e0       	ldi	r17, 0x00	; 0
 4e2:	11 23       	and	r17, r17
 4e4:	29 f0       	breq	.+10     	; 0x4f0 <usart_string+0xb0>
		__ticks = 1;
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	9c 87       	std	Y+12, r25	; 0x0c
 4ec:	8b 87       	std	Y+11, r24	; 0x0b
 4ee:	46 c0       	rjmp	.+140    	; 0x57c <usart_string+0x13c>
	else if (__tmp > 65535)
 4f0:	11 e0       	ldi	r17, 0x01	; 1
 4f2:	6f 81       	ldd	r22, Y+7	; 0x07
 4f4:	78 85       	ldd	r23, Y+8	; 0x08
 4f6:	89 85       	ldd	r24, Y+9	; 0x09
 4f8:	9a 85       	ldd	r25, Y+10	; 0x0a
 4fa:	20 e0       	ldi	r18, 0x00	; 0
 4fc:	3f ef       	ldi	r19, 0xFF	; 255
 4fe:	4f e7       	ldi	r20, 0x7F	; 127
 500:	57 e4       	ldi	r21, 0x47	; 71
 502:	0e 94 27 04 	call	0x84e	; 0x84e <__gesf2>
 506:	18 16       	cp	r1, r24
 508:	0c f0       	brlt	.+2      	; 0x50c <usart_string+0xcc>
 50a:	10 e0       	ldi	r17, 0x00	; 0
 50c:	11 23       	and	r17, r17
 50e:	61 f1       	breq	.+88     	; 0x568 <usart_string+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 510:	6b 81       	ldd	r22, Y+3	; 0x03
 512:	7c 81       	ldd	r23, Y+4	; 0x04
 514:	8d 81       	ldd	r24, Y+5	; 0x05
 516:	9e 81       	ldd	r25, Y+6	; 0x06
 518:	20 e0       	ldi	r18, 0x00	; 0
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	40 e2       	ldi	r20, 0x20	; 32
 51e:	51 e4       	ldi	r21, 0x41	; 65
 520:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 524:	dc 01       	movw	r26, r24
 526:	cb 01       	movw	r24, r22
 528:	bc 01       	movw	r22, r24
 52a:	cd 01       	movw	r24, r26
 52c:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixunssfsi>
 530:	dc 01       	movw	r26, r24
 532:	cb 01       	movw	r24, r22
 534:	9c 87       	std	Y+12, r25	; 0x0c
 536:	8b 87       	std	Y+11, r24	; 0x0b
 538:	12 c0       	rjmp	.+36     	; 0x55e <usart_string+0x11e>
 53a:	88 ec       	ldi	r24, 0xC8	; 200
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	9e 87       	std	Y+14, r25	; 0x0e
 540:	8d 87       	std	Y+13, r24	; 0x0d
 542:	8d 85       	ldd	r24, Y+13	; 0x0d
 544:	9e 85       	ldd	r25, Y+14	; 0x0e
 546:	8c 01       	movw	r16, r24
 548:	c8 01       	movw	r24, r16
 54a:	01 97       	sbiw	r24, 0x01	; 1
 54c:	f1 f7       	brne	.-4      	; 0x54a <usart_string+0x10a>
 54e:	8c 01       	movw	r16, r24
 550:	1e 87       	std	Y+14, r17	; 0x0e
 552:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 554:	8b 85       	ldd	r24, Y+11	; 0x0b
 556:	9c 85       	ldd	r25, Y+12	; 0x0c
 558:	01 97       	sbiw	r24, 0x01	; 1
 55a:	9c 87       	std	Y+12, r25	; 0x0c
 55c:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 55e:	8b 85       	ldd	r24, Y+11	; 0x0b
 560:	9c 85       	ldd	r25, Y+12	; 0x0c
 562:	00 97       	sbiw	r24, 0x00	; 0
 564:	51 f7       	brne	.-44     	; 0x53a <usart_string+0xfa>
 566:	18 c0       	rjmp	.+48     	; 0x598 <usart_string+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 568:	6f 81       	ldd	r22, Y+7	; 0x07
 56a:	78 85       	ldd	r23, Y+8	; 0x08
 56c:	89 85       	ldd	r24, Y+9	; 0x09
 56e:	9a 85       	ldd	r25, Y+10	; 0x0a
 570:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixunssfsi>
 574:	dc 01       	movw	r26, r24
 576:	cb 01       	movw	r24, r22
 578:	9c 87       	std	Y+12, r25	; 0x0c
 57a:	8b 87       	std	Y+11, r24	; 0x0b
 57c:	8b 85       	ldd	r24, Y+11	; 0x0b
 57e:	9c 85       	ldd	r25, Y+12	; 0x0c
 580:	98 8b       	std	Y+16, r25	; 0x10
 582:	8f 87       	std	Y+15, r24	; 0x0f
 584:	8f 85       	ldd	r24, Y+15	; 0x0f
 586:	98 89       	ldd	r25, Y+16	; 0x10
 588:	8c 01       	movw	r16, r24
 58a:	f8 01       	movw	r30, r16
 58c:	31 97       	sbiw	r30, 0x01	; 1
 58e:	f1 f7       	brne	.-4      	; 0x58c <usart_string+0x14c>
 590:	8f 01       	movw	r16, r30
 592:	18 8b       	std	Y+16, r17	; 0x10
 594:	0f 87       	std	Y+15, r16	; 0x0f
  _delay_ms(200);
 }
 596:	64 cf       	rjmp	.-312    	; 0x460 <usart_string+0x20>
 598:	63 cf       	rjmp	.-314    	; 0x460 <usart_string+0x20>

void usart_string(unsigned char *str)
{
 int i=0;
 while(1){
  if(str[i] == '\0')break;
 59a:	00 00       	nop
  usart_send(str[i++]);
  _delay_ms(200);
 }
}
 59c:	62 96       	adiw	r28, 0x12	; 18
 59e:	0f b6       	in	r0, 0x3f	; 63
 5a0:	f8 94       	cli
 5a2:	de bf       	out	0x3e, r29	; 62
 5a4:	0f be       	out	0x3f, r0	; 63
 5a6:	cd bf       	out	0x3d, r28	; 61
 5a8:	df 91       	pop	r29
 5aa:	cf 91       	pop	r28
 5ac:	1f 91       	pop	r17
 5ae:	0f 91       	pop	r16
 5b0:	08 95       	ret

000005b2 <main>:


int main(void)
{
 5b2:	0f 93       	push	r16
 5b4:	1f 93       	push	r17
 5b6:	cf 93       	push	r28
 5b8:	df 93       	push	r29
 5ba:	cd b7       	in	r28, 0x3d	; 61
 5bc:	de b7       	in	r29, 0x3e	; 62
 5be:	a2 97       	sbiw	r28, 0x22	; 34
 5c0:	0f b6       	in	r0, 0x3f	; 63
 5c2:	f8 94       	cli
 5c4:	de bf       	out	0x3e, r29	; 62
 5c6:	0f be       	out	0x3f, r0	; 63
 5c8:	cd bf       	out	0x3d, r28	; 61
   unsigned char a[20] = "no people ";
 5ca:	ce 01       	movw	r24, r28
 5cc:	0f 96       	adiw	r24, 0x0f	; 15
 5ce:	2a e0       	ldi	r18, 0x0A	; 10
 5d0:	31 e0       	ldi	r19, 0x01	; 1
 5d2:	4b e0       	ldi	r20, 0x0B	; 11
 5d4:	f9 01       	movw	r30, r18
 5d6:	00 80       	ld	r0, Z
 5d8:	2f 5f       	subi	r18, 0xFF	; 255
 5da:	3f 4f       	sbci	r19, 0xFF	; 255
 5dc:	fc 01       	movw	r30, r24
 5de:	00 82       	st	Z, r0
 5e0:	01 96       	adiw	r24, 0x01	; 1
 5e2:	41 50       	subi	r20, 0x01	; 1
 5e4:	44 23       	and	r20, r20
 5e6:	b1 f7       	brne	.-20     	; 0x5d4 <main+0x22>
 5e8:	29 e0       	ldi	r18, 0x09	; 9
 5ea:	ce 01       	movw	r24, r28
 5ec:	4a 96       	adiw	r24, 0x1a	; 26
 5ee:	fc 01       	movw	r30, r24
 5f0:	32 2f       	mov	r19, r18
 5f2:	11 92       	st	Z+, r1
 5f4:	3a 95       	dec	r19
 5f6:	e9 f7       	brne	.-6      	; 0x5f2 <main+0x40>
   
   MCUCR = 0x80;
 5f8:	85 e5       	ldi	r24, 0x55	; 85
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	20 e8       	ldi	r18, 0x80	; 128
 5fe:	fc 01       	movw	r30, r24
 600:	20 83       	st	Z, r18
   XMCRA = 0x44 ;    
 602:	8d e6       	ldi	r24, 0x6D	; 109
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	24 e4       	ldi	r18, 0x44	; 68
 608:	fc 01       	movw	r30, r24
 60a:	20 83       	st	Z, r18
   XMCRB = 0x80 ;
 60c:	8c e6       	ldi	r24, 0x6C	; 108
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	20 e8       	ldi	r18, 0x80	; 128
 612:	fc 01       	movw	r30, r24
 614:	20 83       	st	Z, r18

   DDRE = 0x00;
 616:	82 e2       	ldi	r24, 0x22	; 34
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	fc 01       	movw	r30, r24
 61c:	10 82       	st	Z, r1
   PORTE = 0x10; 
 61e:	83 e2       	ldi	r24, 0x23	; 35
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	20 e1       	ldi	r18, 0x10	; 16
 624:	fc 01       	movw	r30, r24
 626:	20 83       	st	Z, r18
   EIMSK = 0x10;
 628:	89 e5       	ldi	r24, 0x59	; 89
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	20 e1       	ldi	r18, 0x10	; 16
 62e:	fc 01       	movw	r30, r24
 630:	20 83       	st	Z, r18
   EICRB = 0x02; 
 632:	8a e5       	ldi	r24, 0x5A	; 90
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	22 e0       	ldi	r18, 0x02	; 2
 638:	fc 01       	movw	r30, r24
 63a:	20 83       	st	Z, r18
    SREG = 0x80; 
 63c:	8f e5       	ldi	r24, 0x5F	; 95
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	20 e8       	ldi	r18, 0x80	; 128
 642:	fc 01       	movw	r30, r24
 644:	20 83       	st	Z, r18

   usart_init();
 646:	0e 94 68 00 	call	0xd0	; 0xd0 <usart_init>
 64a:	80 e0       	ldi	r24, 0x00	; 0
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	a8 e4       	ldi	r26, 0x48	; 72
 650:	b2 e4       	ldi	r27, 0x42	; 66
 652:	89 83       	std	Y+1, r24	; 0x01
 654:	9a 83       	std	Y+2, r25	; 0x02
 656:	ab 83       	std	Y+3, r26	; 0x03
 658:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 65a:	69 81       	ldd	r22, Y+1	; 0x01
 65c:	7a 81       	ldd	r23, Y+2	; 0x02
 65e:	8b 81       	ldd	r24, Y+3	; 0x03
 660:	9c 81       	ldd	r25, Y+4	; 0x04
 662:	20 e0       	ldi	r18, 0x00	; 0
 664:	30 e0       	ldi	r19, 0x00	; 0
 666:	4a ef       	ldi	r20, 0xFA	; 250
 668:	54 e4       	ldi	r21, 0x44	; 68
 66a:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 66e:	dc 01       	movw	r26, r24
 670:	cb 01       	movw	r24, r22
 672:	8d 83       	std	Y+5, r24	; 0x05
 674:	9e 83       	std	Y+6, r25	; 0x06
 676:	af 83       	std	Y+7, r26	; 0x07
 678:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 67a:	11 e0       	ldi	r17, 0x01	; 1
 67c:	6d 81       	ldd	r22, Y+5	; 0x05
 67e:	7e 81       	ldd	r23, Y+6	; 0x06
 680:	8f 81       	ldd	r24, Y+7	; 0x07
 682:	98 85       	ldd	r25, Y+8	; 0x08
 684:	20 e0       	ldi	r18, 0x00	; 0
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	40 e8       	ldi	r20, 0x80	; 128
 68a:	5f e3       	ldi	r21, 0x3F	; 63
 68c:	0e 94 aa 03 	call	0x754	; 0x754 <__cmpsf2>
 690:	88 23       	and	r24, r24
 692:	0c f0       	brlt	.+2      	; 0x696 <main+0xe4>
 694:	10 e0       	ldi	r17, 0x00	; 0
 696:	11 23       	and	r17, r17
 698:	29 f0       	breq	.+10     	; 0x6a4 <main+0xf2>
		__ticks = 1;
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	9a 87       	std	Y+10, r25	; 0x0a
 6a0:	89 87       	std	Y+9, r24	; 0x09
 6a2:	46 c0       	rjmp	.+140    	; 0x730 <main+0x17e>
	else if (__tmp > 65535)
 6a4:	11 e0       	ldi	r17, 0x01	; 1
 6a6:	6d 81       	ldd	r22, Y+5	; 0x05
 6a8:	7e 81       	ldd	r23, Y+6	; 0x06
 6aa:	8f 81       	ldd	r24, Y+7	; 0x07
 6ac:	98 85       	ldd	r25, Y+8	; 0x08
 6ae:	20 e0       	ldi	r18, 0x00	; 0
 6b0:	3f ef       	ldi	r19, 0xFF	; 255
 6b2:	4f e7       	ldi	r20, 0x7F	; 127
 6b4:	57 e4       	ldi	r21, 0x47	; 71
 6b6:	0e 94 27 04 	call	0x84e	; 0x84e <__gesf2>
 6ba:	18 16       	cp	r1, r24
 6bc:	0c f0       	brlt	.+2      	; 0x6c0 <main+0x10e>
 6be:	10 e0       	ldi	r17, 0x00	; 0
 6c0:	11 23       	and	r17, r17
 6c2:	61 f1       	breq	.+88     	; 0x71c <main+0x16a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 6c4:	69 81       	ldd	r22, Y+1	; 0x01
 6c6:	7a 81       	ldd	r23, Y+2	; 0x02
 6c8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ca:	9c 81       	ldd	r25, Y+4	; 0x04
 6cc:	20 e0       	ldi	r18, 0x00	; 0
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	40 e2       	ldi	r20, 0x20	; 32
 6d2:	51 e4       	ldi	r21, 0x41	; 65
 6d4:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3>
 6d8:	dc 01       	movw	r26, r24
 6da:	cb 01       	movw	r24, r22
 6dc:	bc 01       	movw	r22, r24
 6de:	cd 01       	movw	r24, r26
 6e0:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixunssfsi>
 6e4:	dc 01       	movw	r26, r24
 6e6:	cb 01       	movw	r24, r22
 6e8:	9a 87       	std	Y+10, r25	; 0x0a
 6ea:	89 87       	std	Y+9, r24	; 0x09
 6ec:	12 c0       	rjmp	.+36     	; 0x712 <main+0x160>
 6ee:	88 ec       	ldi	r24, 0xC8	; 200
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	9c 87       	std	Y+12, r25	; 0x0c
 6f4:	8b 87       	std	Y+11, r24	; 0x0b
 6f6:	8b 85       	ldd	r24, Y+11	; 0x0b
 6f8:	9c 85       	ldd	r25, Y+12	; 0x0c
 6fa:	8c 01       	movw	r16, r24
 6fc:	c8 01       	movw	r24, r16
 6fe:	01 97       	sbiw	r24, 0x01	; 1
 700:	f1 f7       	brne	.-4      	; 0x6fe <main+0x14c>
 702:	8c 01       	movw	r16, r24
 704:	1c 87       	std	Y+12, r17	; 0x0c
 706:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 708:	89 85       	ldd	r24, Y+9	; 0x09
 70a:	9a 85       	ldd	r25, Y+10	; 0x0a
 70c:	01 97       	sbiw	r24, 0x01	; 1
 70e:	9a 87       	std	Y+10, r25	; 0x0a
 710:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 712:	89 85       	ldd	r24, Y+9	; 0x09
 714:	9a 85       	ldd	r25, Y+10	; 0x0a
 716:	00 97       	sbiw	r24, 0x00	; 0
 718:	51 f7       	brne	.-44     	; 0x6ee <main+0x13c>
 71a:	17 c0       	rjmp	.+46     	; 0x74a <main+0x198>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 71c:	6d 81       	ldd	r22, Y+5	; 0x05
 71e:	7e 81       	ldd	r23, Y+6	; 0x06
 720:	8f 81       	ldd	r24, Y+7	; 0x07
 722:	98 85       	ldd	r25, Y+8	; 0x08
 724:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixunssfsi>
 728:	dc 01       	movw	r26, r24
 72a:	cb 01       	movw	r24, r22
 72c:	9a 87       	std	Y+10, r25	; 0x0a
 72e:	89 87       	std	Y+9, r24	; 0x09
 730:	89 85       	ldd	r24, Y+9	; 0x09
 732:	9a 85       	ldd	r25, Y+10	; 0x0a
 734:	9e 87       	std	Y+14, r25	; 0x0e
 736:	8d 87       	std	Y+13, r24	; 0x0d
 738:	8d 85       	ldd	r24, Y+13	; 0x0d
 73a:	9e 85       	ldd	r25, Y+14	; 0x0e
 73c:	8c 01       	movw	r16, r24
 73e:	f8 01       	movw	r30, r16
 740:	31 97       	sbiw	r30, 0x01	; 1
 742:	f1 f7       	brne	.-4      	; 0x740 <main+0x18e>
 744:	8f 01       	movw	r16, r30
 746:	1e 87       	std	Y+14, r17	; 0x0e
 748:	0d 87       	std	Y+13, r16	; 0x0d
   _delay_ms(50);
   usart_string(a);
 74a:	ce 01       	movw	r24, r28
 74c:	0f 96       	adiw	r24, 0x0f	; 15
 74e:	0e 94 20 02 	call	0x440	; 0x440 <usart_string>

   while(1){}
 752:	ff cf       	rjmp	.-2      	; 0x752 <main+0x1a0>

00000754 <__cmpsf2>:
 754:	2f d0       	rcall	.+94     	; 0x7b4 <__fp_cmp>
 756:	08 f4       	brcc	.+2      	; 0x75a <__cmpsf2+0x6>
 758:	81 e0       	ldi	r24, 0x01	; 1
 75a:	08 95       	ret

0000075c <__fixunssfsi>:
 75c:	57 d0       	rcall	.+174    	; 0x80c <__fp_splitA>
 75e:	88 f0       	brcs	.+34     	; 0x782 <__fixunssfsi+0x26>
 760:	9f 57       	subi	r25, 0x7F	; 127
 762:	90 f0       	brcs	.+36     	; 0x788 <__fixunssfsi+0x2c>
 764:	b9 2f       	mov	r27, r25
 766:	99 27       	eor	r25, r25
 768:	b7 51       	subi	r27, 0x17	; 23
 76a:	a0 f0       	brcs	.+40     	; 0x794 <__fixunssfsi+0x38>
 76c:	d1 f0       	breq	.+52     	; 0x7a2 <__fixunssfsi+0x46>
 76e:	66 0f       	add	r22, r22
 770:	77 1f       	adc	r23, r23
 772:	88 1f       	adc	r24, r24
 774:	99 1f       	adc	r25, r25
 776:	1a f0       	brmi	.+6      	; 0x77e <__fixunssfsi+0x22>
 778:	ba 95       	dec	r27
 77a:	c9 f7       	brne	.-14     	; 0x76e <__fixunssfsi+0x12>
 77c:	12 c0       	rjmp	.+36     	; 0x7a2 <__fixunssfsi+0x46>
 77e:	b1 30       	cpi	r27, 0x01	; 1
 780:	81 f0       	breq	.+32     	; 0x7a2 <__fixunssfsi+0x46>
 782:	5e d0       	rcall	.+188    	; 0x840 <__fp_zero>
 784:	b1 e0       	ldi	r27, 0x01	; 1
 786:	08 95       	ret
 788:	5b c0       	rjmp	.+182    	; 0x840 <__fp_zero>
 78a:	67 2f       	mov	r22, r23
 78c:	78 2f       	mov	r23, r24
 78e:	88 27       	eor	r24, r24
 790:	b8 5f       	subi	r27, 0xF8	; 248
 792:	39 f0       	breq	.+14     	; 0x7a2 <__fixunssfsi+0x46>
 794:	b9 3f       	cpi	r27, 0xF9	; 249
 796:	cc f3       	brlt	.-14     	; 0x78a <__fixunssfsi+0x2e>
 798:	86 95       	lsr	r24
 79a:	77 95       	ror	r23
 79c:	67 95       	ror	r22
 79e:	b3 95       	inc	r27
 7a0:	d9 f7       	brne	.-10     	; 0x798 <__fixunssfsi+0x3c>
 7a2:	3e f4       	brtc	.+14     	; 0x7b2 <__fixunssfsi+0x56>
 7a4:	90 95       	com	r25
 7a6:	80 95       	com	r24
 7a8:	70 95       	com	r23
 7aa:	61 95       	neg	r22
 7ac:	7f 4f       	sbci	r23, 0xFF	; 255
 7ae:	8f 4f       	sbci	r24, 0xFF	; 255
 7b0:	9f 4f       	sbci	r25, 0xFF	; 255
 7b2:	08 95       	ret

000007b4 <__fp_cmp>:
 7b4:	99 0f       	add	r25, r25
 7b6:	00 08       	sbc	r0, r0
 7b8:	55 0f       	add	r21, r21
 7ba:	aa 0b       	sbc	r26, r26
 7bc:	e0 e8       	ldi	r30, 0x80	; 128
 7be:	fe ef       	ldi	r31, 0xFE	; 254
 7c0:	16 16       	cp	r1, r22
 7c2:	17 06       	cpc	r1, r23
 7c4:	e8 07       	cpc	r30, r24
 7c6:	f9 07       	cpc	r31, r25
 7c8:	c0 f0       	brcs	.+48     	; 0x7fa <__fp_cmp+0x46>
 7ca:	12 16       	cp	r1, r18
 7cc:	13 06       	cpc	r1, r19
 7ce:	e4 07       	cpc	r30, r20
 7d0:	f5 07       	cpc	r31, r21
 7d2:	98 f0       	brcs	.+38     	; 0x7fa <__fp_cmp+0x46>
 7d4:	62 1b       	sub	r22, r18
 7d6:	73 0b       	sbc	r23, r19
 7d8:	84 0b       	sbc	r24, r20
 7da:	95 0b       	sbc	r25, r21
 7dc:	39 f4       	brne	.+14     	; 0x7ec <__fp_cmp+0x38>
 7de:	0a 26       	eor	r0, r26
 7e0:	61 f0       	breq	.+24     	; 0x7fa <__fp_cmp+0x46>
 7e2:	23 2b       	or	r18, r19
 7e4:	24 2b       	or	r18, r20
 7e6:	25 2b       	or	r18, r21
 7e8:	21 f4       	brne	.+8      	; 0x7f2 <__fp_cmp+0x3e>
 7ea:	08 95       	ret
 7ec:	0a 26       	eor	r0, r26
 7ee:	09 f4       	brne	.+2      	; 0x7f2 <__fp_cmp+0x3e>
 7f0:	a1 40       	sbci	r26, 0x01	; 1
 7f2:	a6 95       	lsr	r26
 7f4:	8f ef       	ldi	r24, 0xFF	; 255
 7f6:	81 1d       	adc	r24, r1
 7f8:	81 1d       	adc	r24, r1
 7fa:	08 95       	ret

000007fc <__fp_split3>:
 7fc:	57 fd       	sbrc	r21, 7
 7fe:	90 58       	subi	r25, 0x80	; 128
 800:	44 0f       	add	r20, r20
 802:	55 1f       	adc	r21, r21
 804:	59 f0       	breq	.+22     	; 0x81c <__fp_splitA+0x10>
 806:	5f 3f       	cpi	r21, 0xFF	; 255
 808:	71 f0       	breq	.+28     	; 0x826 <__fp_splitA+0x1a>
 80a:	47 95       	ror	r20

0000080c <__fp_splitA>:
 80c:	88 0f       	add	r24, r24
 80e:	97 fb       	bst	r25, 7
 810:	99 1f       	adc	r25, r25
 812:	61 f0       	breq	.+24     	; 0x82c <__fp_splitA+0x20>
 814:	9f 3f       	cpi	r25, 0xFF	; 255
 816:	79 f0       	breq	.+30     	; 0x836 <__fp_splitA+0x2a>
 818:	87 95       	ror	r24
 81a:	08 95       	ret
 81c:	12 16       	cp	r1, r18
 81e:	13 06       	cpc	r1, r19
 820:	14 06       	cpc	r1, r20
 822:	55 1f       	adc	r21, r21
 824:	f2 cf       	rjmp	.-28     	; 0x80a <__fp_split3+0xe>
 826:	46 95       	lsr	r20
 828:	f1 df       	rcall	.-30     	; 0x80c <__fp_splitA>
 82a:	08 c0       	rjmp	.+16     	; 0x83c <__fp_splitA+0x30>
 82c:	16 16       	cp	r1, r22
 82e:	17 06       	cpc	r1, r23
 830:	18 06       	cpc	r1, r24
 832:	99 1f       	adc	r25, r25
 834:	f1 cf       	rjmp	.-30     	; 0x818 <__fp_splitA+0xc>
 836:	86 95       	lsr	r24
 838:	71 05       	cpc	r23, r1
 83a:	61 05       	cpc	r22, r1
 83c:	08 94       	sec
 83e:	08 95       	ret

00000840 <__fp_zero>:
 840:	e8 94       	clt

00000842 <__fp_szero>:
 842:	bb 27       	eor	r27, r27
 844:	66 27       	eor	r22, r22
 846:	77 27       	eor	r23, r23
 848:	cb 01       	movw	r24, r22
 84a:	97 f9       	bld	r25, 7
 84c:	08 95       	ret

0000084e <__gesf2>:
 84e:	b2 df       	rcall	.-156    	; 0x7b4 <__fp_cmp>
 850:	08 f4       	brcc	.+2      	; 0x854 <__gesf2+0x6>
 852:	8f ef       	ldi	r24, 0xFF	; 255
 854:	08 95       	ret

00000856 <__mulsf3>:
 856:	0b d0       	rcall	.+22     	; 0x86e <__mulsf3x>
 858:	78 c0       	rjmp	.+240    	; 0x94a <__fp_round>
 85a:	69 d0       	rcall	.+210    	; 0x92e <__fp_pscA>
 85c:	28 f0       	brcs	.+10     	; 0x868 <__mulsf3+0x12>
 85e:	6e d0       	rcall	.+220    	; 0x93c <__fp_pscB>
 860:	18 f0       	brcs	.+6      	; 0x868 <__mulsf3+0x12>
 862:	95 23       	and	r25, r21
 864:	09 f0       	breq	.+2      	; 0x868 <__mulsf3+0x12>
 866:	5a c0       	rjmp	.+180    	; 0x91c <__fp_inf>
 868:	5f c0       	rjmp	.+190    	; 0x928 <__fp_nan>
 86a:	11 24       	eor	r1, r1
 86c:	ea cf       	rjmp	.-44     	; 0x842 <__fp_szero>

0000086e <__mulsf3x>:
 86e:	c6 df       	rcall	.-116    	; 0x7fc <__fp_split3>
 870:	a0 f3       	brcs	.-24     	; 0x85a <__mulsf3+0x4>

00000872 <__mulsf3_pse>:
 872:	95 9f       	mul	r25, r21
 874:	d1 f3       	breq	.-12     	; 0x86a <__mulsf3+0x14>
 876:	95 0f       	add	r25, r21
 878:	50 e0       	ldi	r21, 0x00	; 0
 87a:	55 1f       	adc	r21, r21
 87c:	62 9f       	mul	r22, r18
 87e:	f0 01       	movw	r30, r0
 880:	72 9f       	mul	r23, r18
 882:	bb 27       	eor	r27, r27
 884:	f0 0d       	add	r31, r0
 886:	b1 1d       	adc	r27, r1
 888:	63 9f       	mul	r22, r19
 88a:	aa 27       	eor	r26, r26
 88c:	f0 0d       	add	r31, r0
 88e:	b1 1d       	adc	r27, r1
 890:	aa 1f       	adc	r26, r26
 892:	64 9f       	mul	r22, r20
 894:	66 27       	eor	r22, r22
 896:	b0 0d       	add	r27, r0
 898:	a1 1d       	adc	r26, r1
 89a:	66 1f       	adc	r22, r22
 89c:	82 9f       	mul	r24, r18
 89e:	22 27       	eor	r18, r18
 8a0:	b0 0d       	add	r27, r0
 8a2:	a1 1d       	adc	r26, r1
 8a4:	62 1f       	adc	r22, r18
 8a6:	73 9f       	mul	r23, r19
 8a8:	b0 0d       	add	r27, r0
 8aa:	a1 1d       	adc	r26, r1
 8ac:	62 1f       	adc	r22, r18
 8ae:	83 9f       	mul	r24, r19
 8b0:	a0 0d       	add	r26, r0
 8b2:	61 1d       	adc	r22, r1
 8b4:	22 1f       	adc	r18, r18
 8b6:	74 9f       	mul	r23, r20
 8b8:	33 27       	eor	r19, r19
 8ba:	a0 0d       	add	r26, r0
 8bc:	61 1d       	adc	r22, r1
 8be:	23 1f       	adc	r18, r19
 8c0:	84 9f       	mul	r24, r20
 8c2:	60 0d       	add	r22, r0
 8c4:	21 1d       	adc	r18, r1
 8c6:	82 2f       	mov	r24, r18
 8c8:	76 2f       	mov	r23, r22
 8ca:	6a 2f       	mov	r22, r26
 8cc:	11 24       	eor	r1, r1
 8ce:	9f 57       	subi	r25, 0x7F	; 127
 8d0:	50 40       	sbci	r21, 0x00	; 0
 8d2:	8a f0       	brmi	.+34     	; 0x8f6 <__mulsf3_pse+0x84>
 8d4:	e1 f0       	breq	.+56     	; 0x90e <__mulsf3_pse+0x9c>
 8d6:	88 23       	and	r24, r24
 8d8:	4a f0       	brmi	.+18     	; 0x8ec <__mulsf3_pse+0x7a>
 8da:	ee 0f       	add	r30, r30
 8dc:	ff 1f       	adc	r31, r31
 8de:	bb 1f       	adc	r27, r27
 8e0:	66 1f       	adc	r22, r22
 8e2:	77 1f       	adc	r23, r23
 8e4:	88 1f       	adc	r24, r24
 8e6:	91 50       	subi	r25, 0x01	; 1
 8e8:	50 40       	sbci	r21, 0x00	; 0
 8ea:	a9 f7       	brne	.-22     	; 0x8d6 <__mulsf3_pse+0x64>
 8ec:	9e 3f       	cpi	r25, 0xFE	; 254
 8ee:	51 05       	cpc	r21, r1
 8f0:	70 f0       	brcs	.+28     	; 0x90e <__mulsf3_pse+0x9c>
 8f2:	14 c0       	rjmp	.+40     	; 0x91c <__fp_inf>
 8f4:	a6 cf       	rjmp	.-180    	; 0x842 <__fp_szero>
 8f6:	5f 3f       	cpi	r21, 0xFF	; 255
 8f8:	ec f3       	brlt	.-6      	; 0x8f4 <__mulsf3_pse+0x82>
 8fa:	98 3e       	cpi	r25, 0xE8	; 232
 8fc:	dc f3       	brlt	.-10     	; 0x8f4 <__mulsf3_pse+0x82>
 8fe:	86 95       	lsr	r24
 900:	77 95       	ror	r23
 902:	67 95       	ror	r22
 904:	b7 95       	ror	r27
 906:	f7 95       	ror	r31
 908:	e7 95       	ror	r30
 90a:	9f 5f       	subi	r25, 0xFF	; 255
 90c:	c1 f7       	brne	.-16     	; 0x8fe <__mulsf3_pse+0x8c>
 90e:	fe 2b       	or	r31, r30
 910:	88 0f       	add	r24, r24
 912:	91 1d       	adc	r25, r1
 914:	96 95       	lsr	r25
 916:	87 95       	ror	r24
 918:	97 f9       	bld	r25, 7
 91a:	08 95       	ret

0000091c <__fp_inf>:
 91c:	97 f9       	bld	r25, 7
 91e:	9f 67       	ori	r25, 0x7F	; 127
 920:	80 e8       	ldi	r24, 0x80	; 128
 922:	70 e0       	ldi	r23, 0x00	; 0
 924:	60 e0       	ldi	r22, 0x00	; 0
 926:	08 95       	ret

00000928 <__fp_nan>:
 928:	9f ef       	ldi	r25, 0xFF	; 255
 92a:	80 ec       	ldi	r24, 0xC0	; 192
 92c:	08 95       	ret

0000092e <__fp_pscA>:
 92e:	00 24       	eor	r0, r0
 930:	0a 94       	dec	r0
 932:	16 16       	cp	r1, r22
 934:	17 06       	cpc	r1, r23
 936:	18 06       	cpc	r1, r24
 938:	09 06       	cpc	r0, r25
 93a:	08 95       	ret

0000093c <__fp_pscB>:
 93c:	00 24       	eor	r0, r0
 93e:	0a 94       	dec	r0
 940:	12 16       	cp	r1, r18
 942:	13 06       	cpc	r1, r19
 944:	14 06       	cpc	r1, r20
 946:	05 06       	cpc	r0, r21
 948:	08 95       	ret

0000094a <__fp_round>:
 94a:	09 2e       	mov	r0, r25
 94c:	03 94       	inc	r0
 94e:	00 0c       	add	r0, r0
 950:	11 f4       	brne	.+4      	; 0x956 <__fp_round+0xc>
 952:	88 23       	and	r24, r24
 954:	52 f0       	brmi	.+20     	; 0x96a <__fp_round+0x20>
 956:	bb 0f       	add	r27, r27
 958:	40 f4       	brcc	.+16     	; 0x96a <__fp_round+0x20>
 95a:	bf 2b       	or	r27, r31
 95c:	11 f4       	brne	.+4      	; 0x962 <__fp_round+0x18>
 95e:	60 ff       	sbrs	r22, 0
 960:	04 c0       	rjmp	.+8      	; 0x96a <__fp_round+0x20>
 962:	6f 5f       	subi	r22, 0xFF	; 255
 964:	7f 4f       	sbci	r23, 0xFF	; 255
 966:	8f 4f       	sbci	r24, 0xFF	; 255
 968:	9f 4f       	sbci	r25, 0xFF	; 255
 96a:	08 95       	ret

0000096c <sprintf>:
 96c:	0f 93       	push	r16
 96e:	1f 93       	push	r17
 970:	cf 93       	push	r28
 972:	df 93       	push	r29
 974:	cd b7       	in	r28, 0x3d	; 61
 976:	de b7       	in	r29, 0x3e	; 62
 978:	2e 97       	sbiw	r28, 0x0e	; 14
 97a:	0f b6       	in	r0, 0x3f	; 63
 97c:	f8 94       	cli
 97e:	de bf       	out	0x3e, r29	; 62
 980:	0f be       	out	0x3f, r0	; 63
 982:	cd bf       	out	0x3d, r28	; 61
 984:	0d 89       	ldd	r16, Y+21	; 0x15
 986:	1e 89       	ldd	r17, Y+22	; 0x16
 988:	86 e0       	ldi	r24, 0x06	; 6
 98a:	8c 83       	std	Y+4, r24	; 0x04
 98c:	1a 83       	std	Y+2, r17	; 0x02
 98e:	09 83       	std	Y+1, r16	; 0x01
 990:	8f ef       	ldi	r24, 0xFF	; 255
 992:	9f e7       	ldi	r25, 0x7F	; 127
 994:	9e 83       	std	Y+6, r25	; 0x06
 996:	8d 83       	std	Y+5, r24	; 0x05
 998:	ae 01       	movw	r20, r28
 99a:	47 5e       	subi	r20, 0xE7	; 231
 99c:	5f 4f       	sbci	r21, 0xFF	; 255
 99e:	ce 01       	movw	r24, r28
 9a0:	01 96       	adiw	r24, 0x01	; 1
 9a2:	6f 89       	ldd	r22, Y+23	; 0x17
 9a4:	78 8d       	ldd	r23, Y+24	; 0x18
 9a6:	0e 94 e5 04 	call	0x9ca	; 0x9ca <vfprintf>
 9aa:	ef 81       	ldd	r30, Y+7	; 0x07
 9ac:	f8 85       	ldd	r31, Y+8	; 0x08
 9ae:	e0 0f       	add	r30, r16
 9b0:	f1 1f       	adc	r31, r17
 9b2:	10 82       	st	Z, r1
 9b4:	2e 96       	adiw	r28, 0x0e	; 14
 9b6:	0f b6       	in	r0, 0x3f	; 63
 9b8:	f8 94       	cli
 9ba:	de bf       	out	0x3e, r29	; 62
 9bc:	0f be       	out	0x3f, r0	; 63
 9be:	cd bf       	out	0x3d, r28	; 61
 9c0:	df 91       	pop	r29
 9c2:	cf 91       	pop	r28
 9c4:	1f 91       	pop	r17
 9c6:	0f 91       	pop	r16
 9c8:	08 95       	ret

000009ca <vfprintf>:
 9ca:	2f 92       	push	r2
 9cc:	3f 92       	push	r3
 9ce:	4f 92       	push	r4
 9d0:	5f 92       	push	r5
 9d2:	6f 92       	push	r6
 9d4:	7f 92       	push	r7
 9d6:	8f 92       	push	r8
 9d8:	9f 92       	push	r9
 9da:	af 92       	push	r10
 9dc:	bf 92       	push	r11
 9de:	cf 92       	push	r12
 9e0:	df 92       	push	r13
 9e2:	ef 92       	push	r14
 9e4:	ff 92       	push	r15
 9e6:	0f 93       	push	r16
 9e8:	1f 93       	push	r17
 9ea:	cf 93       	push	r28
 9ec:	df 93       	push	r29
 9ee:	cd b7       	in	r28, 0x3d	; 61
 9f0:	de b7       	in	r29, 0x3e	; 62
 9f2:	2d 97       	sbiw	r28, 0x0d	; 13
 9f4:	0f b6       	in	r0, 0x3f	; 63
 9f6:	f8 94       	cli
 9f8:	de bf       	out	0x3e, r29	; 62
 9fa:	0f be       	out	0x3f, r0	; 63
 9fc:	cd bf       	out	0x3d, r28	; 61
 9fe:	3c 01       	movw	r6, r24
 a00:	7d 87       	std	Y+13, r23	; 0x0d
 a02:	6c 87       	std	Y+12, r22	; 0x0c
 a04:	5a 01       	movw	r10, r20
 a06:	fc 01       	movw	r30, r24
 a08:	17 82       	std	Z+7, r1	; 0x07
 a0a:	16 82       	std	Z+6, r1	; 0x06
 a0c:	83 81       	ldd	r24, Z+3	; 0x03
 a0e:	81 ff       	sbrs	r24, 1
 a10:	c8 c1       	rjmp	.+912    	; 0xda2 <vfprintf+0x3d8>
 a12:	2e 01       	movw	r4, r28
 a14:	08 94       	sec
 a16:	41 1c       	adc	r4, r1
 a18:	51 1c       	adc	r5, r1
 a1a:	f3 01       	movw	r30, r6
 a1c:	93 81       	ldd	r25, Z+3	; 0x03
 a1e:	ec 85       	ldd	r30, Y+12	; 0x0c
 a20:	fd 85       	ldd	r31, Y+13	; 0x0d
 a22:	93 fd       	sbrc	r25, 3
 a24:	85 91       	lpm	r24, Z+
 a26:	93 ff       	sbrs	r25, 3
 a28:	81 91       	ld	r24, Z+
 a2a:	fd 87       	std	Y+13, r31	; 0x0d
 a2c:	ec 87       	std	Y+12, r30	; 0x0c
 a2e:	88 23       	and	r24, r24
 a30:	09 f4       	brne	.+2      	; 0xa34 <vfprintf+0x6a>
 a32:	b3 c1       	rjmp	.+870    	; 0xd9a <vfprintf+0x3d0>
 a34:	85 32       	cpi	r24, 0x25	; 37
 a36:	41 f4       	brne	.+16     	; 0xa48 <vfprintf+0x7e>
 a38:	93 fd       	sbrc	r25, 3
 a3a:	85 91       	lpm	r24, Z+
 a3c:	93 ff       	sbrs	r25, 3
 a3e:	81 91       	ld	r24, Z+
 a40:	fd 87       	std	Y+13, r31	; 0x0d
 a42:	ec 87       	std	Y+12, r30	; 0x0c
 a44:	85 32       	cpi	r24, 0x25	; 37
 a46:	29 f4       	brne	.+10     	; 0xa52 <vfprintf+0x88>
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	b3 01       	movw	r22, r6
 a4c:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 a50:	e4 cf       	rjmp	.-56     	; 0xa1a <vfprintf+0x50>
 a52:	ff 24       	eor	r15, r15
 a54:	ee 24       	eor	r14, r14
 a56:	10 e0       	ldi	r17, 0x00	; 0
 a58:	10 32       	cpi	r17, 0x20	; 32
 a5a:	b0 f4       	brcc	.+44     	; 0xa88 <vfprintf+0xbe>
 a5c:	8b 32       	cpi	r24, 0x2B	; 43
 a5e:	69 f0       	breq	.+26     	; 0xa7a <vfprintf+0xb0>
 a60:	8c 32       	cpi	r24, 0x2C	; 44
 a62:	28 f4       	brcc	.+10     	; 0xa6e <vfprintf+0xa4>
 a64:	80 32       	cpi	r24, 0x20	; 32
 a66:	51 f0       	breq	.+20     	; 0xa7c <vfprintf+0xb2>
 a68:	83 32       	cpi	r24, 0x23	; 35
 a6a:	71 f4       	brne	.+28     	; 0xa88 <vfprintf+0xbe>
 a6c:	0b c0       	rjmp	.+22     	; 0xa84 <vfprintf+0xba>
 a6e:	8d 32       	cpi	r24, 0x2D	; 45
 a70:	39 f0       	breq	.+14     	; 0xa80 <vfprintf+0xb6>
 a72:	80 33       	cpi	r24, 0x30	; 48
 a74:	49 f4       	brne	.+18     	; 0xa88 <vfprintf+0xbe>
 a76:	11 60       	ori	r17, 0x01	; 1
 a78:	2c c0       	rjmp	.+88     	; 0xad2 <vfprintf+0x108>
 a7a:	12 60       	ori	r17, 0x02	; 2
 a7c:	14 60       	ori	r17, 0x04	; 4
 a7e:	29 c0       	rjmp	.+82     	; 0xad2 <vfprintf+0x108>
 a80:	18 60       	ori	r17, 0x08	; 8
 a82:	27 c0       	rjmp	.+78     	; 0xad2 <vfprintf+0x108>
 a84:	10 61       	ori	r17, 0x10	; 16
 a86:	25 c0       	rjmp	.+74     	; 0xad2 <vfprintf+0x108>
 a88:	17 fd       	sbrc	r17, 7
 a8a:	2e c0       	rjmp	.+92     	; 0xae8 <vfprintf+0x11e>
 a8c:	28 2f       	mov	r18, r24
 a8e:	20 53       	subi	r18, 0x30	; 48
 a90:	2a 30       	cpi	r18, 0x0A	; 10
 a92:	98 f4       	brcc	.+38     	; 0xaba <vfprintf+0xf0>
 a94:	16 ff       	sbrs	r17, 6
 a96:	08 c0       	rjmp	.+16     	; 0xaa8 <vfprintf+0xde>
 a98:	8f 2d       	mov	r24, r15
 a9a:	88 0f       	add	r24, r24
 a9c:	f8 2e       	mov	r15, r24
 a9e:	ff 0c       	add	r15, r15
 aa0:	ff 0c       	add	r15, r15
 aa2:	f8 0e       	add	r15, r24
 aa4:	f2 0e       	add	r15, r18
 aa6:	15 c0       	rjmp	.+42     	; 0xad2 <vfprintf+0x108>
 aa8:	8e 2d       	mov	r24, r14
 aaa:	88 0f       	add	r24, r24
 aac:	e8 2e       	mov	r14, r24
 aae:	ee 0c       	add	r14, r14
 ab0:	ee 0c       	add	r14, r14
 ab2:	e8 0e       	add	r14, r24
 ab4:	e2 0e       	add	r14, r18
 ab6:	10 62       	ori	r17, 0x20	; 32
 ab8:	0c c0       	rjmp	.+24     	; 0xad2 <vfprintf+0x108>
 aba:	8e 32       	cpi	r24, 0x2E	; 46
 abc:	21 f4       	brne	.+8      	; 0xac6 <vfprintf+0xfc>
 abe:	16 fd       	sbrc	r17, 6
 ac0:	6c c1       	rjmp	.+728    	; 0xd9a <vfprintf+0x3d0>
 ac2:	10 64       	ori	r17, 0x40	; 64
 ac4:	06 c0       	rjmp	.+12     	; 0xad2 <vfprintf+0x108>
 ac6:	8c 36       	cpi	r24, 0x6C	; 108
 ac8:	11 f4       	brne	.+4      	; 0xace <vfprintf+0x104>
 aca:	10 68       	ori	r17, 0x80	; 128
 acc:	02 c0       	rjmp	.+4      	; 0xad2 <vfprintf+0x108>
 ace:	88 36       	cpi	r24, 0x68	; 104
 ad0:	59 f4       	brne	.+22     	; 0xae8 <vfprintf+0x11e>
 ad2:	ec 85       	ldd	r30, Y+12	; 0x0c
 ad4:	fd 85       	ldd	r31, Y+13	; 0x0d
 ad6:	93 fd       	sbrc	r25, 3
 ad8:	85 91       	lpm	r24, Z+
 ada:	93 ff       	sbrs	r25, 3
 adc:	81 91       	ld	r24, Z+
 ade:	fd 87       	std	Y+13, r31	; 0x0d
 ae0:	ec 87       	std	Y+12, r30	; 0x0c
 ae2:	88 23       	and	r24, r24
 ae4:	09 f0       	breq	.+2      	; 0xae8 <vfprintf+0x11e>
 ae6:	b8 cf       	rjmp	.-144    	; 0xa58 <vfprintf+0x8e>
 ae8:	98 2f       	mov	r25, r24
 aea:	95 54       	subi	r25, 0x45	; 69
 aec:	93 30       	cpi	r25, 0x03	; 3
 aee:	18 f0       	brcs	.+6      	; 0xaf6 <vfprintf+0x12c>
 af0:	90 52       	subi	r25, 0x20	; 32
 af2:	93 30       	cpi	r25, 0x03	; 3
 af4:	38 f4       	brcc	.+14     	; 0xb04 <vfprintf+0x13a>
 af6:	24 e0       	ldi	r18, 0x04	; 4
 af8:	30 e0       	ldi	r19, 0x00	; 0
 afa:	a2 0e       	add	r10, r18
 afc:	b3 1e       	adc	r11, r19
 afe:	3f e3       	ldi	r19, 0x3F	; 63
 b00:	39 83       	std	Y+1, r19	; 0x01
 b02:	0f c0       	rjmp	.+30     	; 0xb22 <vfprintf+0x158>
 b04:	83 36       	cpi	r24, 0x63	; 99
 b06:	31 f0       	breq	.+12     	; 0xb14 <vfprintf+0x14a>
 b08:	83 37       	cpi	r24, 0x73	; 115
 b0a:	81 f0       	breq	.+32     	; 0xb2c <vfprintf+0x162>
 b0c:	83 35       	cpi	r24, 0x53	; 83
 b0e:	09 f0       	breq	.+2      	; 0xb12 <vfprintf+0x148>
 b10:	5a c0       	rjmp	.+180    	; 0xbc6 <vfprintf+0x1fc>
 b12:	22 c0       	rjmp	.+68     	; 0xb58 <vfprintf+0x18e>
 b14:	f5 01       	movw	r30, r10
 b16:	80 81       	ld	r24, Z
 b18:	89 83       	std	Y+1, r24	; 0x01
 b1a:	22 e0       	ldi	r18, 0x02	; 2
 b1c:	30 e0       	ldi	r19, 0x00	; 0
 b1e:	a2 0e       	add	r10, r18
 b20:	b3 1e       	adc	r11, r19
 b22:	21 e0       	ldi	r18, 0x01	; 1
 b24:	c2 2e       	mov	r12, r18
 b26:	d1 2c       	mov	r13, r1
 b28:	42 01       	movw	r8, r4
 b2a:	14 c0       	rjmp	.+40     	; 0xb54 <vfprintf+0x18a>
 b2c:	92 e0       	ldi	r25, 0x02	; 2
 b2e:	29 2e       	mov	r2, r25
 b30:	31 2c       	mov	r3, r1
 b32:	2a 0c       	add	r2, r10
 b34:	3b 1c       	adc	r3, r11
 b36:	f5 01       	movw	r30, r10
 b38:	80 80       	ld	r8, Z
 b3a:	91 80       	ldd	r9, Z+1	; 0x01
 b3c:	16 ff       	sbrs	r17, 6
 b3e:	03 c0       	rjmp	.+6      	; 0xb46 <vfprintf+0x17c>
 b40:	6f 2d       	mov	r22, r15
 b42:	70 e0       	ldi	r23, 0x00	; 0
 b44:	02 c0       	rjmp	.+4      	; 0xb4a <vfprintf+0x180>
 b46:	6f ef       	ldi	r22, 0xFF	; 255
 b48:	7f ef       	ldi	r23, 0xFF	; 255
 b4a:	c4 01       	movw	r24, r8
 b4c:	0e 94 f7 06 	call	0xdee	; 0xdee <strnlen>
 b50:	6c 01       	movw	r12, r24
 b52:	51 01       	movw	r10, r2
 b54:	1f 77       	andi	r17, 0x7F	; 127
 b56:	15 c0       	rjmp	.+42     	; 0xb82 <vfprintf+0x1b8>
 b58:	82 e0       	ldi	r24, 0x02	; 2
 b5a:	28 2e       	mov	r2, r24
 b5c:	31 2c       	mov	r3, r1
 b5e:	2a 0c       	add	r2, r10
 b60:	3b 1c       	adc	r3, r11
 b62:	f5 01       	movw	r30, r10
 b64:	80 80       	ld	r8, Z
 b66:	91 80       	ldd	r9, Z+1	; 0x01
 b68:	16 ff       	sbrs	r17, 6
 b6a:	03 c0       	rjmp	.+6      	; 0xb72 <vfprintf+0x1a8>
 b6c:	6f 2d       	mov	r22, r15
 b6e:	70 e0       	ldi	r23, 0x00	; 0
 b70:	02 c0       	rjmp	.+4      	; 0xb76 <vfprintf+0x1ac>
 b72:	6f ef       	ldi	r22, 0xFF	; 255
 b74:	7f ef       	ldi	r23, 0xFF	; 255
 b76:	c4 01       	movw	r24, r8
 b78:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <strnlen_P>
 b7c:	6c 01       	movw	r12, r24
 b7e:	10 68       	ori	r17, 0x80	; 128
 b80:	51 01       	movw	r10, r2
 b82:	13 fd       	sbrc	r17, 3
 b84:	1c c0       	rjmp	.+56     	; 0xbbe <vfprintf+0x1f4>
 b86:	06 c0       	rjmp	.+12     	; 0xb94 <vfprintf+0x1ca>
 b88:	80 e2       	ldi	r24, 0x20	; 32
 b8a:	90 e0       	ldi	r25, 0x00	; 0
 b8c:	b3 01       	movw	r22, r6
 b8e:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 b92:	ea 94       	dec	r14
 b94:	8e 2d       	mov	r24, r14
 b96:	90 e0       	ldi	r25, 0x00	; 0
 b98:	c8 16       	cp	r12, r24
 b9a:	d9 06       	cpc	r13, r25
 b9c:	a8 f3       	brcs	.-22     	; 0xb88 <vfprintf+0x1be>
 b9e:	0f c0       	rjmp	.+30     	; 0xbbe <vfprintf+0x1f4>
 ba0:	f4 01       	movw	r30, r8
 ba2:	17 fd       	sbrc	r17, 7
 ba4:	85 91       	lpm	r24, Z+
 ba6:	17 ff       	sbrs	r17, 7
 ba8:	81 91       	ld	r24, Z+
 baa:	4f 01       	movw	r8, r30
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	b3 01       	movw	r22, r6
 bb0:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 bb4:	e1 10       	cpse	r14, r1
 bb6:	ea 94       	dec	r14
 bb8:	08 94       	sec
 bba:	c1 08       	sbc	r12, r1
 bbc:	d1 08       	sbc	r13, r1
 bbe:	c1 14       	cp	r12, r1
 bc0:	d1 04       	cpc	r13, r1
 bc2:	71 f7       	brne	.-36     	; 0xba0 <vfprintf+0x1d6>
 bc4:	e7 c0       	rjmp	.+462    	; 0xd94 <vfprintf+0x3ca>
 bc6:	84 36       	cpi	r24, 0x64	; 100
 bc8:	11 f0       	breq	.+4      	; 0xbce <vfprintf+0x204>
 bca:	89 36       	cpi	r24, 0x69	; 105
 bcc:	51 f5       	brne	.+84     	; 0xc22 <vfprintf+0x258>
 bce:	f5 01       	movw	r30, r10
 bd0:	17 ff       	sbrs	r17, 7
 bd2:	07 c0       	rjmp	.+14     	; 0xbe2 <vfprintf+0x218>
 bd4:	80 81       	ld	r24, Z
 bd6:	91 81       	ldd	r25, Z+1	; 0x01
 bd8:	a2 81       	ldd	r26, Z+2	; 0x02
 bda:	b3 81       	ldd	r27, Z+3	; 0x03
 bdc:	24 e0       	ldi	r18, 0x04	; 4
 bde:	30 e0       	ldi	r19, 0x00	; 0
 be0:	08 c0       	rjmp	.+16     	; 0xbf2 <vfprintf+0x228>
 be2:	80 81       	ld	r24, Z
 be4:	91 81       	ldd	r25, Z+1	; 0x01
 be6:	aa 27       	eor	r26, r26
 be8:	97 fd       	sbrc	r25, 7
 bea:	a0 95       	com	r26
 bec:	ba 2f       	mov	r27, r26
 bee:	22 e0       	ldi	r18, 0x02	; 2
 bf0:	30 e0       	ldi	r19, 0x00	; 0
 bf2:	a2 0e       	add	r10, r18
 bf4:	b3 1e       	adc	r11, r19
 bf6:	01 2f       	mov	r16, r17
 bf8:	0f 76       	andi	r16, 0x6F	; 111
 bfa:	b7 ff       	sbrs	r27, 7
 bfc:	08 c0       	rjmp	.+16     	; 0xc0e <vfprintf+0x244>
 bfe:	b0 95       	com	r27
 c00:	a0 95       	com	r26
 c02:	90 95       	com	r25
 c04:	81 95       	neg	r24
 c06:	9f 4f       	sbci	r25, 0xFF	; 255
 c08:	af 4f       	sbci	r26, 0xFF	; 255
 c0a:	bf 4f       	sbci	r27, 0xFF	; 255
 c0c:	00 68       	ori	r16, 0x80	; 128
 c0e:	bc 01       	movw	r22, r24
 c10:	cd 01       	movw	r24, r26
 c12:	a2 01       	movw	r20, r4
 c14:	2a e0       	ldi	r18, 0x0A	; 10
 c16:	30 e0       	ldi	r19, 0x00	; 0
 c18:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__ultoa_invert>
 c1c:	d8 2e       	mov	r13, r24
 c1e:	d4 18       	sub	r13, r4
 c20:	3f c0       	rjmp	.+126    	; 0xca0 <vfprintf+0x2d6>
 c22:	85 37       	cpi	r24, 0x75	; 117
 c24:	21 f4       	brne	.+8      	; 0xc2e <vfprintf+0x264>
 c26:	1f 7e       	andi	r17, 0xEF	; 239
 c28:	2a e0       	ldi	r18, 0x0A	; 10
 c2a:	30 e0       	ldi	r19, 0x00	; 0
 c2c:	20 c0       	rjmp	.+64     	; 0xc6e <vfprintf+0x2a4>
 c2e:	19 7f       	andi	r17, 0xF9	; 249
 c30:	8f 36       	cpi	r24, 0x6F	; 111
 c32:	a9 f0       	breq	.+42     	; 0xc5e <vfprintf+0x294>
 c34:	80 37       	cpi	r24, 0x70	; 112
 c36:	20 f4       	brcc	.+8      	; 0xc40 <vfprintf+0x276>
 c38:	88 35       	cpi	r24, 0x58	; 88
 c3a:	09 f0       	breq	.+2      	; 0xc3e <vfprintf+0x274>
 c3c:	ae c0       	rjmp	.+348    	; 0xd9a <vfprintf+0x3d0>
 c3e:	0b c0       	rjmp	.+22     	; 0xc56 <vfprintf+0x28c>
 c40:	80 37       	cpi	r24, 0x70	; 112
 c42:	21 f0       	breq	.+8      	; 0xc4c <vfprintf+0x282>
 c44:	88 37       	cpi	r24, 0x78	; 120
 c46:	09 f0       	breq	.+2      	; 0xc4a <vfprintf+0x280>
 c48:	a8 c0       	rjmp	.+336    	; 0xd9a <vfprintf+0x3d0>
 c4a:	01 c0       	rjmp	.+2      	; 0xc4e <vfprintf+0x284>
 c4c:	10 61       	ori	r17, 0x10	; 16
 c4e:	14 ff       	sbrs	r17, 4
 c50:	09 c0       	rjmp	.+18     	; 0xc64 <vfprintf+0x29a>
 c52:	14 60       	ori	r17, 0x04	; 4
 c54:	07 c0       	rjmp	.+14     	; 0xc64 <vfprintf+0x29a>
 c56:	14 ff       	sbrs	r17, 4
 c58:	08 c0       	rjmp	.+16     	; 0xc6a <vfprintf+0x2a0>
 c5a:	16 60       	ori	r17, 0x06	; 6
 c5c:	06 c0       	rjmp	.+12     	; 0xc6a <vfprintf+0x2a0>
 c5e:	28 e0       	ldi	r18, 0x08	; 8
 c60:	30 e0       	ldi	r19, 0x00	; 0
 c62:	05 c0       	rjmp	.+10     	; 0xc6e <vfprintf+0x2a4>
 c64:	20 e1       	ldi	r18, 0x10	; 16
 c66:	30 e0       	ldi	r19, 0x00	; 0
 c68:	02 c0       	rjmp	.+4      	; 0xc6e <vfprintf+0x2a4>
 c6a:	20 e1       	ldi	r18, 0x10	; 16
 c6c:	32 e0       	ldi	r19, 0x02	; 2
 c6e:	f5 01       	movw	r30, r10
 c70:	17 ff       	sbrs	r17, 7
 c72:	07 c0       	rjmp	.+14     	; 0xc82 <vfprintf+0x2b8>
 c74:	60 81       	ld	r22, Z
 c76:	71 81       	ldd	r23, Z+1	; 0x01
 c78:	82 81       	ldd	r24, Z+2	; 0x02
 c7a:	93 81       	ldd	r25, Z+3	; 0x03
 c7c:	44 e0       	ldi	r20, 0x04	; 4
 c7e:	50 e0       	ldi	r21, 0x00	; 0
 c80:	06 c0       	rjmp	.+12     	; 0xc8e <vfprintf+0x2c4>
 c82:	60 81       	ld	r22, Z
 c84:	71 81       	ldd	r23, Z+1	; 0x01
 c86:	80 e0       	ldi	r24, 0x00	; 0
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	42 e0       	ldi	r20, 0x02	; 2
 c8c:	50 e0       	ldi	r21, 0x00	; 0
 c8e:	a4 0e       	add	r10, r20
 c90:	b5 1e       	adc	r11, r21
 c92:	a2 01       	movw	r20, r4
 c94:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__ultoa_invert>
 c98:	d8 2e       	mov	r13, r24
 c9a:	d4 18       	sub	r13, r4
 c9c:	01 2f       	mov	r16, r17
 c9e:	0f 77       	andi	r16, 0x7F	; 127
 ca0:	06 ff       	sbrs	r16, 6
 ca2:	09 c0       	rjmp	.+18     	; 0xcb6 <vfprintf+0x2ec>
 ca4:	0e 7f       	andi	r16, 0xFE	; 254
 ca6:	df 14       	cp	r13, r15
 ca8:	30 f4       	brcc	.+12     	; 0xcb6 <vfprintf+0x2ec>
 caa:	04 ff       	sbrs	r16, 4
 cac:	06 c0       	rjmp	.+12     	; 0xcba <vfprintf+0x2f0>
 cae:	02 fd       	sbrc	r16, 2
 cb0:	04 c0       	rjmp	.+8      	; 0xcba <vfprintf+0x2f0>
 cb2:	0f 7e       	andi	r16, 0xEF	; 239
 cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0x2f0>
 cb6:	1d 2d       	mov	r17, r13
 cb8:	01 c0       	rjmp	.+2      	; 0xcbc <vfprintf+0x2f2>
 cba:	1f 2d       	mov	r17, r15
 cbc:	80 2f       	mov	r24, r16
 cbe:	90 e0       	ldi	r25, 0x00	; 0
 cc0:	04 ff       	sbrs	r16, 4
 cc2:	0c c0       	rjmp	.+24     	; 0xcdc <vfprintf+0x312>
 cc4:	fe 01       	movw	r30, r28
 cc6:	ed 0d       	add	r30, r13
 cc8:	f1 1d       	adc	r31, r1
 cca:	20 81       	ld	r18, Z
 ccc:	20 33       	cpi	r18, 0x30	; 48
 cce:	11 f4       	brne	.+4      	; 0xcd4 <vfprintf+0x30a>
 cd0:	09 7e       	andi	r16, 0xE9	; 233
 cd2:	09 c0       	rjmp	.+18     	; 0xce6 <vfprintf+0x31c>
 cd4:	02 ff       	sbrs	r16, 2
 cd6:	06 c0       	rjmp	.+12     	; 0xce4 <vfprintf+0x31a>
 cd8:	1e 5f       	subi	r17, 0xFE	; 254
 cda:	05 c0       	rjmp	.+10     	; 0xce6 <vfprintf+0x31c>
 cdc:	86 78       	andi	r24, 0x86	; 134
 cde:	90 70       	andi	r25, 0x00	; 0
 ce0:	00 97       	sbiw	r24, 0x00	; 0
 ce2:	09 f0       	breq	.+2      	; 0xce6 <vfprintf+0x31c>
 ce4:	1f 5f       	subi	r17, 0xFF	; 255
 ce6:	80 2e       	mov	r8, r16
 ce8:	99 24       	eor	r9, r9
 cea:	03 fd       	sbrc	r16, 3
 cec:	12 c0       	rjmp	.+36     	; 0xd12 <vfprintf+0x348>
 cee:	00 ff       	sbrs	r16, 0
 cf0:	0d c0       	rjmp	.+26     	; 0xd0c <vfprintf+0x342>
 cf2:	fd 2c       	mov	r15, r13
 cf4:	1e 15       	cp	r17, r14
 cf6:	50 f4       	brcc	.+20     	; 0xd0c <vfprintf+0x342>
 cf8:	fe 0c       	add	r15, r14
 cfa:	f1 1a       	sub	r15, r17
 cfc:	1e 2d       	mov	r17, r14
 cfe:	06 c0       	rjmp	.+12     	; 0xd0c <vfprintf+0x342>
 d00:	80 e2       	ldi	r24, 0x20	; 32
 d02:	90 e0       	ldi	r25, 0x00	; 0
 d04:	b3 01       	movw	r22, r6
 d06:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 d0a:	1f 5f       	subi	r17, 0xFF	; 255
 d0c:	1e 15       	cp	r17, r14
 d0e:	c0 f3       	brcs	.-16     	; 0xd00 <vfprintf+0x336>
 d10:	04 c0       	rjmp	.+8      	; 0xd1a <vfprintf+0x350>
 d12:	1e 15       	cp	r17, r14
 d14:	10 f4       	brcc	.+4      	; 0xd1a <vfprintf+0x350>
 d16:	e1 1a       	sub	r14, r17
 d18:	01 c0       	rjmp	.+2      	; 0xd1c <vfprintf+0x352>
 d1a:	ee 24       	eor	r14, r14
 d1c:	84 fe       	sbrs	r8, 4
 d1e:	0f c0       	rjmp	.+30     	; 0xd3e <vfprintf+0x374>
 d20:	80 e3       	ldi	r24, 0x30	; 48
 d22:	90 e0       	ldi	r25, 0x00	; 0
 d24:	b3 01       	movw	r22, r6
 d26:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 d2a:	82 fe       	sbrs	r8, 2
 d2c:	1f c0       	rjmp	.+62     	; 0xd6c <vfprintf+0x3a2>
 d2e:	81 fe       	sbrs	r8, 1
 d30:	03 c0       	rjmp	.+6      	; 0xd38 <vfprintf+0x36e>
 d32:	88 e5       	ldi	r24, 0x58	; 88
 d34:	90 e0       	ldi	r25, 0x00	; 0
 d36:	10 c0       	rjmp	.+32     	; 0xd58 <vfprintf+0x38e>
 d38:	88 e7       	ldi	r24, 0x78	; 120
 d3a:	90 e0       	ldi	r25, 0x00	; 0
 d3c:	0d c0       	rjmp	.+26     	; 0xd58 <vfprintf+0x38e>
 d3e:	c4 01       	movw	r24, r8
 d40:	86 78       	andi	r24, 0x86	; 134
 d42:	90 70       	andi	r25, 0x00	; 0
 d44:	00 97       	sbiw	r24, 0x00	; 0
 d46:	91 f0       	breq	.+36     	; 0xd6c <vfprintf+0x3a2>
 d48:	81 fc       	sbrc	r8, 1
 d4a:	02 c0       	rjmp	.+4      	; 0xd50 <vfprintf+0x386>
 d4c:	80 e2       	ldi	r24, 0x20	; 32
 d4e:	01 c0       	rjmp	.+2      	; 0xd52 <vfprintf+0x388>
 d50:	8b e2       	ldi	r24, 0x2B	; 43
 d52:	07 fd       	sbrc	r16, 7
 d54:	8d e2       	ldi	r24, 0x2D	; 45
 d56:	90 e0       	ldi	r25, 0x00	; 0
 d58:	b3 01       	movw	r22, r6
 d5a:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 d5e:	06 c0       	rjmp	.+12     	; 0xd6c <vfprintf+0x3a2>
 d60:	80 e3       	ldi	r24, 0x30	; 48
 d62:	90 e0       	ldi	r25, 0x00	; 0
 d64:	b3 01       	movw	r22, r6
 d66:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 d6a:	fa 94       	dec	r15
 d6c:	df 14       	cp	r13, r15
 d6e:	c0 f3       	brcs	.-16     	; 0xd60 <vfprintf+0x396>
 d70:	da 94       	dec	r13
 d72:	f2 01       	movw	r30, r4
 d74:	ed 0d       	add	r30, r13
 d76:	f1 1d       	adc	r31, r1
 d78:	80 81       	ld	r24, Z
 d7a:	90 e0       	ldi	r25, 0x00	; 0
 d7c:	b3 01       	movw	r22, r6
 d7e:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 d82:	dd 20       	and	r13, r13
 d84:	a9 f7       	brne	.-22     	; 0xd70 <vfprintf+0x3a6>
 d86:	06 c0       	rjmp	.+12     	; 0xd94 <vfprintf+0x3ca>
 d88:	80 e2       	ldi	r24, 0x20	; 32
 d8a:	90 e0       	ldi	r25, 0x00	; 0
 d8c:	b3 01       	movw	r22, r6
 d8e:	0e 94 02 07 	call	0xe04	; 0xe04 <fputc>
 d92:	ea 94       	dec	r14
 d94:	ee 20       	and	r14, r14
 d96:	c1 f7       	brne	.-16     	; 0xd88 <vfprintf+0x3be>
 d98:	40 ce       	rjmp	.-896    	; 0xa1a <vfprintf+0x50>
 d9a:	f3 01       	movw	r30, r6
 d9c:	86 81       	ldd	r24, Z+6	; 0x06
 d9e:	97 81       	ldd	r25, Z+7	; 0x07
 da0:	02 c0       	rjmp	.+4      	; 0xda6 <vfprintf+0x3dc>
 da2:	8f ef       	ldi	r24, 0xFF	; 255
 da4:	9f ef       	ldi	r25, 0xFF	; 255
 da6:	2d 96       	adiw	r28, 0x0d	; 13
 da8:	0f b6       	in	r0, 0x3f	; 63
 daa:	f8 94       	cli
 dac:	de bf       	out	0x3e, r29	; 62
 dae:	0f be       	out	0x3f, r0	; 63
 db0:	cd bf       	out	0x3d, r28	; 61
 db2:	df 91       	pop	r29
 db4:	cf 91       	pop	r28
 db6:	1f 91       	pop	r17
 db8:	0f 91       	pop	r16
 dba:	ff 90       	pop	r15
 dbc:	ef 90       	pop	r14
 dbe:	df 90       	pop	r13
 dc0:	cf 90       	pop	r12
 dc2:	bf 90       	pop	r11
 dc4:	af 90       	pop	r10
 dc6:	9f 90       	pop	r9
 dc8:	8f 90       	pop	r8
 dca:	7f 90       	pop	r7
 dcc:	6f 90       	pop	r6
 dce:	5f 90       	pop	r5
 dd0:	4f 90       	pop	r4
 dd2:	3f 90       	pop	r3
 dd4:	2f 90       	pop	r2
 dd6:	08 95       	ret

00000dd8 <strnlen_P>:
 dd8:	fc 01       	movw	r30, r24
 dda:	05 90       	lpm	r0, Z+
 ddc:	61 50       	subi	r22, 0x01	; 1
 dde:	70 40       	sbci	r23, 0x00	; 0
 de0:	01 10       	cpse	r0, r1
 de2:	d8 f7       	brcc	.-10     	; 0xdda <strnlen_P+0x2>
 de4:	80 95       	com	r24
 de6:	90 95       	com	r25
 de8:	8e 0f       	add	r24, r30
 dea:	9f 1f       	adc	r25, r31
 dec:	08 95       	ret

00000dee <strnlen>:
 dee:	fc 01       	movw	r30, r24
 df0:	61 50       	subi	r22, 0x01	; 1
 df2:	70 40       	sbci	r23, 0x00	; 0
 df4:	01 90       	ld	r0, Z+
 df6:	01 10       	cpse	r0, r1
 df8:	d8 f7       	brcc	.-10     	; 0xdf0 <strnlen+0x2>
 dfa:	80 95       	com	r24
 dfc:	90 95       	com	r25
 dfe:	8e 0f       	add	r24, r30
 e00:	9f 1f       	adc	r25, r31
 e02:	08 95       	ret

00000e04 <fputc>:
 e04:	0f 93       	push	r16
 e06:	1f 93       	push	r17
 e08:	cf 93       	push	r28
 e0a:	df 93       	push	r29
 e0c:	8c 01       	movw	r16, r24
 e0e:	eb 01       	movw	r28, r22
 e10:	8b 81       	ldd	r24, Y+3	; 0x03
 e12:	81 ff       	sbrs	r24, 1
 e14:	1b c0       	rjmp	.+54     	; 0xe4c <fputc+0x48>
 e16:	82 ff       	sbrs	r24, 2
 e18:	0d c0       	rjmp	.+26     	; 0xe34 <fputc+0x30>
 e1a:	2e 81       	ldd	r18, Y+6	; 0x06
 e1c:	3f 81       	ldd	r19, Y+7	; 0x07
 e1e:	8c 81       	ldd	r24, Y+4	; 0x04
 e20:	9d 81       	ldd	r25, Y+5	; 0x05
 e22:	28 17       	cp	r18, r24
 e24:	39 07       	cpc	r19, r25
 e26:	64 f4       	brge	.+24     	; 0xe40 <fputc+0x3c>
 e28:	e8 81       	ld	r30, Y
 e2a:	f9 81       	ldd	r31, Y+1	; 0x01
 e2c:	01 93       	st	Z+, r16
 e2e:	f9 83       	std	Y+1, r31	; 0x01
 e30:	e8 83       	st	Y, r30
 e32:	06 c0       	rjmp	.+12     	; 0xe40 <fputc+0x3c>
 e34:	e8 85       	ldd	r30, Y+8	; 0x08
 e36:	f9 85       	ldd	r31, Y+9	; 0x09
 e38:	80 2f       	mov	r24, r16
 e3a:	09 95       	icall
 e3c:	00 97       	sbiw	r24, 0x00	; 0
 e3e:	31 f4       	brne	.+12     	; 0xe4c <fputc+0x48>
 e40:	8e 81       	ldd	r24, Y+6	; 0x06
 e42:	9f 81       	ldd	r25, Y+7	; 0x07
 e44:	01 96       	adiw	r24, 0x01	; 1
 e46:	9f 83       	std	Y+7, r25	; 0x07
 e48:	8e 83       	std	Y+6, r24	; 0x06
 e4a:	02 c0       	rjmp	.+4      	; 0xe50 <fputc+0x4c>
 e4c:	0f ef       	ldi	r16, 0xFF	; 255
 e4e:	1f ef       	ldi	r17, 0xFF	; 255
 e50:	c8 01       	movw	r24, r16
 e52:	df 91       	pop	r29
 e54:	cf 91       	pop	r28
 e56:	1f 91       	pop	r17
 e58:	0f 91       	pop	r16
 e5a:	08 95       	ret

00000e5c <__ultoa_invert>:
 e5c:	fa 01       	movw	r30, r20
 e5e:	aa 27       	eor	r26, r26
 e60:	28 30       	cpi	r18, 0x08	; 8
 e62:	51 f1       	breq	.+84     	; 0xeb8 <__ultoa_invert+0x5c>
 e64:	20 31       	cpi	r18, 0x10	; 16
 e66:	81 f1       	breq	.+96     	; 0xec8 <__ultoa_invert+0x6c>
 e68:	e8 94       	clt
 e6a:	6f 93       	push	r22
 e6c:	6e 7f       	andi	r22, 0xFE	; 254
 e6e:	6e 5f       	subi	r22, 0xFE	; 254
 e70:	7f 4f       	sbci	r23, 0xFF	; 255
 e72:	8f 4f       	sbci	r24, 0xFF	; 255
 e74:	9f 4f       	sbci	r25, 0xFF	; 255
 e76:	af 4f       	sbci	r26, 0xFF	; 255
 e78:	b1 e0       	ldi	r27, 0x01	; 1
 e7a:	3e d0       	rcall	.+124    	; 0xef8 <__ultoa_invert+0x9c>
 e7c:	b4 e0       	ldi	r27, 0x04	; 4
 e7e:	3c d0       	rcall	.+120    	; 0xef8 <__ultoa_invert+0x9c>
 e80:	67 0f       	add	r22, r23
 e82:	78 1f       	adc	r23, r24
 e84:	89 1f       	adc	r24, r25
 e86:	9a 1f       	adc	r25, r26
 e88:	a1 1d       	adc	r26, r1
 e8a:	68 0f       	add	r22, r24
 e8c:	79 1f       	adc	r23, r25
 e8e:	8a 1f       	adc	r24, r26
 e90:	91 1d       	adc	r25, r1
 e92:	a1 1d       	adc	r26, r1
 e94:	6a 0f       	add	r22, r26
 e96:	71 1d       	adc	r23, r1
 e98:	81 1d       	adc	r24, r1
 e9a:	91 1d       	adc	r25, r1
 e9c:	a1 1d       	adc	r26, r1
 e9e:	20 d0       	rcall	.+64     	; 0xee0 <__ultoa_invert+0x84>
 ea0:	09 f4       	brne	.+2      	; 0xea4 <__ultoa_invert+0x48>
 ea2:	68 94       	set
 ea4:	3f 91       	pop	r19
 ea6:	2a e0       	ldi	r18, 0x0A	; 10
 ea8:	26 9f       	mul	r18, r22
 eaa:	11 24       	eor	r1, r1
 eac:	30 19       	sub	r19, r0
 eae:	30 5d       	subi	r19, 0xD0	; 208
 eb0:	31 93       	st	Z+, r19
 eb2:	de f6       	brtc	.-74     	; 0xe6a <__ultoa_invert+0xe>
 eb4:	cf 01       	movw	r24, r30
 eb6:	08 95       	ret
 eb8:	46 2f       	mov	r20, r22
 eba:	47 70       	andi	r20, 0x07	; 7
 ebc:	40 5d       	subi	r20, 0xD0	; 208
 ebe:	41 93       	st	Z+, r20
 ec0:	b3 e0       	ldi	r27, 0x03	; 3
 ec2:	0f d0       	rcall	.+30     	; 0xee2 <__ultoa_invert+0x86>
 ec4:	c9 f7       	brne	.-14     	; 0xeb8 <__ultoa_invert+0x5c>
 ec6:	f6 cf       	rjmp	.-20     	; 0xeb4 <__ultoa_invert+0x58>
 ec8:	46 2f       	mov	r20, r22
 eca:	4f 70       	andi	r20, 0x0F	; 15
 ecc:	40 5d       	subi	r20, 0xD0	; 208
 ece:	4a 33       	cpi	r20, 0x3A	; 58
 ed0:	18 f0       	brcs	.+6      	; 0xed8 <__ultoa_invert+0x7c>
 ed2:	49 5d       	subi	r20, 0xD9	; 217
 ed4:	31 fd       	sbrc	r19, 1
 ed6:	40 52       	subi	r20, 0x20	; 32
 ed8:	41 93       	st	Z+, r20
 eda:	02 d0       	rcall	.+4      	; 0xee0 <__ultoa_invert+0x84>
 edc:	a9 f7       	brne	.-22     	; 0xec8 <__ultoa_invert+0x6c>
 ede:	ea cf       	rjmp	.-44     	; 0xeb4 <__ultoa_invert+0x58>
 ee0:	b4 e0       	ldi	r27, 0x04	; 4
 ee2:	a6 95       	lsr	r26
 ee4:	97 95       	ror	r25
 ee6:	87 95       	ror	r24
 ee8:	77 95       	ror	r23
 eea:	67 95       	ror	r22
 eec:	ba 95       	dec	r27
 eee:	c9 f7       	brne	.-14     	; 0xee2 <__ultoa_invert+0x86>
 ef0:	00 97       	sbiw	r24, 0x00	; 0
 ef2:	61 05       	cpc	r22, r1
 ef4:	71 05       	cpc	r23, r1
 ef6:	08 95       	ret
 ef8:	9b 01       	movw	r18, r22
 efa:	ac 01       	movw	r20, r24
 efc:	0a 2e       	mov	r0, r26
 efe:	06 94       	lsr	r0
 f00:	57 95       	ror	r21
 f02:	47 95       	ror	r20
 f04:	37 95       	ror	r19
 f06:	27 95       	ror	r18
 f08:	ba 95       	dec	r27
 f0a:	c9 f7       	brne	.-14     	; 0xefe <__ultoa_invert+0xa2>
 f0c:	62 0f       	add	r22, r18
 f0e:	73 1f       	adc	r23, r19
 f10:	84 1f       	adc	r24, r20
 f12:	95 1f       	adc	r25, r21
 f14:	a0 1d       	adc	r26, r0
 f16:	08 95       	ret

00000f18 <_exit>:
 f18:	f8 94       	cli

00000f1a <__stop_program>:
 f1a:	ff cf       	rjmp	.-2      	; 0xf1a <__stop_program>
