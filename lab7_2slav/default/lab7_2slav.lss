
lab7_2slav.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00001690  00001704  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001690  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00002b80  00000000  00000000  00001714  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000007d9  00000000  00000000  00004294  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000c0  00000000  00000000  00004a70  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c93  00000000  00000000  00004b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003ac  00000000  00000000  000057c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000089b  00000000  00000000  00005b6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002ac  00000000  00000000  0000640c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002c7  00000000  00000000  000066b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000de7  00000000  00000000  0000697f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00007766  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__ctors_end>
       4:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
       8:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
       c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      10:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      14:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      18:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      1c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      20:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      24:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      28:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      2c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      30:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      34:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      38:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      3c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      40:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      44:	0c 94 4b 04 	jmp	0x896	; 0x896 <__vector_17>
      48:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      4c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      50:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      54:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      58:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      5c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      60:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      64:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      68:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      6c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      70:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      74:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      78:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      7c:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      80:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      84:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>
      88:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__bad_interrupt>

0000008c <__c.1905>:
      8c:	6e 61 6e 00                                         nan.

00000090 <__c.1903>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e1       	ldi	r29, 0x10	; 16
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	e0 e9       	ldi	r30, 0x90	; 144
     1a2:	f6 e1       	ldi	r31, 0x16	; 22
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	ae 30       	cpi	r26, 0x0E	; 14
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>
     1b4:	1b be       	out	0x3b, r1	; 59

000001b6 <__do_clear_bss>:
     1b6:	11 e0       	ldi	r17, 0x01	; 1
     1b8:	ae e0       	ldi	r26, 0x0E	; 14
     1ba:	b1 e0       	ldi	r27, 0x01	; 1
     1bc:	01 c0       	rjmp	.+2      	; 0x1c0 <.do_clear_bss_start>

000001be <.do_clear_bss_loop>:
     1be:	1d 92       	st	X+, r1

000001c0 <.do_clear_bss_start>:
     1c0:	ae 30       	cpi	r26, 0x0E	; 14
     1c2:	b1 07       	cpc	r27, r17
     1c4:	e1 f7       	brne	.-8      	; 0x1be <.do_clear_bss_loop>
     1c6:	0e 94 7f 04 	call	0x8fe	; 0x8fe <main>
     1ca:	0c 94 46 0b 	jmp	0x168c	; 0x168c <_exit>

000001ce <__bad_interrupt>:
     1ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d2 <lcd_busy>:
	#define LCD_CS PORTC
	#define LCD_DATA PORTA
#endif

void lcd_busy(void)
{
     1d2:	0f 93       	push	r16
     1d4:	1f 93       	push	r17
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	cd b7       	in	r28, 0x3d	; 61
     1dc:	de b7       	in	r29, 0x3e	; 62
     1de:	2e 97       	sbiw	r28, 0x0e	; 14
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	a8 e4       	ldi	r26, 0x48	; 72
     1f0:	b2 e4       	ldi	r27, 0x42	; 66
     1f2:	89 83       	std	Y+1, r24	; 0x01
     1f4:	9a 83       	std	Y+2, r25	; 0x02
     1f6:	ab 83       	std	Y+3, r26	; 0x03
     1f8:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     1fa:	69 81       	ldd	r22, Y+1	; 0x01
     1fc:	7a 81       	ldd	r23, Y+2	; 0x02
     1fe:	8b 81       	ldd	r24, Y+3	; 0x03
     200:	9c 81       	ldd	r25, Y+4	; 0x04
     202:	20 e0       	ldi	r18, 0x00	; 0
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	4a ef       	ldi	r20, 0xFA	; 250
     208:	54 e4       	ldi	r21, 0x44	; 68
     20a:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__mulsf3>
     20e:	dc 01       	movw	r26, r24
     210:	cb 01       	movw	r24, r22
     212:	8d 83       	std	Y+5, r24	; 0x05
     214:	9e 83       	std	Y+6, r25	; 0x06
     216:	af 83       	std	Y+7, r26	; 0x07
     218:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     21a:	11 e0       	ldi	r17, 0x01	; 1
     21c:	6d 81       	ldd	r22, Y+5	; 0x05
     21e:	7e 81       	ldd	r23, Y+6	; 0x06
     220:	8f 81       	ldd	r24, Y+7	; 0x07
     222:	98 85       	ldd	r25, Y+8	; 0x08
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	40 e8       	ldi	r20, 0x80	; 128
     22a:	5f e3       	ldi	r21, 0x3F	; 63
     22c:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <__cmpsf2>
     230:	88 23       	and	r24, r24
     232:	0c f0       	brlt	.+2      	; 0x236 <lcd_busy+0x64>
     234:	10 e0       	ldi	r17, 0x00	; 0
     236:	11 23       	and	r17, r17
     238:	29 f0       	breq	.+10     	; 0x244 <lcd_busy+0x72>
		__ticks = 1;
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	9a 87       	std	Y+10, r25	; 0x0a
     240:	89 87       	std	Y+9, r24	; 0x09
     242:	46 c0       	rjmp	.+140    	; 0x2d0 <lcd_busy+0xfe>
	else if (__tmp > 65535)
     244:	11 e0       	ldi	r17, 0x01	; 1
     246:	6d 81       	ldd	r22, Y+5	; 0x05
     248:	7e 81       	ldd	r23, Y+6	; 0x06
     24a:	8f 81       	ldd	r24, Y+7	; 0x07
     24c:	98 85       	ldd	r25, Y+8	; 0x08
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	3f ef       	ldi	r19, 0xFF	; 255
     252:	4f e7       	ldi	r20, 0x7F	; 127
     254:	57 e4       	ldi	r21, 0x47	; 71
     256:	0e 94 67 09 	call	0x12ce	; 0x12ce <__gesf2>
     25a:	18 16       	cp	r1, r24
     25c:	0c f0       	brlt	.+2      	; 0x260 <lcd_busy+0x8e>
     25e:	10 e0       	ldi	r17, 0x00	; 0
     260:	11 23       	and	r17, r17
     262:	61 f1       	breq	.+88     	; 0x2bc <lcd_busy+0xea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     264:	69 81       	ldd	r22, Y+1	; 0x01
     266:	7a 81       	ldd	r23, Y+2	; 0x02
     268:	8b 81       	ldd	r24, Y+3	; 0x03
     26a:	9c 81       	ldd	r25, Y+4	; 0x04
     26c:	20 e0       	ldi	r18, 0x00	; 0
     26e:	30 e0       	ldi	r19, 0x00	; 0
     270:	40 e2       	ldi	r20, 0x20	; 32
     272:	51 e4       	ldi	r21, 0x41	; 65
     274:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__mulsf3>
     278:	dc 01       	movw	r26, r24
     27a:	cb 01       	movw	r24, r22
     27c:	bc 01       	movw	r22, r24
     27e:	cd 01       	movw	r24, r26
     280:	0e 94 c6 08 	call	0x118c	; 0x118c <__fixunssfsi>
     284:	dc 01       	movw	r26, r24
     286:	cb 01       	movw	r24, r22
     288:	9a 87       	std	Y+10, r25	; 0x0a
     28a:	89 87       	std	Y+9, r24	; 0x09
     28c:	12 c0       	rjmp	.+36     	; 0x2b2 <lcd_busy+0xe0>
     28e:	88 ec       	ldi	r24, 0xC8	; 200
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	9c 87       	std	Y+12, r25	; 0x0c
     294:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     296:	8b 85       	ldd	r24, Y+11	; 0x0b
     298:	9c 85       	ldd	r25, Y+12	; 0x0c
     29a:	8c 01       	movw	r16, r24
     29c:	c8 01       	movw	r24, r16
     29e:	01 97       	sbiw	r24, 0x01	; 1
     2a0:	f1 f7       	brne	.-4      	; 0x29e <lcd_busy+0xcc>
     2a2:	8c 01       	movw	r16, r24
     2a4:	1c 87       	std	Y+12, r17	; 0x0c
     2a6:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2a8:	89 85       	ldd	r24, Y+9	; 0x09
     2aa:	9a 85       	ldd	r25, Y+10	; 0x0a
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	9a 87       	std	Y+10, r25	; 0x0a
     2b0:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2b2:	89 85       	ldd	r24, Y+9	; 0x09
     2b4:	9a 85       	ldd	r25, Y+10	; 0x0a
     2b6:	00 97       	sbiw	r24, 0x00	; 0
     2b8:	51 f7       	brne	.-44     	; 0x28e <lcd_busy+0xbc>
     2ba:	17 c0       	rjmp	.+46     	; 0x2ea <lcd_busy+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2bc:	6d 81       	ldd	r22, Y+5	; 0x05
     2be:	7e 81       	ldd	r23, Y+6	; 0x06
     2c0:	8f 81       	ldd	r24, Y+7	; 0x07
     2c2:	98 85       	ldd	r25, Y+8	; 0x08
     2c4:	0e 94 c6 08 	call	0x118c	; 0x118c <__fixunssfsi>
     2c8:	dc 01       	movw	r26, r24
     2ca:	cb 01       	movw	r24, r22
     2cc:	9a 87       	std	Y+10, r25	; 0x0a
     2ce:	89 87       	std	Y+9, r24	; 0x09
     2d0:	89 85       	ldd	r24, Y+9	; 0x09
     2d2:	9a 85       	ldd	r25, Y+10	; 0x0a
     2d4:	9e 87       	std	Y+14, r25	; 0x0e
     2d6:	8d 87       	std	Y+13, r24	; 0x0d
     2d8:	8d 85       	ldd	r24, Y+13	; 0x0d
     2da:	9e 85       	ldd	r25, Y+14	; 0x0e
     2dc:	8c 01       	movw	r16, r24
     2de:	c8 01       	movw	r24, r16
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <lcd_busy+0x10e>
     2e4:	8c 01       	movw	r16, r24
     2e6:	1e 87       	std	Y+14, r17	; 0x0e
     2e8:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(50);	
}
     2ea:	2e 96       	adiw	r28, 0x0e	; 14
     2ec:	0f b6       	in	r0, 0x3f	; 63
     2ee:	f8 94       	cli
     2f0:	de bf       	out	0x3e, r29	; 62
     2f2:	0f be       	out	0x3f, r0	; 63
     2f4:	cd bf       	out	0x3d, r28	; 61
     2f6:	df 91       	pop	r29
     2f8:	cf 91       	pop	r28
     2fa:	1f 91       	pop	r17
     2fc:	0f 91       	pop	r16
     2fe:	08 95       	ret

00000300 <lcd_command>:

void lcd_command(unsigned char cmd)
{
     300:	0f 93       	push	r16
     302:	1f 93       	push	r17
     304:	cf 93       	push	r28
     306:	df 93       	push	r29
     308:	cd b7       	in	r28, 0x3d	; 61
     30a:	de b7       	in	r29, 0x3e	; 62
     30c:	69 97       	sbiw	r28, 0x19	; 25
     30e:	0f b6       	in	r0, 0x3f	; 63
     310:	f8 94       	cli
     312:	de bf       	out	0x3e, r29	; 62
     314:	0f be       	out	0x3f, r0	; 63
     316:	cd bf       	out	0x3d, r28	; 61
     318:	89 8f       	std	Y+25, r24	; 0x19
	lcd_busy();
     31a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <lcd_busy>
#if LCDtarget == easyTextLCD
	LCD_DATA = cmd;			// 포트 A에 명령어 출력
	LCD_CS = 0b00000001;	// RW=0, RS=0, E=1
	LCD_CS = 0b00000000;	// E=0
#else
	LCD_DATA = cmd;			// 포트 A에 명령어 출력
     31e:	8b e3       	ldi	r24, 0x3B	; 59
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	29 8d       	ldd	r18, Y+25	; 0x19
     324:	fc 01       	movw	r30, r24
     326:	20 83       	st	Z, r18
	LCD_CS = 0b00000100;	// RW=0, RS=0, E=1
     328:	85 e3       	ldi	r24, 0x35	; 53
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	24 e0       	ldi	r18, 0x04	; 4
     32e:	fc 01       	movw	r30, r24
     330:	20 83       	st	Z, r18
	LCD_CS = 0b00000000;	// E=0
     332:	85 e3       	ldi	r24, 0x35	; 53
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	fc 01       	movw	r30, r24
     338:	10 82       	st	Z, r1
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	a0 e8       	ldi	r26, 0x80	; 128
     340:	bf e3       	ldi	r27, 0x3F	; 63
     342:	89 83       	std	Y+1, r24	; 0x01
     344:	9a 83       	std	Y+2, r25	; 0x02
     346:	ab 83       	std	Y+3, r26	; 0x03
     348:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 3e6) * __us;
     34a:	69 81       	ldd	r22, Y+1	; 0x01
     34c:	7a 81       	ldd	r23, Y+2	; 0x02
     34e:	8b 81       	ldd	r24, Y+3	; 0x03
     350:	9c 81       	ldd	r25, Y+4	; 0x04
     352:	2b ea       	ldi	r18, 0xAB	; 171
     354:	3a ea       	ldi	r19, 0xAA	; 170
     356:	4a e2       	ldi	r20, 0x2A	; 42
     358:	50 e4       	ldi	r21, 0x40	; 64
     35a:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__mulsf3>
     35e:	dc 01       	movw	r26, r24
     360:	cb 01       	movw	r24, r22
     362:	8d 83       	std	Y+5, r24	; 0x05
     364:	9e 83       	std	Y+6, r25	; 0x06
     366:	af 83       	std	Y+7, r26	; 0x07
     368:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     36a:	11 e0       	ldi	r17, 0x01	; 1
     36c:	6d 81       	ldd	r22, Y+5	; 0x05
     36e:	7e 81       	ldd	r23, Y+6	; 0x06
     370:	8f 81       	ldd	r24, Y+7	; 0x07
     372:	98 85       	ldd	r25, Y+8	; 0x08
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	40 e8       	ldi	r20, 0x80	; 128
     37a:	5f e3       	ldi	r21, 0x3F	; 63
     37c:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <__cmpsf2>
     380:	88 23       	and	r24, r24
     382:	0c f0       	brlt	.+2      	; 0x386 <lcd_command+0x86>
     384:	10 e0       	ldi	r17, 0x00	; 0
     386:	11 23       	and	r17, r17
     388:	19 f0       	breq	.+6      	; 0x390 <lcd_command+0x90>
		__ticks = 1;
     38a:	81 e0       	ldi	r24, 0x01	; 1
     38c:	89 87       	std	Y+9, r24	; 0x09
     38e:	a3 c0       	rjmp	.+326    	; 0x4d6 <lcd_command+0x1d6>
	else if (__tmp > 255)
     390:	11 e0       	ldi	r17, 0x01	; 1
     392:	6d 81       	ldd	r22, Y+5	; 0x05
     394:	7e 81       	ldd	r23, Y+6	; 0x06
     396:	8f 81       	ldd	r24, Y+7	; 0x07
     398:	98 85       	ldd	r25, Y+8	; 0x08
     39a:	20 e0       	ldi	r18, 0x00	; 0
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	4f e7       	ldi	r20, 0x7F	; 127
     3a0:	53 e4       	ldi	r21, 0x43	; 67
     3a2:	0e 94 67 09 	call	0x12ce	; 0x12ce <__gesf2>
     3a6:	18 16       	cp	r1, r24
     3a8:	0c f0       	brlt	.+2      	; 0x3ac <lcd_command+0xac>
     3aa:	10 e0       	ldi	r17, 0x00	; 0
     3ac:	11 23       	and	r17, r17
     3ae:	09 f4       	brne	.+2      	; 0x3b2 <lcd_command+0xb2>
     3b0:	89 c0       	rjmp	.+274    	; 0x4c4 <lcd_command+0x1c4>
	{
		_delay_ms(__us / 1000.0);
     3b2:	69 81       	ldd	r22, Y+1	; 0x01
     3b4:	7a 81       	ldd	r23, Y+2	; 0x02
     3b6:	8b 81       	ldd	r24, Y+3	; 0x03
     3b8:	9c 81       	ldd	r25, Y+4	; 0x04
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	4a e7       	ldi	r20, 0x7A	; 122
     3c0:	54 e4       	ldi	r21, 0x44	; 68
     3c2:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__divsf3>
     3c6:	dc 01       	movw	r26, r24
     3c8:	cb 01       	movw	r24, r22
     3ca:	8a 87       	std	Y+10, r24	; 0x0a
     3cc:	9b 87       	std	Y+11, r25	; 0x0b
     3ce:	ac 87       	std	Y+12, r26	; 0x0c
     3d0:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     3d2:	6a 85       	ldd	r22, Y+10	; 0x0a
     3d4:	7b 85       	ldd	r23, Y+11	; 0x0b
     3d6:	8c 85       	ldd	r24, Y+12	; 0x0c
     3d8:	9d 85       	ldd	r25, Y+13	; 0x0d
     3da:	20 e0       	ldi	r18, 0x00	; 0
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	4a ef       	ldi	r20, 0xFA	; 250
     3e0:	54 e4       	ldi	r21, 0x44	; 68
     3e2:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__mulsf3>
     3e6:	dc 01       	movw	r26, r24
     3e8:	cb 01       	movw	r24, r22
     3ea:	8e 87       	std	Y+14, r24	; 0x0e
     3ec:	9f 87       	std	Y+15, r25	; 0x0f
     3ee:	a8 8b       	std	Y+16, r26	; 0x10
     3f0:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     3f2:	11 e0       	ldi	r17, 0x01	; 1
     3f4:	6e 85       	ldd	r22, Y+14	; 0x0e
     3f6:	7f 85       	ldd	r23, Y+15	; 0x0f
     3f8:	88 89       	ldd	r24, Y+16	; 0x10
     3fa:	99 89       	ldd	r25, Y+17	; 0x11
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	40 e8       	ldi	r20, 0x80	; 128
     402:	5f e3       	ldi	r21, 0x3F	; 63
     404:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <__cmpsf2>
     408:	88 23       	and	r24, r24
     40a:	0c f0       	brlt	.+2      	; 0x40e <lcd_command+0x10e>
     40c:	10 e0       	ldi	r17, 0x00	; 0
     40e:	11 23       	and	r17, r17
     410:	29 f0       	breq	.+10     	; 0x41c <lcd_command+0x11c>
		__ticks = 1;
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	9b 8b       	std	Y+19, r25	; 0x13
     418:	8a 8b       	std	Y+18, r24	; 0x12
     41a:	46 c0       	rjmp	.+140    	; 0x4a8 <lcd_command+0x1a8>
	else if (__tmp > 65535)
     41c:	11 e0       	ldi	r17, 0x01	; 1
     41e:	6e 85       	ldd	r22, Y+14	; 0x0e
     420:	7f 85       	ldd	r23, Y+15	; 0x0f
     422:	88 89       	ldd	r24, Y+16	; 0x10
     424:	99 89       	ldd	r25, Y+17	; 0x11
     426:	20 e0       	ldi	r18, 0x00	; 0
     428:	3f ef       	ldi	r19, 0xFF	; 255
     42a:	4f e7       	ldi	r20, 0x7F	; 127
     42c:	57 e4       	ldi	r21, 0x47	; 71
     42e:	0e 94 67 09 	call	0x12ce	; 0x12ce <__gesf2>
     432:	18 16       	cp	r1, r24
     434:	0c f0       	brlt	.+2      	; 0x438 <lcd_command+0x138>
     436:	10 e0       	ldi	r17, 0x00	; 0
     438:	11 23       	and	r17, r17
     43a:	61 f1       	breq	.+88     	; 0x494 <lcd_command+0x194>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     43c:	6a 85       	ldd	r22, Y+10	; 0x0a
     43e:	7b 85       	ldd	r23, Y+11	; 0x0b
     440:	8c 85       	ldd	r24, Y+12	; 0x0c
     442:	9d 85       	ldd	r25, Y+13	; 0x0d
     444:	20 e0       	ldi	r18, 0x00	; 0
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	40 e2       	ldi	r20, 0x20	; 32
     44a:	51 e4       	ldi	r21, 0x41	; 65
     44c:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__mulsf3>
     450:	dc 01       	movw	r26, r24
     452:	cb 01       	movw	r24, r22
     454:	bc 01       	movw	r22, r24
     456:	cd 01       	movw	r24, r26
     458:	0e 94 c6 08 	call	0x118c	; 0x118c <__fixunssfsi>
     45c:	dc 01       	movw	r26, r24
     45e:	cb 01       	movw	r24, r22
     460:	9b 8b       	std	Y+19, r25	; 0x13
     462:	8a 8b       	std	Y+18, r24	; 0x12
     464:	12 c0       	rjmp	.+36     	; 0x48a <lcd_command+0x18a>
     466:	88 ec       	ldi	r24, 0xC8	; 200
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	9d 8b       	std	Y+21, r25	; 0x15
     46c:	8c 8b       	std	Y+20, r24	; 0x14
     46e:	8c 89       	ldd	r24, Y+20	; 0x14
     470:	9d 89       	ldd	r25, Y+21	; 0x15
     472:	8c 01       	movw	r16, r24
     474:	c8 01       	movw	r24, r16
     476:	01 97       	sbiw	r24, 0x01	; 1
     478:	f1 f7       	brne	.-4      	; 0x476 <lcd_command+0x176>
     47a:	8c 01       	movw	r16, r24
     47c:	1d 8b       	std	Y+21, r17	; 0x15
     47e:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     480:	8a 89       	ldd	r24, Y+18	; 0x12
     482:	9b 89       	ldd	r25, Y+19	; 0x13
     484:	01 97       	sbiw	r24, 0x01	; 1
     486:	9b 8b       	std	Y+19, r25	; 0x13
     488:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     48a:	8a 89       	ldd	r24, Y+18	; 0x12
     48c:	9b 89       	ldd	r25, Y+19	; 0x13
     48e:	00 97       	sbiw	r24, 0x00	; 0
     490:	51 f7       	brne	.-44     	; 0x466 <lcd_command+0x166>
     492:	28 c0       	rjmp	.+80     	; 0x4e4 <lcd_command+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     494:	6e 85       	ldd	r22, Y+14	; 0x0e
     496:	7f 85       	ldd	r23, Y+15	; 0x0f
     498:	88 89       	ldd	r24, Y+16	; 0x10
     49a:	99 89       	ldd	r25, Y+17	; 0x11
     49c:	0e 94 c6 08 	call	0x118c	; 0x118c <__fixunssfsi>
     4a0:	dc 01       	movw	r26, r24
     4a2:	cb 01       	movw	r24, r22
     4a4:	9b 8b       	std	Y+19, r25	; 0x13
     4a6:	8a 8b       	std	Y+18, r24	; 0x12
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	9b 89       	ldd	r25, Y+19	; 0x13
     4ac:	9f 8b       	std	Y+23, r25	; 0x17
     4ae:	8e 8b       	std	Y+22, r24	; 0x16
     4b0:	8e 89       	ldd	r24, Y+22	; 0x16
     4b2:	9f 89       	ldd	r25, Y+23	; 0x17
     4b4:	8c 01       	movw	r16, r24
     4b6:	f8 01       	movw	r30, r16
     4b8:	31 97       	sbiw	r30, 0x01	; 1
     4ba:	f1 f7       	brne	.-4      	; 0x4b8 <lcd_command+0x1b8>
     4bc:	8f 01       	movw	r16, r30
     4be:	1f 8b       	std	Y+23, r17	; 0x17
     4c0:	0e 8b       	std	Y+22, r16	; 0x16
     4c2:	10 c0       	rjmp	.+32     	; 0x4e4 <lcd_command+0x1e4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     4c4:	6d 81       	ldd	r22, Y+5	; 0x05
     4c6:	7e 81       	ldd	r23, Y+6	; 0x06
     4c8:	8f 81       	ldd	r24, Y+7	; 0x07
     4ca:	98 85       	ldd	r25, Y+8	; 0x08
     4cc:	0e 94 c6 08 	call	0x118c	; 0x118c <__fixunssfsi>
     4d0:	dc 01       	movw	r26, r24
     4d2:	cb 01       	movw	r24, r22
     4d4:	89 87       	std	Y+9, r24	; 0x09
     4d6:	89 85       	ldd	r24, Y+9	; 0x09
     4d8:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     4da:	88 8d       	ldd	r24, Y+24	; 0x18
     4dc:	18 2f       	mov	r17, r24
     4de:	1a 95       	dec	r17
     4e0:	f1 f7       	brne	.-4      	; 0x4de <lcd_command+0x1de>
     4e2:	18 8f       	std	Y+24, r17	; 0x18
#endif
	_delay_us(1);	
}
     4e4:	69 96       	adiw	r28, 0x19	; 25
     4e6:	0f b6       	in	r0, 0x3f	; 63
     4e8:	f8 94       	cli
     4ea:	de bf       	out	0x3e, r29	; 62
     4ec:	0f be       	out	0x3f, r0	; 63
     4ee:	cd bf       	out	0x3d, r28	; 61
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	1f 91       	pop	r17
     4f6:	0f 91       	pop	r16
     4f8:	08 95       	ret

000004fa <lcd_init>:

void lcd_init()
{
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	cd b7       	in	r28, 0x3d	; 61
     500:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0xFF;
     502:	8a e3       	ldi	r24, 0x3A	; 58
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	2f ef       	ldi	r18, 0xFF	; 255
     508:	fc 01       	movw	r30, r24
     50a:	20 83       	st	Z, r18
	DDRC = 0xFF;
     50c:	84 e3       	ldi	r24, 0x34	; 52
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	2f ef       	ldi	r18, 0xFF	; 255
     512:	fc 01       	movw	r30, r24
     514:	20 83       	st	Z, r18

	lcd_command(0b00111000); // 8-bit mode, 2행
     516:	88 e3       	ldi	r24, 0x38	; 56
     518:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
	lcd_command(0b00001000); // (문자표시, 커서표시, 블링크)? off 
     51c:	88 e0       	ldi	r24, 0x08	; 8
     51e:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
	lcd_command(0b00000001); // clear
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
	lcd_command(0b00000110); // 커서 자동증가
     528:	86 e0       	ldi	r24, 0x06	; 6
     52a:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
	lcd_command(0b00001111); // (문자표시, 커서표시, 블링크)? on 
     52e:	8f e0       	ldi	r24, 0x0F	; 15
     530:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
}
     534:	df 91       	pop	r29
     536:	cf 91       	pop	r28
     538:	08 95       	ret

0000053a <lcd_data>:

void lcd_data(unsigned char byte)
{
     53a:	0f 93       	push	r16
     53c:	1f 93       	push	r17
     53e:	cf 93       	push	r28
     540:	df 93       	push	r29
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	69 97       	sbiw	r28, 0x19	; 25
     548:	0f b6       	in	r0, 0x3f	; 63
     54a:	f8 94       	cli
     54c:	de bf       	out	0x3e, r29	; 62
     54e:	0f be       	out	0x3f, r0	; 63
     550:	cd bf       	out	0x3d, r28	; 61
     552:	89 8f       	std	Y+25, r24	; 0x19
	lcd_busy();
     554:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <lcd_busy>
#if Target == easyTextLCD
	LCD_DATA = byte;	// 포트 A에 명령어 출력
	LCD_CS = 0b00000011;	// RS=1, RW=0, E=1
	LCD_CS = 0b00000010;	// E=1
#else
	LCD_DATA = byte;	// 포트 A에 명령어 출력
     558:	8b e3       	ldi	r24, 0x3B	; 59
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	29 8d       	ldd	r18, Y+25	; 0x19
     55e:	fc 01       	movw	r30, r24
     560:	20 83       	st	Z, r18
	LCD_CS = 0b00000101;	// RS=1, RW=0, E=1
     562:	85 e3       	ldi	r24, 0x35	; 53
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	25 e0       	ldi	r18, 0x05	; 5
     568:	fc 01       	movw	r30, r24
     56a:	20 83       	st	Z, r18
	LCD_CS = 0b00000001;	// E=0
     56c:	85 e3       	ldi	r24, 0x35	; 53
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	21 e0       	ldi	r18, 0x01	; 1
     572:	fc 01       	movw	r30, r24
     574:	20 83       	st	Z, r18
     576:	80 e0       	ldi	r24, 0x00	; 0
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	a8 e4       	ldi	r26, 0x48	; 72
     57c:	b2 e4       	ldi	r27, 0x42	; 66
     57e:	89 83       	std	Y+1, r24	; 0x01
     580:	9a 83       	std	Y+2, r25	; 0x02
     582:	ab 83       	std	Y+3, r26	; 0x03
     584:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 3e6) * __us;
     586:	69 81       	ldd	r22, Y+1	; 0x01
     588:	7a 81       	ldd	r23, Y+2	; 0x02
     58a:	8b 81       	ldd	r24, Y+3	; 0x03
     58c:	9c 81       	ldd	r25, Y+4	; 0x04
     58e:	2b ea       	ldi	r18, 0xAB	; 171
     590:	3a ea       	ldi	r19, 0xAA	; 170
     592:	4a e2       	ldi	r20, 0x2A	; 42
     594:	50 e4       	ldi	r21, 0x40	; 64
     596:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__mulsf3>
     59a:	dc 01       	movw	r26, r24
     59c:	cb 01       	movw	r24, r22
     59e:	8d 83       	std	Y+5, r24	; 0x05
     5a0:	9e 83       	std	Y+6, r25	; 0x06
     5a2:	af 83       	std	Y+7, r26	; 0x07
     5a4:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     5a6:	11 e0       	ldi	r17, 0x01	; 1
     5a8:	6d 81       	ldd	r22, Y+5	; 0x05
     5aa:	7e 81       	ldd	r23, Y+6	; 0x06
     5ac:	8f 81       	ldd	r24, Y+7	; 0x07
     5ae:	98 85       	ldd	r25, Y+8	; 0x08
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e8       	ldi	r20, 0x80	; 128
     5b6:	5f e3       	ldi	r21, 0x3F	; 63
     5b8:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <__cmpsf2>
     5bc:	88 23       	and	r24, r24
     5be:	0c f0       	brlt	.+2      	; 0x5c2 <lcd_data+0x88>
     5c0:	10 e0       	ldi	r17, 0x00	; 0
     5c2:	11 23       	and	r17, r17
     5c4:	19 f0       	breq	.+6      	; 0x5cc <lcd_data+0x92>
		__ticks = 1;
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	89 87       	std	Y+9, r24	; 0x09
     5ca:	a3 c0       	rjmp	.+326    	; 0x712 <lcd_data+0x1d8>
	else if (__tmp > 255)
     5cc:	11 e0       	ldi	r17, 0x01	; 1
     5ce:	6d 81       	ldd	r22, Y+5	; 0x05
     5d0:	7e 81       	ldd	r23, Y+6	; 0x06
     5d2:	8f 81       	ldd	r24, Y+7	; 0x07
     5d4:	98 85       	ldd	r25, Y+8	; 0x08
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	4f e7       	ldi	r20, 0x7F	; 127
     5dc:	53 e4       	ldi	r21, 0x43	; 67
     5de:	0e 94 67 09 	call	0x12ce	; 0x12ce <__gesf2>
     5e2:	18 16       	cp	r1, r24
     5e4:	0c f0       	brlt	.+2      	; 0x5e8 <lcd_data+0xae>
     5e6:	10 e0       	ldi	r17, 0x00	; 0
     5e8:	11 23       	and	r17, r17
     5ea:	09 f4       	brne	.+2      	; 0x5ee <lcd_data+0xb4>
     5ec:	89 c0       	rjmp	.+274    	; 0x700 <lcd_data+0x1c6>
	{
		_delay_ms(__us / 1000.0);
     5ee:	69 81       	ldd	r22, Y+1	; 0x01
     5f0:	7a 81       	ldd	r23, Y+2	; 0x02
     5f2:	8b 81       	ldd	r24, Y+3	; 0x03
     5f4:	9c 81       	ldd	r25, Y+4	; 0x04
     5f6:	20 e0       	ldi	r18, 0x00	; 0
     5f8:	30 e0       	ldi	r19, 0x00	; 0
     5fa:	4a e7       	ldi	r20, 0x7A	; 122
     5fc:	54 e4       	ldi	r21, 0x44	; 68
     5fe:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__divsf3>
     602:	dc 01       	movw	r26, r24
     604:	cb 01       	movw	r24, r22
     606:	8a 87       	std	Y+10, r24	; 0x0a
     608:	9b 87       	std	Y+11, r25	; 0x0b
     60a:	ac 87       	std	Y+12, r26	; 0x0c
     60c:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     60e:	6a 85       	ldd	r22, Y+10	; 0x0a
     610:	7b 85       	ldd	r23, Y+11	; 0x0b
     612:	8c 85       	ldd	r24, Y+12	; 0x0c
     614:	9d 85       	ldd	r25, Y+13	; 0x0d
     616:	20 e0       	ldi	r18, 0x00	; 0
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	4a ef       	ldi	r20, 0xFA	; 250
     61c:	54 e4       	ldi	r21, 0x44	; 68
     61e:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__mulsf3>
     622:	dc 01       	movw	r26, r24
     624:	cb 01       	movw	r24, r22
     626:	8e 87       	std	Y+14, r24	; 0x0e
     628:	9f 87       	std	Y+15, r25	; 0x0f
     62a:	a8 8b       	std	Y+16, r26	; 0x10
     62c:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     62e:	11 e0       	ldi	r17, 0x01	; 1
     630:	6e 85       	ldd	r22, Y+14	; 0x0e
     632:	7f 85       	ldd	r23, Y+15	; 0x0f
     634:	88 89       	ldd	r24, Y+16	; 0x10
     636:	99 89       	ldd	r25, Y+17	; 0x11
     638:	20 e0       	ldi	r18, 0x00	; 0
     63a:	30 e0       	ldi	r19, 0x00	; 0
     63c:	40 e8       	ldi	r20, 0x80	; 128
     63e:	5f e3       	ldi	r21, 0x3F	; 63
     640:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <__cmpsf2>
     644:	88 23       	and	r24, r24
     646:	0c f0       	brlt	.+2      	; 0x64a <lcd_data+0x110>
     648:	10 e0       	ldi	r17, 0x00	; 0
     64a:	11 23       	and	r17, r17
     64c:	29 f0       	breq	.+10     	; 0x658 <lcd_data+0x11e>
		__ticks = 1;
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	9b 8b       	std	Y+19, r25	; 0x13
     654:	8a 8b       	std	Y+18, r24	; 0x12
     656:	46 c0       	rjmp	.+140    	; 0x6e4 <lcd_data+0x1aa>
	else if (__tmp > 65535)
     658:	11 e0       	ldi	r17, 0x01	; 1
     65a:	6e 85       	ldd	r22, Y+14	; 0x0e
     65c:	7f 85       	ldd	r23, Y+15	; 0x0f
     65e:	88 89       	ldd	r24, Y+16	; 0x10
     660:	99 89       	ldd	r25, Y+17	; 0x11
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	3f ef       	ldi	r19, 0xFF	; 255
     666:	4f e7       	ldi	r20, 0x7F	; 127
     668:	57 e4       	ldi	r21, 0x47	; 71
     66a:	0e 94 67 09 	call	0x12ce	; 0x12ce <__gesf2>
     66e:	18 16       	cp	r1, r24
     670:	0c f0       	brlt	.+2      	; 0x674 <lcd_data+0x13a>
     672:	10 e0       	ldi	r17, 0x00	; 0
     674:	11 23       	and	r17, r17
     676:	61 f1       	breq	.+88     	; 0x6d0 <lcd_data+0x196>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     678:	6a 85       	ldd	r22, Y+10	; 0x0a
     67a:	7b 85       	ldd	r23, Y+11	; 0x0b
     67c:	8c 85       	ldd	r24, Y+12	; 0x0c
     67e:	9d 85       	ldd	r25, Y+13	; 0x0d
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	40 e2       	ldi	r20, 0x20	; 32
     686:	51 e4       	ldi	r21, 0x41	; 65
     688:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__mulsf3>
     68c:	dc 01       	movw	r26, r24
     68e:	cb 01       	movw	r24, r22
     690:	bc 01       	movw	r22, r24
     692:	cd 01       	movw	r24, r26
     694:	0e 94 c6 08 	call	0x118c	; 0x118c <__fixunssfsi>
     698:	dc 01       	movw	r26, r24
     69a:	cb 01       	movw	r24, r22
     69c:	9b 8b       	std	Y+19, r25	; 0x13
     69e:	8a 8b       	std	Y+18, r24	; 0x12
     6a0:	12 c0       	rjmp	.+36     	; 0x6c6 <lcd_data+0x18c>
     6a2:	88 ec       	ldi	r24, 0xC8	; 200
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	9d 8b       	std	Y+21, r25	; 0x15
     6a8:	8c 8b       	std	Y+20, r24	; 0x14
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     6aa:	8c 89       	ldd	r24, Y+20	; 0x14
     6ac:	9d 89       	ldd	r25, Y+21	; 0x15
     6ae:	8c 01       	movw	r16, r24
     6b0:	c8 01       	movw	r24, r16
     6b2:	01 97       	sbiw	r24, 0x01	; 1
     6b4:	f1 f7       	brne	.-4      	; 0x6b2 <lcd_data+0x178>
     6b6:	8c 01       	movw	r16, r24
     6b8:	1d 8b       	std	Y+21, r17	; 0x15
     6ba:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6bc:	8a 89       	ldd	r24, Y+18	; 0x12
     6be:	9b 89       	ldd	r25, Y+19	; 0x13
     6c0:	01 97       	sbiw	r24, 0x01	; 1
     6c2:	9b 8b       	std	Y+19, r25	; 0x13
     6c4:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6c6:	8a 89       	ldd	r24, Y+18	; 0x12
     6c8:	9b 89       	ldd	r25, Y+19	; 0x13
     6ca:	00 97       	sbiw	r24, 0x00	; 0
     6cc:	51 f7       	brne	.-44     	; 0x6a2 <lcd_data+0x168>
     6ce:	28 c0       	rjmp	.+80     	; 0x720 <lcd_data+0x1e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6d0:	6e 85       	ldd	r22, Y+14	; 0x0e
     6d2:	7f 85       	ldd	r23, Y+15	; 0x0f
     6d4:	88 89       	ldd	r24, Y+16	; 0x10
     6d6:	99 89       	ldd	r25, Y+17	; 0x11
     6d8:	0e 94 c6 08 	call	0x118c	; 0x118c <__fixunssfsi>
     6dc:	dc 01       	movw	r26, r24
     6de:	cb 01       	movw	r24, r22
     6e0:	9b 8b       	std	Y+19, r25	; 0x13
     6e2:	8a 8b       	std	Y+18, r24	; 0x12
     6e4:	8a 89       	ldd	r24, Y+18	; 0x12
     6e6:	9b 89       	ldd	r25, Y+19	; 0x13
     6e8:	9f 8b       	std	Y+23, r25	; 0x17
     6ea:	8e 8b       	std	Y+22, r24	; 0x16
     6ec:	8e 89       	ldd	r24, Y+22	; 0x16
     6ee:	9f 89       	ldd	r25, Y+23	; 0x17
     6f0:	8c 01       	movw	r16, r24
     6f2:	f8 01       	movw	r30, r16
     6f4:	31 97       	sbiw	r30, 0x01	; 1
     6f6:	f1 f7       	brne	.-4      	; 0x6f4 <lcd_data+0x1ba>
     6f8:	8f 01       	movw	r16, r30
     6fa:	1f 8b       	std	Y+23, r17	; 0x17
     6fc:	0e 8b       	std	Y+22, r16	; 0x16
     6fe:	10 c0       	rjmp	.+32     	; 0x720 <lcd_data+0x1e6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     700:	6d 81       	ldd	r22, Y+5	; 0x05
     702:	7e 81       	ldd	r23, Y+6	; 0x06
     704:	8f 81       	ldd	r24, Y+7	; 0x07
     706:	98 85       	ldd	r25, Y+8	; 0x08
     708:	0e 94 c6 08 	call	0x118c	; 0x118c <__fixunssfsi>
     70c:	dc 01       	movw	r26, r24
     70e:	cb 01       	movw	r24, r22
     710:	89 87       	std	Y+9, r24	; 0x09
     712:	89 85       	ldd	r24, Y+9	; 0x09
     714:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     716:	88 8d       	ldd	r24, Y+24	; 0x18
     718:	18 2f       	mov	r17, r24
     71a:	1a 95       	dec	r17
     71c:	f1 f7       	brne	.-4      	; 0x71a <lcd_data+0x1e0>
     71e:	18 8f       	std	Y+24, r17	; 0x18
#endif
	_delay_us(50);	
}
     720:	69 96       	adiw	r28, 0x19	; 25
     722:	0f b6       	in	r0, 0x3f	; 63
     724:	f8 94       	cli
     726:	de bf       	out	0x3e, r29	; 62
     728:	0f be       	out	0x3f, r0	; 63
     72a:	cd bf       	out	0x3d, r28	; 61
     72c:	df 91       	pop	r29
     72e:	cf 91       	pop	r28
     730:	1f 91       	pop	r17
     732:	0f 91       	pop	r16
     734:	08 95       	ret

00000736 <lcd_string>:

void lcd_string(char* str)
{
     736:	cf 93       	push	r28
     738:	df 93       	push	r29
     73a:	00 d0       	rcall	.+0      	; 0x73c <lcd_string+0x6>
     73c:	00 d0       	rcall	.+0      	; 0x73e <lcd_string+0x8>
     73e:	cd b7       	in	r28, 0x3d	; 61
     740:	de b7       	in	r29, 0x3e	; 62
     742:	9c 83       	std	Y+4, r25	; 0x04
     744:	8b 83       	std	Y+3, r24	; 0x03
	int i=0;
     746:	1a 82       	std	Y+2, r1	; 0x02
     748:	19 82       	std	Y+1, r1	; 0x01

	while(1) {
		if(str[i]=='\0') break;
     74a:	89 81       	ldd	r24, Y+1	; 0x01
     74c:	9a 81       	ldd	r25, Y+2	; 0x02
     74e:	2b 81       	ldd	r18, Y+3	; 0x03
     750:	3c 81       	ldd	r19, Y+4	; 0x04
     752:	82 0f       	add	r24, r18
     754:	93 1f       	adc	r25, r19
     756:	fc 01       	movw	r30, r24
     758:	80 81       	ld	r24, Z
     75a:	88 23       	and	r24, r24
     75c:	89 f0       	breq	.+34     	; 0x780 <lcd_string+0x4a>
		lcd_data(str[i++]);
     75e:	89 81       	ldd	r24, Y+1	; 0x01
     760:	9a 81       	ldd	r25, Y+2	; 0x02
     762:	2b 81       	ldd	r18, Y+3	; 0x03
     764:	3c 81       	ldd	r19, Y+4	; 0x04
     766:	82 0f       	add	r24, r18
     768:	93 1f       	adc	r25, r19
     76a:	fc 01       	movw	r30, r24
     76c:	20 81       	ld	r18, Z
     76e:	89 81       	ldd	r24, Y+1	; 0x01
     770:	9a 81       	ldd	r25, Y+2	; 0x02
     772:	01 96       	adiw	r24, 0x01	; 1
     774:	9a 83       	std	Y+2, r25	; 0x02
     776:	89 83       	std	Y+1, r24	; 0x01
     778:	82 2f       	mov	r24, r18
     77a:	0e 94 9d 02 	call	0x53a	; 0x53a <lcd_data>
	}
     77e:	e5 cf       	rjmp	.-54     	; 0x74a <lcd_string+0x14>
void lcd_string(char* str)
{
	int i=0;

	while(1) {
		if(str[i]=='\0') break;
     780:	00 00       	nop
		lcd_data(str[i++]);
	}
}
     782:	0f 90       	pop	r0
     784:	0f 90       	pop	r0
     786:	0f 90       	pop	r0
     788:	0f 90       	pop	r0
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	08 95       	ret

00000790 <lcd_clear>:

void lcd_clear()
{
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	cd b7       	in	r28, 0x3d	; 61
     796:	de b7       	in	r29, 0x3e	; 62
	lcd_command(0b00000001);
     798:	81 e0       	ldi	r24, 0x01	; 1
     79a:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
}
     79e:	df 91       	pop	r29
     7a0:	cf 91       	pop	r28
     7a2:	08 95       	ret

000007a4 <lcd_cursor_home>:

void lcd_cursor_home()
{
     7a4:	cf 93       	push	r28
     7a6:	df 93       	push	r29
     7a8:	cd b7       	in	r28, 0x3d	; 61
     7aa:	de b7       	in	r29, 0x3e	; 62
	lcd_command(0b00000010);
     7ac:	82 e0       	ldi	r24, 0x02	; 2
     7ae:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
}
     7b2:	df 91       	pop	r29
     7b4:	cf 91       	pop	r28
     7b6:	08 95       	ret

000007b8 <lcd_entry_mode>:

void lcd_entry_mode(int ID, int S)
{
     7b8:	cf 93       	push	r28
     7ba:	df 93       	push	r29
     7bc:	00 d0       	rcall	.+0      	; 0x7be <lcd_entry_mode+0x6>
     7be:	00 d0       	rcall	.+0      	; 0x7c0 <lcd_entry_mode+0x8>
     7c0:	0f 92       	push	r0
     7c2:	cd b7       	in	r28, 0x3d	; 61
     7c4:	de b7       	in	r29, 0x3e	; 62
     7c6:	9b 83       	std	Y+3, r25	; 0x03
     7c8:	8a 83       	std	Y+2, r24	; 0x02
     7ca:	7d 83       	std	Y+5, r23	; 0x05
     7cc:	6c 83       	std	Y+4, r22	; 0x04
	unsigned char cmd = 0b00000100;	
     7ce:	84 e0       	ldi	r24, 0x04	; 4
     7d0:	89 83       	std	Y+1, r24	; 0x01
	if(ID==1) cmd = cmd | 0b00000010;
     7d2:	8a 81       	ldd	r24, Y+2	; 0x02
     7d4:	9b 81       	ldd	r25, Y+3	; 0x03
     7d6:	81 30       	cpi	r24, 0x01	; 1
     7d8:	91 05       	cpc	r25, r1
     7da:	19 f4       	brne	.+6      	; 0x7e2 <lcd_entry_mode+0x2a>
     7dc:	89 81       	ldd	r24, Y+1	; 0x01
     7de:	82 60       	ori	r24, 0x02	; 2
     7e0:	89 83       	std	Y+1, r24	; 0x01
	if(S==1) cmd = cmd | 0b00000001;
     7e2:	8c 81       	ldd	r24, Y+4	; 0x04
     7e4:	9d 81       	ldd	r25, Y+5	; 0x05
     7e6:	81 30       	cpi	r24, 0x01	; 1
     7e8:	91 05       	cpc	r25, r1
     7ea:	19 f4       	brne	.+6      	; 0x7f2 <lcd_entry_mode+0x3a>
     7ec:	89 81       	ldd	r24, Y+1	; 0x01
     7ee:	81 60       	ori	r24, 0x01	; 1
     7f0:	89 83       	std	Y+1, r24	; 0x01
	// cmd = (1<<2)  | (ID<<1) | S;
	lcd_command(cmd);
     7f2:	89 81       	ldd	r24, Y+1	; 0x01
     7f4:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
}
     7f8:	0f 90       	pop	r0
     7fa:	0f 90       	pop	r0
     7fc:	0f 90       	pop	r0
     7fe:	0f 90       	pop	r0
     800:	0f 90       	pop	r0
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	08 95       	ret

00000808 <lcd_cursordisplay_shift>:

void lcd_cursordisplay_shift(int SC, int RL)
{
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	00 d0       	rcall	.+0      	; 0x80e <lcd_cursordisplay_shift+0x6>
     80e:	00 d0       	rcall	.+0      	; 0x810 <lcd_cursordisplay_shift+0x8>
     810:	0f 92       	push	r0
     812:	cd b7       	in	r28, 0x3d	; 61
     814:	de b7       	in	r29, 0x3e	; 62
     816:	9b 83       	std	Y+3, r25	; 0x03
     818:	8a 83       	std	Y+2, r24	; 0x02
     81a:	7d 83       	std	Y+5, r23	; 0x05
     81c:	6c 83       	std	Y+4, r22	; 0x04
	unsigned char cmd = 0b00010000;	
     81e:	80 e1       	ldi	r24, 0x10	; 16
     820:	89 83       	std	Y+1, r24	; 0x01
	if(SC==1) cmd = cmd | 0b00001000;
     822:	8a 81       	ldd	r24, Y+2	; 0x02
     824:	9b 81       	ldd	r25, Y+3	; 0x03
     826:	81 30       	cpi	r24, 0x01	; 1
     828:	91 05       	cpc	r25, r1
     82a:	19 f4       	brne	.+6      	; 0x832 <lcd_cursordisplay_shift+0x2a>
     82c:	89 81       	ldd	r24, Y+1	; 0x01
     82e:	88 60       	ori	r24, 0x08	; 8
     830:	89 83       	std	Y+1, r24	; 0x01
	if(RL==1) cmd = cmd | 0b00000100;
     832:	8c 81       	ldd	r24, Y+4	; 0x04
     834:	9d 81       	ldd	r25, Y+5	; 0x05
     836:	81 30       	cpi	r24, 0x01	; 1
     838:	91 05       	cpc	r25, r1
     83a:	19 f4       	brne	.+6      	; 0x842 <lcd_cursordisplay_shift+0x3a>
     83c:	89 81       	ldd	r24, Y+1	; 0x01
     83e:	84 60       	ori	r24, 0x04	; 4
     840:	89 83       	std	Y+1, r24	; 0x01
	// cmd = (1<<4)  | (SC<<3) | (RL<<2);
	lcd_command(cmd);
     842:	89 81       	ldd	r24, Y+1	; 0x01
     844:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
}
     848:	0f 90       	pop	r0
     84a:	0f 90       	pop	r0
     84c:	0f 90       	pop	r0
     84e:	0f 90       	pop	r0
     850:	0f 90       	pop	r0
     852:	df 91       	pop	r29
     854:	cf 91       	pop	r28
     856:	08 95       	ret

00000858 <lcd_display_position>:

void lcd_display_position(unsigned char row, unsigned char col)
{
     858:	cf 93       	push	r28
     85a:	df 93       	push	r29
     85c:	00 d0       	rcall	.+0      	; 0x85e <lcd_display_position+0x6>
     85e:	0f 92       	push	r0
     860:	cd b7       	in	r28, 0x3d	; 61
     862:	de b7       	in	r29, 0x3e	; 62
     864:	8a 83       	std	Y+2, r24	; 0x02
     866:	6b 83       	std	Y+3, r22	; 0x03
	unsigned char cmd = 0b10000000 | ((row-1)*0x40 +(col-1));	
     868:	8a 81       	ldd	r24, Y+2	; 0x02
     86a:	88 2f       	mov	r24, r24
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	01 97       	sbiw	r24, 0x01	; 1
     870:	98 2f       	mov	r25, r24
     872:	92 95       	swap	r25
     874:	99 0f       	add	r25, r25
     876:	99 0f       	add	r25, r25
     878:	90 7c       	andi	r25, 0xC0	; 192
     87a:	8b 81       	ldd	r24, Y+3	; 0x03
     87c:	89 0f       	add	r24, r25
     87e:	81 50       	subi	r24, 0x01	; 1
     880:	80 68       	ori	r24, 0x80	; 128
     882:	89 83       	std	Y+1, r24	; 0x01
	lcd_command(cmd);
     884:	89 81       	ldd	r24, Y+1	; 0x01
     886:	0e 94 80 01 	call	0x300	; 0x300 <lcd_command>
     88a:	0f 90       	pop	r0
     88c:	0f 90       	pop	r0
     88e:	0f 90       	pop	r0
     890:	df 91       	pop	r29
     892:	cf 91       	pop	r28
     894:	08 95       	ret

00000896 <__vector_17>:
#include<avr/io.h>
#include<util/delay.h>
#include<avr/interrupt.h>
#include"txt_lcd.h"

ISR(SPI_STC_vect){
     896:	1f 92       	push	r1
     898:	0f 92       	push	r0
     89a:	0f b6       	in	r0, 0x3f	; 63
     89c:	0f 92       	push	r0
     89e:	00 90 5b 00 	lds	r0, 0x005B
     8a2:	0f 92       	push	r0
     8a4:	11 24       	eor	r1, r1
     8a6:	2f 93       	push	r18
     8a8:	3f 93       	push	r19
     8aa:	4f 93       	push	r20
     8ac:	5f 93       	push	r21
     8ae:	6f 93       	push	r22
     8b0:	7f 93       	push	r23
     8b2:	8f 93       	push	r24
     8b4:	9f 93       	push	r25
     8b6:	af 93       	push	r26
     8b8:	bf 93       	push	r27
     8ba:	ef 93       	push	r30
     8bc:	ff 93       	push	r31
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
     8c2:	cd b7       	in	r28, 0x3d	; 61
     8c4:	de b7       	in	r29, 0x3e	; 62
	lcd_data(SPDR);
     8c6:	8f e2       	ldi	r24, 0x2F	; 47
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	fc 01       	movw	r30, r24
     8cc:	80 81       	ld	r24, Z
     8ce:	0e 94 9d 02 	call	0x53a	; 0x53a <lcd_data>
}
     8d2:	df 91       	pop	r29
     8d4:	cf 91       	pop	r28
     8d6:	ff 91       	pop	r31
     8d8:	ef 91       	pop	r30
     8da:	bf 91       	pop	r27
     8dc:	af 91       	pop	r26
     8de:	9f 91       	pop	r25
     8e0:	8f 91       	pop	r24
     8e2:	7f 91       	pop	r23
     8e4:	6f 91       	pop	r22
     8e6:	5f 91       	pop	r21
     8e8:	4f 91       	pop	r20
     8ea:	3f 91       	pop	r19
     8ec:	2f 91       	pop	r18
     8ee:	0f 90       	pop	r0
     8f0:	00 92 5b 00 	sts	0x005B, r0
     8f4:	0f 90       	pop	r0
     8f6:	0f be       	out	0x3f, r0	; 63
     8f8:	0f 90       	pop	r0
     8fa:	1f 90       	pop	r1
     8fc:	18 95       	reti

000008fe <main>:

int main(void){
     8fe:	cf 93       	push	r28
     900:	df 93       	push	r29
     902:	cd b7       	in	r28, 0x3d	; 61
     904:	de b7       	in	r29, 0x3e	; 62

	lcd_init();
     906:	0e 94 7d 02 	call	0x4fa	; 0x4fa <lcd_init>
	DDRB = 0b00001000;
     90a:	87 e3       	ldi	r24, 0x37	; 55
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	28 e0       	ldi	r18, 0x08	; 8
     910:	fc 01       	movw	r30, r24
     912:	20 83       	st	Z, r18
	PORTB = 0x00;
     914:	88 e3       	ldi	r24, 0x38	; 56
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	fc 01       	movw	r30, r24
     91a:	10 82       	st	Z, r1
	SPCR = 0xcc;
     91c:	8d e2       	ldi	r24, 0x2D	; 45
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	2c ec       	ldi	r18, 0xCC	; 204
     922:	fc 01       	movw	r30, r24
     924:	20 83       	st	Z, r18
	SPSR = 0x00;
     926:	8e e2       	ldi	r24, 0x2E	; 46
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	fc 01       	movw	r30, r24
     92c:	10 82       	st	Z, r1
	SREG = 0x80; //전역 인터럽트 인에이블
     92e:	8f e5       	ldi	r24, 0x5F	; 95
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	20 e8       	ldi	r18, 0x80	; 128
     934:	fc 01       	movw	r30, r24
     936:	20 83       	st	Z, r18

	lcd_string("SPI Slave ...");
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	91 e0       	ldi	r25, 0x01	; 1
     93c:	0e 94 9b 03 	call	0x736	; 0x736 <lcd_string>
	lcd_display_position(2,1);
     940:	82 e0       	ldi	r24, 0x02	; 2
     942:	61 e0       	ldi	r22, 0x01	; 1
     944:	0e 94 2c 04 	call	0x858	; 0x858 <lcd_display_position>
	while(1);
     948:	ff cf       	rjmp	.-2      	; 0x948 <main+0x4a>

0000094a <vfprintf>:
     94a:	2f 92       	push	r2
     94c:	3f 92       	push	r3
     94e:	4f 92       	push	r4
     950:	5f 92       	push	r5
     952:	6f 92       	push	r6
     954:	7f 92       	push	r7
     956:	8f 92       	push	r8
     958:	9f 92       	push	r9
     95a:	af 92       	push	r10
     95c:	bf 92       	push	r11
     95e:	cf 92       	push	r12
     960:	df 92       	push	r13
     962:	ef 92       	push	r14
     964:	ff 92       	push	r15
     966:	0f 93       	push	r16
     968:	1f 93       	push	r17
     96a:	cf 93       	push	r28
     96c:	df 93       	push	r29
     96e:	cd b7       	in	r28, 0x3d	; 61
     970:	de b7       	in	r29, 0x3e	; 62
     972:	65 97       	sbiw	r28, 0x15	; 21
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	f8 94       	cli
     978:	de bf       	out	0x3e, r29	; 62
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	cd bf       	out	0x3d, r28	; 61
     97e:	4c 01       	movw	r8, r24
     980:	7f 87       	std	Y+15, r23	; 0x0f
     982:	6e 87       	std	Y+14, r22	; 0x0e
     984:	fc 01       	movw	r30, r24
     986:	17 82       	std	Z+7, r1	; 0x07
     988:	16 82       	std	Z+6, r1	; 0x06
     98a:	83 81       	ldd	r24, Z+3	; 0x03
     98c:	81 fd       	sbrc	r24, 1
     98e:	04 c0       	rjmp	.+8      	; 0x998 <vfprintf+0x4e>
     990:	76 c3       	rjmp	.+1772   	; 0x107e <vfprintf+0x734>
     992:	4c 85       	ldd	r20, Y+12	; 0x0c
     994:	5d 85       	ldd	r21, Y+13	; 0x0d
     996:	04 c0       	rjmp	.+8      	; 0x9a0 <vfprintf+0x56>
     998:	1e 01       	movw	r2, r28
     99a:	08 94       	sec
     99c:	21 1c       	adc	r2, r1
     99e:	31 1c       	adc	r3, r1
     9a0:	f4 01       	movw	r30, r8
     9a2:	93 81       	ldd	r25, Z+3	; 0x03
     9a4:	ee 85       	ldd	r30, Y+14	; 0x0e
     9a6:	ff 85       	ldd	r31, Y+15	; 0x0f
     9a8:	93 fd       	sbrc	r25, 3
     9aa:	85 91       	lpm	r24, Z+
     9ac:	93 ff       	sbrs	r25, 3
     9ae:	81 91       	ld	r24, Z+
     9b0:	ff 87       	std	Y+15, r31	; 0x0f
     9b2:	ee 87       	std	Y+14, r30	; 0x0e
     9b4:	88 23       	and	r24, r24
     9b6:	09 f4       	brne	.+2      	; 0x9ba <vfprintf+0x70>
     9b8:	5e c3       	rjmp	.+1724   	; 0x1076 <vfprintf+0x72c>
     9ba:	85 32       	cpi	r24, 0x25	; 37
     9bc:	41 f4       	brne	.+16     	; 0x9ce <vfprintf+0x84>
     9be:	93 fd       	sbrc	r25, 3
     9c0:	85 91       	lpm	r24, Z+
     9c2:	93 ff       	sbrs	r25, 3
     9c4:	81 91       	ld	r24, Z+
     9c6:	ff 87       	std	Y+15, r31	; 0x0f
     9c8:	ee 87       	std	Y+14, r30	; 0x0e
     9ca:	85 32       	cpi	r24, 0x25	; 37
     9cc:	59 f4       	brne	.+22     	; 0x9e4 <vfprintf+0x9a>
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	b4 01       	movw	r22, r8
     9d2:	4c 8b       	std	Y+20, r20	; 0x14
     9d4:	5d 8b       	std	Y+21, r21	; 0x15
     9d6:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     9da:	4c 89       	ldd	r20, Y+20	; 0x14
     9dc:	5d 89       	ldd	r21, Y+21	; 0x15
     9de:	5d 87       	std	Y+13, r21	; 0x0d
     9e0:	4c 87       	std	Y+12, r20	; 0x0c
     9e2:	d7 cf       	rjmp	.-82     	; 0x992 <vfprintf+0x48>
     9e4:	ff 24       	eor	r15, r15
     9e6:	dd 24       	eor	r13, r13
     9e8:	10 e0       	ldi	r17, 0x00	; 0
     9ea:	10 32       	cpi	r17, 0x20	; 32
     9ec:	b0 f4       	brcc	.+44     	; 0xa1a <vfprintf+0xd0>
     9ee:	8b 32       	cpi	r24, 0x2B	; 43
     9f0:	69 f0       	breq	.+26     	; 0xa0c <vfprintf+0xc2>
     9f2:	8c 32       	cpi	r24, 0x2C	; 44
     9f4:	28 f4       	brcc	.+10     	; 0xa00 <vfprintf+0xb6>
     9f6:	80 32       	cpi	r24, 0x20	; 32
     9f8:	51 f0       	breq	.+20     	; 0xa0e <vfprintf+0xc4>
     9fa:	83 32       	cpi	r24, 0x23	; 35
     9fc:	71 f4       	brne	.+28     	; 0xa1a <vfprintf+0xd0>
     9fe:	0b c0       	rjmp	.+22     	; 0xa16 <vfprintf+0xcc>
     a00:	8d 32       	cpi	r24, 0x2D	; 45
     a02:	39 f0       	breq	.+14     	; 0xa12 <vfprintf+0xc8>
     a04:	80 33       	cpi	r24, 0x30	; 48
     a06:	49 f4       	brne	.+18     	; 0xa1a <vfprintf+0xd0>
     a08:	11 60       	ori	r17, 0x01	; 1
     a0a:	2c c0       	rjmp	.+88     	; 0xa64 <vfprintf+0x11a>
     a0c:	12 60       	ori	r17, 0x02	; 2
     a0e:	14 60       	ori	r17, 0x04	; 4
     a10:	29 c0       	rjmp	.+82     	; 0xa64 <vfprintf+0x11a>
     a12:	18 60       	ori	r17, 0x08	; 8
     a14:	27 c0       	rjmp	.+78     	; 0xa64 <vfprintf+0x11a>
     a16:	10 61       	ori	r17, 0x10	; 16
     a18:	25 c0       	rjmp	.+74     	; 0xa64 <vfprintf+0x11a>
     a1a:	17 fd       	sbrc	r17, 7
     a1c:	2e c0       	rjmp	.+92     	; 0xa7a <vfprintf+0x130>
     a1e:	28 2f       	mov	r18, r24
     a20:	20 53       	subi	r18, 0x30	; 48
     a22:	2a 30       	cpi	r18, 0x0A	; 10
     a24:	98 f4       	brcc	.+38     	; 0xa4c <vfprintf+0x102>
     a26:	16 ff       	sbrs	r17, 6
     a28:	08 c0       	rjmp	.+16     	; 0xa3a <vfprintf+0xf0>
     a2a:	8f 2d       	mov	r24, r15
     a2c:	88 0f       	add	r24, r24
     a2e:	f8 2e       	mov	r15, r24
     a30:	ff 0c       	add	r15, r15
     a32:	ff 0c       	add	r15, r15
     a34:	f8 0e       	add	r15, r24
     a36:	f2 0e       	add	r15, r18
     a38:	15 c0       	rjmp	.+42     	; 0xa64 <vfprintf+0x11a>
     a3a:	8d 2d       	mov	r24, r13
     a3c:	88 0f       	add	r24, r24
     a3e:	d8 2e       	mov	r13, r24
     a40:	dd 0c       	add	r13, r13
     a42:	dd 0c       	add	r13, r13
     a44:	d8 0e       	add	r13, r24
     a46:	d2 0e       	add	r13, r18
     a48:	10 62       	ori	r17, 0x20	; 32
     a4a:	0c c0       	rjmp	.+24     	; 0xa64 <vfprintf+0x11a>
     a4c:	8e 32       	cpi	r24, 0x2E	; 46
     a4e:	21 f4       	brne	.+8      	; 0xa58 <vfprintf+0x10e>
     a50:	16 fd       	sbrc	r17, 6
     a52:	11 c3       	rjmp	.+1570   	; 0x1076 <vfprintf+0x72c>
     a54:	10 64       	ori	r17, 0x40	; 64
     a56:	06 c0       	rjmp	.+12     	; 0xa64 <vfprintf+0x11a>
     a58:	8c 36       	cpi	r24, 0x6C	; 108
     a5a:	11 f4       	brne	.+4      	; 0xa60 <vfprintf+0x116>
     a5c:	10 68       	ori	r17, 0x80	; 128
     a5e:	02 c0       	rjmp	.+4      	; 0xa64 <vfprintf+0x11a>
     a60:	88 36       	cpi	r24, 0x68	; 104
     a62:	59 f4       	brne	.+22     	; 0xa7a <vfprintf+0x130>
     a64:	ee 85       	ldd	r30, Y+14	; 0x0e
     a66:	ff 85       	ldd	r31, Y+15	; 0x0f
     a68:	93 fd       	sbrc	r25, 3
     a6a:	85 91       	lpm	r24, Z+
     a6c:	93 ff       	sbrs	r25, 3
     a6e:	81 91       	ld	r24, Z+
     a70:	ff 87       	std	Y+15, r31	; 0x0f
     a72:	ee 87       	std	Y+14, r30	; 0x0e
     a74:	88 23       	and	r24, r24
     a76:	09 f0       	breq	.+2      	; 0xa7a <vfprintf+0x130>
     a78:	b8 cf       	rjmp	.-144    	; 0x9ea <vfprintf+0xa0>
     a7a:	98 2f       	mov	r25, r24
     a7c:	95 54       	subi	r25, 0x45	; 69
     a7e:	93 30       	cpi	r25, 0x03	; 3
     a80:	18 f4       	brcc	.+6      	; 0xa88 <vfprintf+0x13e>
     a82:	10 61       	ori	r17, 0x10	; 16
     a84:	80 5e       	subi	r24, 0xE0	; 224
     a86:	06 c0       	rjmp	.+12     	; 0xa94 <vfprintf+0x14a>
     a88:	98 2f       	mov	r25, r24
     a8a:	95 56       	subi	r25, 0x65	; 101
     a8c:	93 30       	cpi	r25, 0x03	; 3
     a8e:	08 f0       	brcs	.+2      	; 0xa92 <vfprintf+0x148>
     a90:	a2 c1       	rjmp	.+836    	; 0xdd6 <vfprintf+0x48c>
     a92:	1f 7e       	andi	r17, 0xEF	; 239
     a94:	16 fd       	sbrc	r17, 6
     a96:	02 c0       	rjmp	.+4      	; 0xa9c <vfprintf+0x152>
     a98:	e6 e0       	ldi	r30, 0x06	; 6
     a9a:	fe 2e       	mov	r15, r30
     a9c:	1f 73       	andi	r17, 0x3F	; 63
     a9e:	85 36       	cpi	r24, 0x65	; 101
     aa0:	11 f4       	brne	.+4      	; 0xaa6 <vfprintf+0x15c>
     aa2:	10 64       	ori	r17, 0x40	; 64
     aa4:	06 c0       	rjmp	.+12     	; 0xab2 <vfprintf+0x168>
     aa6:	86 36       	cpi	r24, 0x66	; 102
     aa8:	11 f4       	brne	.+4      	; 0xaae <vfprintf+0x164>
     aaa:	10 68       	ori	r17, 0x80	; 128
     aac:	02 c0       	rjmp	.+4      	; 0xab2 <vfprintf+0x168>
     aae:	f1 10       	cpse	r15, r1
     ab0:	fa 94       	dec	r15
     ab2:	17 ff       	sbrs	r17, 7
     ab4:	07 c0       	rjmp	.+14     	; 0xac4 <vfprintf+0x17a>
     ab6:	fb e3       	ldi	r31, 0x3B	; 59
     ab8:	ff 15       	cp	r31, r15
     aba:	48 f0       	brcs	.+18     	; 0xace <vfprintf+0x184>
     abc:	ef 2c       	mov	r14, r15
     abe:	e3 94       	inc	r14
     ac0:	27 e0       	ldi	r18, 0x07	; 7
     ac2:	0d c0       	rjmp	.+26     	; 0xade <vfprintf+0x194>
     ac4:	27 e0       	ldi	r18, 0x07	; 7
     ac6:	2f 15       	cp	r18, r15
     ac8:	30 f0       	brcs	.+12     	; 0xad6 <vfprintf+0x18c>
     aca:	2f 2d       	mov	r18, r15
     acc:	07 c0       	rjmp	.+14     	; 0xadc <vfprintf+0x192>
     ace:	27 e0       	ldi	r18, 0x07	; 7
     ad0:	7c e3       	ldi	r23, 0x3C	; 60
     ad2:	e7 2e       	mov	r14, r23
     ad4:	04 c0       	rjmp	.+8      	; 0xade <vfprintf+0x194>
     ad6:	27 e0       	ldi	r18, 0x07	; 7
     ad8:	67 e0       	ldi	r22, 0x07	; 7
     ada:	f6 2e       	mov	r15, r22
     adc:	ee 24       	eor	r14, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	04 96       	adiw	r24, 0x04	; 4
     ae2:	9d 87       	std	Y+13, r25	; 0x0d
     ae4:	8c 87       	std	Y+12, r24	; 0x0c
     ae6:	fa 01       	movw	r30, r20
     ae8:	60 81       	ld	r22, Z
     aea:	71 81       	ldd	r23, Z+1	; 0x01
     aec:	82 81       	ldd	r24, Z+2	; 0x02
     aee:	93 81       	ldd	r25, Z+3	; 0x03
     af0:	a1 01       	movw	r20, r2
     af2:	0e 2d       	mov	r16, r14
     af4:	0e 94 ce 09 	call	0x139c	; 0x139c <__ftoa_engine>
     af8:	5c 01       	movw	r10, r24
     afa:	c9 80       	ldd	r12, Y+1	; 0x01
     afc:	2c 2d       	mov	r18, r12
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	39 8b       	std	Y+17, r19	; 0x11
     b02:	28 8b       	std	Y+16, r18	; 0x10
     b04:	c0 fe       	sbrs	r12, 0
     b06:	03 c0       	rjmp	.+6      	; 0xb0e <vfprintf+0x1c4>
     b08:	38 89       	ldd	r19, Y+16	; 0x10
     b0a:	33 ff       	sbrs	r19, 3
     b0c:	06 c0       	rjmp	.+12     	; 0xb1a <vfprintf+0x1d0>
     b0e:	11 fd       	sbrc	r17, 1
     b10:	06 c0       	rjmp	.+12     	; 0xb1e <vfprintf+0x1d4>
     b12:	12 ff       	sbrs	r17, 2
     b14:	06 c0       	rjmp	.+12     	; 0xb22 <vfprintf+0x1d8>
     b16:	00 e2       	ldi	r16, 0x20	; 32
     b18:	05 c0       	rjmp	.+10     	; 0xb24 <vfprintf+0x1da>
     b1a:	0d e2       	ldi	r16, 0x2D	; 45
     b1c:	03 c0       	rjmp	.+6      	; 0xb24 <vfprintf+0x1da>
     b1e:	0b e2       	ldi	r16, 0x2B	; 43
     b20:	01 c0       	rjmp	.+2      	; 0xb24 <vfprintf+0x1da>
     b22:	00 e0       	ldi	r16, 0x00	; 0
     b24:	88 89       	ldd	r24, Y+16	; 0x10
     b26:	99 89       	ldd	r25, Y+17	; 0x11
     b28:	8c 70       	andi	r24, 0x0C	; 12
     b2a:	90 70       	andi	r25, 0x00	; 0
     b2c:	00 97       	sbiw	r24, 0x00	; 0
     b2e:	09 f4       	brne	.+2      	; 0xb32 <vfprintf+0x1e8>
     b30:	3c c0       	rjmp	.+120    	; 0xbaa <vfprintf+0x260>
     b32:	00 23       	and	r16, r16
     b34:	11 f0       	breq	.+4      	; 0xb3a <vfprintf+0x1f0>
     b36:	84 e0       	ldi	r24, 0x04	; 4
     b38:	01 c0       	rjmp	.+2      	; 0xb3c <vfprintf+0x1f2>
     b3a:	83 e0       	ldi	r24, 0x03	; 3
     b3c:	8d 15       	cp	r24, r13
     b3e:	58 f4       	brcc	.+22     	; 0xb56 <vfprintf+0x20c>
     b40:	d8 1a       	sub	r13, r24
     b42:	13 fd       	sbrc	r17, 3
     b44:	09 c0       	rjmp	.+18     	; 0xb58 <vfprintf+0x20e>
     b46:	80 e2       	ldi	r24, 0x20	; 32
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	b4 01       	movw	r22, r8
     b4c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     b50:	da 94       	dec	r13
     b52:	c9 f7       	brne	.-14     	; 0xb46 <vfprintf+0x1fc>
     b54:	01 c0       	rjmp	.+2      	; 0xb58 <vfprintf+0x20e>
     b56:	dd 24       	eor	r13, r13
     b58:	00 23       	and	r16, r16
     b5a:	29 f0       	breq	.+10     	; 0xb66 <vfprintf+0x21c>
     b5c:	80 2f       	mov	r24, r16
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	b4 01       	movw	r22, r8
     b62:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     b66:	88 89       	ldd	r24, Y+16	; 0x10
     b68:	83 fd       	sbrc	r24, 3
     b6a:	05 c0       	rjmp	.+10     	; 0xb76 <vfprintf+0x22c>
     b6c:	30 e9       	ldi	r19, 0x90	; 144
     b6e:	e3 2e       	mov	r14, r19
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	f3 2e       	mov	r15, r19
     b74:	11 c0       	rjmp	.+34     	; 0xb98 <vfprintf+0x24e>
     b76:	2c e8       	ldi	r18, 0x8C	; 140
     b78:	e2 2e       	mov	r14, r18
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	f2 2e       	mov	r15, r18
     b7e:	0c c0       	rjmp	.+24     	; 0xb98 <vfprintf+0x24e>
     b80:	01 15       	cp	r16, r1
     b82:	11 05       	cpc	r17, r1
     b84:	09 f0       	breq	.+2      	; 0xb88 <vfprintf+0x23e>
     b86:	80 52       	subi	r24, 0x20	; 32
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	b4 01       	movw	r22, r8
     b8c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     b90:	08 94       	sec
     b92:	e1 1c       	adc	r14, r1
     b94:	f1 1c       	adc	r15, r1
     b96:	04 c0       	rjmp	.+8      	; 0xba0 <vfprintf+0x256>
     b98:	01 2f       	mov	r16, r17
     b9a:	10 e0       	ldi	r17, 0x00	; 0
     b9c:	00 71       	andi	r16, 0x10	; 16
     b9e:	10 70       	andi	r17, 0x00	; 0
     ba0:	f7 01       	movw	r30, r14
     ba2:	84 91       	lpm	r24, Z
     ba4:	88 23       	and	r24, r24
     ba6:	61 f7       	brne	.-40     	; 0xb80 <vfprintf+0x236>
     ba8:	63 c2       	rjmp	.+1222   	; 0x1070 <vfprintf+0x726>
     baa:	17 ff       	sbrs	r17, 7
     bac:	0e c0       	rjmp	.+28     	; 0xbca <vfprintf+0x280>
     bae:	ea 0c       	add	r14, r10
     bb0:	f8 89       	ldd	r31, Y+16	; 0x10
     bb2:	f4 ff       	sbrs	r31, 4
     bb4:	04 c0       	rjmp	.+8      	; 0xbbe <vfprintf+0x274>
     bb6:	8a 81       	ldd	r24, Y+2	; 0x02
     bb8:	81 33       	cpi	r24, 0x31	; 49
     bba:	09 f4       	brne	.+2      	; 0xbbe <vfprintf+0x274>
     bbc:	ea 94       	dec	r14
     bbe:	1e 14       	cp	r1, r14
     bc0:	4c f5       	brge	.+82     	; 0xc14 <vfprintf+0x2ca>
     bc2:	28 e0       	ldi	r18, 0x08	; 8
     bc4:	2e 15       	cp	r18, r14
     bc6:	48 f1       	brcs	.+82     	; 0xc1a <vfprintf+0x2d0>
     bc8:	2c c0       	rjmp	.+88     	; 0xc22 <vfprintf+0x2d8>
     bca:	16 fd       	sbrc	r17, 6
     bcc:	2a c0       	rjmp	.+84     	; 0xc22 <vfprintf+0x2d8>
     bce:	8f 2d       	mov	r24, r15
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	8a 15       	cp	r24, r10
     bd4:	9b 05       	cpc	r25, r11
     bd6:	44 f0       	brlt	.+16     	; 0xbe8 <vfprintf+0x29e>
     bd8:	3c ef       	ldi	r19, 0xFC	; 252
     bda:	a3 16       	cp	r10, r19
     bdc:	3f ef       	ldi	r19, 0xFF	; 255
     bde:	b3 06       	cpc	r11, r19
     be0:	1c f0       	brlt	.+6      	; 0xbe8 <vfprintf+0x29e>
     be2:	10 68       	ori	r17, 0x80	; 128
     be4:	01 c0       	rjmp	.+2      	; 0xbe8 <vfprintf+0x29e>
     be6:	fa 94       	dec	r15
     be8:	ff 20       	and	r15, r15
     bea:	49 f0       	breq	.+18     	; 0xbfe <vfprintf+0x2b4>
     bec:	e2 e0       	ldi	r30, 0x02	; 2
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	ec 0f       	add	r30, r28
     bf2:	fd 1f       	adc	r31, r29
     bf4:	ef 0d       	add	r30, r15
     bf6:	f1 1d       	adc	r31, r1
     bf8:	80 81       	ld	r24, Z
     bfa:	80 33       	cpi	r24, 0x30	; 48
     bfc:	a1 f3       	breq	.-24     	; 0xbe6 <vfprintf+0x29c>
     bfe:	17 ff       	sbrs	r17, 7
     c00:	10 c0       	rjmp	.+32     	; 0xc22 <vfprintf+0x2d8>
     c02:	ef 2c       	mov	r14, r15
     c04:	e3 94       	inc	r14
     c06:	8f 2d       	mov	r24, r15
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	a8 16       	cp	r10, r24
     c0c:	b9 06       	cpc	r11, r25
     c0e:	44 f4       	brge	.+16     	; 0xc20 <vfprintf+0x2d6>
     c10:	fa 18       	sub	r15, r10
     c12:	07 c0       	rjmp	.+14     	; 0xc22 <vfprintf+0x2d8>
     c14:	ee 24       	eor	r14, r14
     c16:	e3 94       	inc	r14
     c18:	04 c0       	rjmp	.+8      	; 0xc22 <vfprintf+0x2d8>
     c1a:	98 e0       	ldi	r25, 0x08	; 8
     c1c:	e9 2e       	mov	r14, r25
     c1e:	01 c0       	rjmp	.+2      	; 0xc22 <vfprintf+0x2d8>
     c20:	ff 24       	eor	r15, r15
     c22:	17 ff       	sbrs	r17, 7
     c24:	07 c0       	rjmp	.+14     	; 0xc34 <vfprintf+0x2ea>
     c26:	1a 14       	cp	r1, r10
     c28:	1b 04       	cpc	r1, r11
     c2a:	3c f4       	brge	.+14     	; 0xc3a <vfprintf+0x2f0>
     c2c:	95 01       	movw	r18, r10
     c2e:	2f 5f       	subi	r18, 0xFF	; 255
     c30:	3f 4f       	sbci	r19, 0xFF	; 255
     c32:	05 c0       	rjmp	.+10     	; 0xc3e <vfprintf+0x2f4>
     c34:	25 e0       	ldi	r18, 0x05	; 5
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <vfprintf+0x2f4>
     c3a:	21 e0       	ldi	r18, 0x01	; 1
     c3c:	30 e0       	ldi	r19, 0x00	; 0
     c3e:	00 23       	and	r16, r16
     c40:	11 f0       	breq	.+4      	; 0xc46 <vfprintf+0x2fc>
     c42:	2f 5f       	subi	r18, 0xFF	; 255
     c44:	3f 4f       	sbci	r19, 0xFF	; 255
     c46:	ff 20       	and	r15, r15
     c48:	29 f0       	breq	.+10     	; 0xc54 <vfprintf+0x30a>
     c4a:	8f 2d       	mov	r24, r15
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	01 96       	adiw	r24, 0x01	; 1
     c50:	28 0f       	add	r18, r24
     c52:	39 1f       	adc	r19, r25
     c54:	8d 2d       	mov	r24, r13
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	28 17       	cp	r18, r24
     c5a:	39 07       	cpc	r19, r25
     c5c:	14 f4       	brge	.+4      	; 0xc62 <vfprintf+0x318>
     c5e:	d2 1a       	sub	r13, r18
     c60:	01 c0       	rjmp	.+2      	; 0xc64 <vfprintf+0x31a>
     c62:	dd 24       	eor	r13, r13
     c64:	61 2e       	mov	r6, r17
     c66:	77 24       	eor	r7, r7
     c68:	c3 01       	movw	r24, r6
     c6a:	89 70       	andi	r24, 0x09	; 9
     c6c:	90 70       	andi	r25, 0x00	; 0
     c6e:	00 97       	sbiw	r24, 0x00	; 0
     c70:	49 f4       	brne	.+18     	; 0xc84 <vfprintf+0x33a>
     c72:	06 c0       	rjmp	.+12     	; 0xc80 <vfprintf+0x336>
     c74:	80 e2       	ldi	r24, 0x20	; 32
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	b4 01       	movw	r22, r8
     c7a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     c7e:	da 94       	dec	r13
     c80:	dd 20       	and	r13, r13
     c82:	c1 f7       	brne	.-16     	; 0xc74 <vfprintf+0x32a>
     c84:	00 23       	and	r16, r16
     c86:	29 f0       	breq	.+10     	; 0xc92 <vfprintf+0x348>
     c88:	80 2f       	mov	r24, r16
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	b4 01       	movw	r22, r8
     c8e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     c92:	63 fc       	sbrc	r6, 3
     c94:	09 c0       	rjmp	.+18     	; 0xca8 <vfprintf+0x35e>
     c96:	06 c0       	rjmp	.+12     	; 0xca4 <vfprintf+0x35a>
     c98:	80 e3       	ldi	r24, 0x30	; 48
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	b4 01       	movw	r22, r8
     c9e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     ca2:	da 94       	dec	r13
     ca4:	dd 20       	and	r13, r13
     ca6:	c1 f7       	brne	.-16     	; 0xc98 <vfprintf+0x34e>
     ca8:	17 ff       	sbrs	r17, 7
     caa:	48 c0       	rjmp	.+144    	; 0xd3c <vfprintf+0x3f2>
     cac:	85 01       	movw	r16, r10
     cae:	b7 fe       	sbrs	r11, 7
     cb0:	02 c0       	rjmp	.+4      	; 0xcb6 <vfprintf+0x36c>
     cb2:	00 e0       	ldi	r16, 0x00	; 0
     cb4:	10 e0       	ldi	r17, 0x00	; 0
     cb6:	66 24       	eor	r6, r6
     cb8:	77 24       	eor	r7, r7
     cba:	95 01       	movw	r18, r10
     cbc:	2e 19       	sub	r18, r14
     cbe:	31 09       	sbc	r19, r1
     cc0:	3b 8b       	std	Y+19, r19	; 0x13
     cc2:	2a 8b       	std	Y+18, r18	; 0x12
     cc4:	25 01       	movw	r4, r10
     cc6:	40 1a       	sub	r4, r16
     cc8:	51 0a       	sbc	r5, r17
     cca:	42 0c       	add	r4, r2
     ccc:	53 1c       	adc	r5, r3
     cce:	6f 2d       	mov	r22, r15
     cd0:	70 e0       	ldi	r23, 0x00	; 0
     cd2:	ee 24       	eor	r14, r14
     cd4:	ff 24       	eor	r15, r15
     cd6:	e6 1a       	sub	r14, r22
     cd8:	f7 0a       	sbc	r15, r23
     cda:	3f ef       	ldi	r19, 0xFF	; 255
     cdc:	0f 3f       	cpi	r16, 0xFF	; 255
     cde:	13 07       	cpc	r17, r19
     ce0:	29 f4       	brne	.+10     	; 0xcec <vfprintf+0x3a2>
     ce2:	8e e2       	ldi	r24, 0x2E	; 46
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	b4 01       	movw	r22, r8
     ce8:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     cec:	a0 16       	cp	r10, r16
     cee:	b1 06       	cpc	r11, r17
     cf0:	54 f0       	brlt	.+20     	; 0xd06 <vfprintf+0x3bc>
     cf2:	2a 89       	ldd	r18, Y+18	; 0x12
     cf4:	3b 89       	ldd	r19, Y+19	; 0x13
     cf6:	20 17       	cp	r18, r16
     cf8:	31 07       	cpc	r19, r17
     cfa:	2c f4       	brge	.+10     	; 0xd06 <vfprintf+0x3bc>
     cfc:	f2 01       	movw	r30, r4
     cfe:	e6 0d       	add	r30, r6
     d00:	f7 1d       	adc	r31, r7
     d02:	81 81       	ldd	r24, Z+1	; 0x01
     d04:	01 c0       	rjmp	.+2      	; 0xd08 <vfprintf+0x3be>
     d06:	80 e3       	ldi	r24, 0x30	; 48
     d08:	01 50       	subi	r16, 0x01	; 1
     d0a:	10 40       	sbci	r17, 0x00	; 0
     d0c:	08 94       	sec
     d0e:	61 1c       	adc	r6, r1
     d10:	71 1c       	adc	r7, r1
     d12:	0e 15       	cp	r16, r14
     d14:	1f 05       	cpc	r17, r15
     d16:	2c f0       	brlt	.+10     	; 0xd22 <vfprintf+0x3d8>
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	b4 01       	movw	r22, r8
     d1c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     d20:	dc cf       	rjmp	.-72     	; 0xcda <vfprintf+0x390>
     d22:	0a 15       	cp	r16, r10
     d24:	1b 05       	cpc	r17, r11
     d26:	41 f4       	brne	.+16     	; 0xd38 <vfprintf+0x3ee>
     d28:	9a 81       	ldd	r25, Y+2	; 0x02
     d2a:	96 33       	cpi	r25, 0x36	; 54
     d2c:	20 f4       	brcc	.+8      	; 0xd36 <vfprintf+0x3ec>
     d2e:	95 33       	cpi	r25, 0x35	; 53
     d30:	19 f4       	brne	.+6      	; 0xd38 <vfprintf+0x3ee>
     d32:	38 89       	ldd	r19, Y+16	; 0x10
     d34:	34 ff       	sbrs	r19, 4
     d36:	81 e3       	ldi	r24, 0x31	; 49
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	49 c0       	rjmp	.+146    	; 0xdce <vfprintf+0x484>
     d3c:	8a 81       	ldd	r24, Y+2	; 0x02
     d3e:	81 33       	cpi	r24, 0x31	; 49
     d40:	11 f0       	breq	.+4      	; 0xd46 <vfprintf+0x3fc>
     d42:	9f ee       	ldi	r25, 0xEF	; 239
     d44:	c9 22       	and	r12, r25
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	b4 01       	movw	r22, r8
     d4a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     d4e:	ff 20       	and	r15, r15
     d50:	89 f0       	breq	.+34     	; 0xd74 <vfprintf+0x42a>
     d52:	8e e2       	ldi	r24, 0x2E	; 46
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	b4 01       	movw	r22, r8
     d58:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     d5c:	12 e0       	ldi	r17, 0x02	; 2
     d5e:	f1 01       	movw	r30, r2
     d60:	e1 0f       	add	r30, r17
     d62:	f1 1d       	adc	r31, r1
     d64:	1f 5f       	subi	r17, 0xFF	; 255
     d66:	80 81       	ld	r24, Z
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	b4 01       	movw	r22, r8
     d6c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     d70:	fa 94       	dec	r15
     d72:	a9 f7       	brne	.-22     	; 0xd5e <vfprintf+0x414>
     d74:	64 fe       	sbrs	r6, 4
     d76:	03 c0       	rjmp	.+6      	; 0xd7e <vfprintf+0x434>
     d78:	85 e4       	ldi	r24, 0x45	; 69
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	02 c0       	rjmp	.+4      	; 0xd82 <vfprintf+0x438>
     d7e:	85 e6       	ldi	r24, 0x65	; 101
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	b4 01       	movw	r22, r8
     d84:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     d88:	b7 fc       	sbrc	r11, 7
     d8a:	05 c0       	rjmp	.+10     	; 0xd96 <vfprintf+0x44c>
     d8c:	a1 14       	cp	r10, r1
     d8e:	b1 04       	cpc	r11, r1
     d90:	41 f4       	brne	.+16     	; 0xda2 <vfprintf+0x458>
     d92:	c4 fe       	sbrs	r12, 4
     d94:	06 c0       	rjmp	.+12     	; 0xda2 <vfprintf+0x458>
     d96:	b0 94       	com	r11
     d98:	a1 94       	neg	r10
     d9a:	b1 08       	sbc	r11, r1
     d9c:	b3 94       	inc	r11
     d9e:	8d e2       	ldi	r24, 0x2D	; 45
     da0:	01 c0       	rjmp	.+2      	; 0xda4 <vfprintf+0x45a>
     da2:	8b e2       	ldi	r24, 0x2B	; 43
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	b4 01       	movw	r22, r8
     da8:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     dac:	80 e3       	ldi	r24, 0x30	; 48
     dae:	05 c0       	rjmp	.+10     	; 0xdba <vfprintf+0x470>
     db0:	8f 5f       	subi	r24, 0xFF	; 255
     db2:	e6 ef       	ldi	r30, 0xF6	; 246
     db4:	ff ef       	ldi	r31, 0xFF	; 255
     db6:	ae 0e       	add	r10, r30
     db8:	bf 1e       	adc	r11, r31
     dba:	fa e0       	ldi	r31, 0x0A	; 10
     dbc:	af 16       	cp	r10, r31
     dbe:	b1 04       	cpc	r11, r1
     dc0:	bc f7       	brge	.-18     	; 0xdb0 <vfprintf+0x466>
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	b4 01       	movw	r22, r8
     dc6:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     dca:	c5 01       	movw	r24, r10
     dcc:	c0 96       	adiw	r24, 0x30	; 48
     dce:	b4 01       	movw	r22, r8
     dd0:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     dd4:	4d c1       	rjmp	.+666    	; 0x1070 <vfprintf+0x726>
     dd6:	83 36       	cpi	r24, 0x63	; 99
     dd8:	31 f0       	breq	.+12     	; 0xde6 <vfprintf+0x49c>
     dda:	83 37       	cpi	r24, 0x73	; 115
     ddc:	89 f0       	breq	.+34     	; 0xe00 <vfprintf+0x4b6>
     dde:	83 35       	cpi	r24, 0x53	; 83
     de0:	09 f0       	breq	.+2      	; 0xde4 <vfprintf+0x49a>
     de2:	59 c0       	rjmp	.+178    	; 0xe96 <vfprintf+0x54c>
     de4:	22 c0       	rjmp	.+68     	; 0xe2a <vfprintf+0x4e0>
     de6:	9a 01       	movw	r18, r20
     de8:	2e 5f       	subi	r18, 0xFE	; 254
     dea:	3f 4f       	sbci	r19, 0xFF	; 255
     dec:	3d 87       	std	Y+13, r19	; 0x0d
     dee:	2c 87       	std	Y+12, r18	; 0x0c
     df0:	fa 01       	movw	r30, r20
     df2:	80 81       	ld	r24, Z
     df4:	89 83       	std	Y+1, r24	; 0x01
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	e8 2e       	mov	r14, r24
     dfa:	f1 2c       	mov	r15, r1
     dfc:	51 01       	movw	r10, r2
     dfe:	13 c0       	rjmp	.+38     	; 0xe26 <vfprintf+0x4dc>
     e00:	9a 01       	movw	r18, r20
     e02:	2e 5f       	subi	r18, 0xFE	; 254
     e04:	3f 4f       	sbci	r19, 0xFF	; 255
     e06:	3d 87       	std	Y+13, r19	; 0x0d
     e08:	2c 87       	std	Y+12, r18	; 0x0c
     e0a:	fa 01       	movw	r30, r20
     e0c:	a0 80       	ld	r10, Z
     e0e:	b1 80       	ldd	r11, Z+1	; 0x01
     e10:	16 ff       	sbrs	r17, 6
     e12:	03 c0       	rjmp	.+6      	; 0xe1a <vfprintf+0x4d0>
     e14:	6f 2d       	mov	r22, r15
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0x4d4>
     e1a:	6f ef       	ldi	r22, 0xFF	; 255
     e1c:	7f ef       	ldi	r23, 0xFF	; 255
     e1e:	c5 01       	movw	r24, r10
     e20:	0e 94 b1 0a 	call	0x1562	; 0x1562 <strnlen>
     e24:	7c 01       	movw	r14, r24
     e26:	1f 77       	andi	r17, 0x7F	; 127
     e28:	14 c0       	rjmp	.+40     	; 0xe52 <vfprintf+0x508>
     e2a:	9a 01       	movw	r18, r20
     e2c:	2e 5f       	subi	r18, 0xFE	; 254
     e2e:	3f 4f       	sbci	r19, 0xFF	; 255
     e30:	3d 87       	std	Y+13, r19	; 0x0d
     e32:	2c 87       	std	Y+12, r18	; 0x0c
     e34:	fa 01       	movw	r30, r20
     e36:	a0 80       	ld	r10, Z
     e38:	b1 80       	ldd	r11, Z+1	; 0x01
     e3a:	16 ff       	sbrs	r17, 6
     e3c:	03 c0       	rjmp	.+6      	; 0xe44 <vfprintf+0x4fa>
     e3e:	6f 2d       	mov	r22, r15
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	02 c0       	rjmp	.+4      	; 0xe48 <vfprintf+0x4fe>
     e44:	6f ef       	ldi	r22, 0xFF	; 255
     e46:	7f ef       	ldi	r23, 0xFF	; 255
     e48:	c5 01       	movw	r24, r10
     e4a:	0e 94 a6 0a 	call	0x154c	; 0x154c <strnlen_P>
     e4e:	7c 01       	movw	r14, r24
     e50:	10 68       	ori	r17, 0x80	; 128
     e52:	13 fd       	sbrc	r17, 3
     e54:	1c c0       	rjmp	.+56     	; 0xe8e <vfprintf+0x544>
     e56:	06 c0       	rjmp	.+12     	; 0xe64 <vfprintf+0x51a>
     e58:	80 e2       	ldi	r24, 0x20	; 32
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	b4 01       	movw	r22, r8
     e5e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     e62:	da 94       	dec	r13
     e64:	8d 2d       	mov	r24, r13
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	e8 16       	cp	r14, r24
     e6a:	f9 06       	cpc	r15, r25
     e6c:	a8 f3       	brcs	.-22     	; 0xe58 <vfprintf+0x50e>
     e6e:	0f c0       	rjmp	.+30     	; 0xe8e <vfprintf+0x544>
     e70:	f5 01       	movw	r30, r10
     e72:	17 fd       	sbrc	r17, 7
     e74:	85 91       	lpm	r24, Z+
     e76:	17 ff       	sbrs	r17, 7
     e78:	81 91       	ld	r24, Z+
     e7a:	5f 01       	movw	r10, r30
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	b4 01       	movw	r22, r8
     e80:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     e84:	d1 10       	cpse	r13, r1
     e86:	da 94       	dec	r13
     e88:	08 94       	sec
     e8a:	e1 08       	sbc	r14, r1
     e8c:	f1 08       	sbc	r15, r1
     e8e:	e1 14       	cp	r14, r1
     e90:	f1 04       	cpc	r15, r1
     e92:	71 f7       	brne	.-36     	; 0xe70 <vfprintf+0x526>
     e94:	ed c0       	rjmp	.+474    	; 0x1070 <vfprintf+0x726>
     e96:	84 36       	cpi	r24, 0x64	; 100
     e98:	11 f0       	breq	.+4      	; 0xe9e <vfprintf+0x554>
     e9a:	89 36       	cpi	r24, 0x69	; 105
     e9c:	71 f5       	brne	.+92     	; 0xefa <vfprintf+0x5b0>
     e9e:	9a 01       	movw	r18, r20
     ea0:	17 ff       	sbrs	r17, 7
     ea2:	0a c0       	rjmp	.+20     	; 0xeb8 <vfprintf+0x56e>
     ea4:	2c 5f       	subi	r18, 0xFC	; 252
     ea6:	3f 4f       	sbci	r19, 0xFF	; 255
     ea8:	3d 87       	std	Y+13, r19	; 0x0d
     eaa:	2c 87       	std	Y+12, r18	; 0x0c
     eac:	fa 01       	movw	r30, r20
     eae:	80 81       	ld	r24, Z
     eb0:	91 81       	ldd	r25, Z+1	; 0x01
     eb2:	a2 81       	ldd	r26, Z+2	; 0x02
     eb4:	b3 81       	ldd	r27, Z+3	; 0x03
     eb6:	0b c0       	rjmp	.+22     	; 0xece <vfprintf+0x584>
     eb8:	2e 5f       	subi	r18, 0xFE	; 254
     eba:	3f 4f       	sbci	r19, 0xFF	; 255
     ebc:	3d 87       	std	Y+13, r19	; 0x0d
     ebe:	2c 87       	std	Y+12, r18	; 0x0c
     ec0:	fa 01       	movw	r30, r20
     ec2:	80 81       	ld	r24, Z
     ec4:	91 81       	ldd	r25, Z+1	; 0x01
     ec6:	aa 27       	eor	r26, r26
     ec8:	97 fd       	sbrc	r25, 7
     eca:	a0 95       	com	r26
     ecc:	ba 2f       	mov	r27, r26
     ece:	01 2f       	mov	r16, r17
     ed0:	0f 76       	andi	r16, 0x6F	; 111
     ed2:	b7 ff       	sbrs	r27, 7
     ed4:	08 c0       	rjmp	.+16     	; 0xee6 <vfprintf+0x59c>
     ed6:	b0 95       	com	r27
     ed8:	a0 95       	com	r26
     eda:	90 95       	com	r25
     edc:	81 95       	neg	r24
     ede:	9f 4f       	sbci	r25, 0xFF	; 255
     ee0:	af 4f       	sbci	r26, 0xFF	; 255
     ee2:	bf 4f       	sbci	r27, 0xFF	; 255
     ee4:	00 68       	ori	r16, 0x80	; 128
     ee6:	bc 01       	movw	r22, r24
     ee8:	cd 01       	movw	r24, r26
     eea:	a1 01       	movw	r20, r2
     eec:	2a e0       	ldi	r18, 0x0A	; 10
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__ultoa_invert>
     ef4:	e8 2e       	mov	r14, r24
     ef6:	e2 18       	sub	r14, r2
     ef8:	41 c0       	rjmp	.+130    	; 0xf7c <vfprintf+0x632>
     efa:	85 37       	cpi	r24, 0x75	; 117
     efc:	21 f4       	brne	.+8      	; 0xf06 <vfprintf+0x5bc>
     efe:	1f 7e       	andi	r17, 0xEF	; 239
     f00:	2a e0       	ldi	r18, 0x0A	; 10
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	20 c0       	rjmp	.+64     	; 0xf46 <vfprintf+0x5fc>
     f06:	19 7f       	andi	r17, 0xF9	; 249
     f08:	8f 36       	cpi	r24, 0x6F	; 111
     f0a:	a9 f0       	breq	.+42     	; 0xf36 <vfprintf+0x5ec>
     f0c:	80 37       	cpi	r24, 0x70	; 112
     f0e:	20 f4       	brcc	.+8      	; 0xf18 <vfprintf+0x5ce>
     f10:	88 35       	cpi	r24, 0x58	; 88
     f12:	09 f0       	breq	.+2      	; 0xf16 <vfprintf+0x5cc>
     f14:	b0 c0       	rjmp	.+352    	; 0x1076 <vfprintf+0x72c>
     f16:	0b c0       	rjmp	.+22     	; 0xf2e <vfprintf+0x5e4>
     f18:	80 37       	cpi	r24, 0x70	; 112
     f1a:	21 f0       	breq	.+8      	; 0xf24 <vfprintf+0x5da>
     f1c:	88 37       	cpi	r24, 0x78	; 120
     f1e:	09 f0       	breq	.+2      	; 0xf22 <vfprintf+0x5d8>
     f20:	aa c0       	rjmp	.+340    	; 0x1076 <vfprintf+0x72c>
     f22:	01 c0       	rjmp	.+2      	; 0xf26 <vfprintf+0x5dc>
     f24:	10 61       	ori	r17, 0x10	; 16
     f26:	14 ff       	sbrs	r17, 4
     f28:	09 c0       	rjmp	.+18     	; 0xf3c <vfprintf+0x5f2>
     f2a:	14 60       	ori	r17, 0x04	; 4
     f2c:	07 c0       	rjmp	.+14     	; 0xf3c <vfprintf+0x5f2>
     f2e:	14 ff       	sbrs	r17, 4
     f30:	08 c0       	rjmp	.+16     	; 0xf42 <vfprintf+0x5f8>
     f32:	16 60       	ori	r17, 0x06	; 6
     f34:	06 c0       	rjmp	.+12     	; 0xf42 <vfprintf+0x5f8>
     f36:	28 e0       	ldi	r18, 0x08	; 8
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	05 c0       	rjmp	.+10     	; 0xf46 <vfprintf+0x5fc>
     f3c:	20 e1       	ldi	r18, 0x10	; 16
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <vfprintf+0x5fc>
     f42:	20 e1       	ldi	r18, 0x10	; 16
     f44:	32 e0       	ldi	r19, 0x02	; 2
     f46:	ca 01       	movw	r24, r20
     f48:	17 ff       	sbrs	r17, 7
     f4a:	09 c0       	rjmp	.+18     	; 0xf5e <vfprintf+0x614>
     f4c:	04 96       	adiw	r24, 0x04	; 4
     f4e:	9d 87       	std	Y+13, r25	; 0x0d
     f50:	8c 87       	std	Y+12, r24	; 0x0c
     f52:	fa 01       	movw	r30, r20
     f54:	60 81       	ld	r22, Z
     f56:	71 81       	ldd	r23, Z+1	; 0x01
     f58:	82 81       	ldd	r24, Z+2	; 0x02
     f5a:	93 81       	ldd	r25, Z+3	; 0x03
     f5c:	08 c0       	rjmp	.+16     	; 0xf6e <vfprintf+0x624>
     f5e:	02 96       	adiw	r24, 0x02	; 2
     f60:	9d 87       	std	Y+13, r25	; 0x0d
     f62:	8c 87       	std	Y+12, r24	; 0x0c
     f64:	fa 01       	movw	r30, r20
     f66:	60 81       	ld	r22, Z
     f68:	71 81       	ldd	r23, Z+1	; 0x01
     f6a:	80 e0       	ldi	r24, 0x00	; 0
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	a1 01       	movw	r20, r2
     f70:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__ultoa_invert>
     f74:	e8 2e       	mov	r14, r24
     f76:	e2 18       	sub	r14, r2
     f78:	01 2f       	mov	r16, r17
     f7a:	0f 77       	andi	r16, 0x7F	; 127
     f7c:	06 ff       	sbrs	r16, 6
     f7e:	09 c0       	rjmp	.+18     	; 0xf92 <vfprintf+0x648>
     f80:	0e 7f       	andi	r16, 0xFE	; 254
     f82:	ef 14       	cp	r14, r15
     f84:	30 f4       	brcc	.+12     	; 0xf92 <vfprintf+0x648>
     f86:	04 ff       	sbrs	r16, 4
     f88:	06 c0       	rjmp	.+12     	; 0xf96 <vfprintf+0x64c>
     f8a:	02 fd       	sbrc	r16, 2
     f8c:	04 c0       	rjmp	.+8      	; 0xf96 <vfprintf+0x64c>
     f8e:	0f 7e       	andi	r16, 0xEF	; 239
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <vfprintf+0x64c>
     f92:	1e 2d       	mov	r17, r14
     f94:	01 c0       	rjmp	.+2      	; 0xf98 <vfprintf+0x64e>
     f96:	1f 2d       	mov	r17, r15
     f98:	80 2f       	mov	r24, r16
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	04 ff       	sbrs	r16, 4
     f9e:	0c c0       	rjmp	.+24     	; 0xfb8 <vfprintf+0x66e>
     fa0:	fe 01       	movw	r30, r28
     fa2:	ee 0d       	add	r30, r14
     fa4:	f1 1d       	adc	r31, r1
     fa6:	20 81       	ld	r18, Z
     fa8:	20 33       	cpi	r18, 0x30	; 48
     faa:	11 f4       	brne	.+4      	; 0xfb0 <vfprintf+0x666>
     fac:	09 7e       	andi	r16, 0xE9	; 233
     fae:	09 c0       	rjmp	.+18     	; 0xfc2 <vfprintf+0x678>
     fb0:	02 ff       	sbrs	r16, 2
     fb2:	06 c0       	rjmp	.+12     	; 0xfc0 <vfprintf+0x676>
     fb4:	1e 5f       	subi	r17, 0xFE	; 254
     fb6:	05 c0       	rjmp	.+10     	; 0xfc2 <vfprintf+0x678>
     fb8:	86 78       	andi	r24, 0x86	; 134
     fba:	90 70       	andi	r25, 0x00	; 0
     fbc:	00 97       	sbiw	r24, 0x00	; 0
     fbe:	09 f0       	breq	.+2      	; 0xfc2 <vfprintf+0x678>
     fc0:	1f 5f       	subi	r17, 0xFF	; 255
     fc2:	a0 2e       	mov	r10, r16
     fc4:	bb 24       	eor	r11, r11
     fc6:	03 fd       	sbrc	r16, 3
     fc8:	12 c0       	rjmp	.+36     	; 0xfee <vfprintf+0x6a4>
     fca:	00 ff       	sbrs	r16, 0
     fcc:	0d c0       	rjmp	.+26     	; 0xfe8 <vfprintf+0x69e>
     fce:	fe 2c       	mov	r15, r14
     fd0:	1d 15       	cp	r17, r13
     fd2:	50 f4       	brcc	.+20     	; 0xfe8 <vfprintf+0x69e>
     fd4:	fd 0c       	add	r15, r13
     fd6:	f1 1a       	sub	r15, r17
     fd8:	1d 2d       	mov	r17, r13
     fda:	06 c0       	rjmp	.+12     	; 0xfe8 <vfprintf+0x69e>
     fdc:	80 e2       	ldi	r24, 0x20	; 32
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	b4 01       	movw	r22, r8
     fe2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
     fe6:	1f 5f       	subi	r17, 0xFF	; 255
     fe8:	1d 15       	cp	r17, r13
     fea:	c0 f3       	brcs	.-16     	; 0xfdc <vfprintf+0x692>
     fec:	04 c0       	rjmp	.+8      	; 0xff6 <vfprintf+0x6ac>
     fee:	1d 15       	cp	r17, r13
     ff0:	10 f4       	brcc	.+4      	; 0xff6 <vfprintf+0x6ac>
     ff2:	d1 1a       	sub	r13, r17
     ff4:	01 c0       	rjmp	.+2      	; 0xff8 <vfprintf+0x6ae>
     ff6:	dd 24       	eor	r13, r13
     ff8:	a4 fe       	sbrs	r10, 4
     ffa:	0f c0       	rjmp	.+30     	; 0x101a <vfprintf+0x6d0>
     ffc:	80 e3       	ldi	r24, 0x30	; 48
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	b4 01       	movw	r22, r8
    1002:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    1006:	a2 fe       	sbrs	r10, 2
    1008:	1f c0       	rjmp	.+62     	; 0x1048 <vfprintf+0x6fe>
    100a:	a1 fe       	sbrs	r10, 1
    100c:	03 c0       	rjmp	.+6      	; 0x1014 <vfprintf+0x6ca>
    100e:	88 e5       	ldi	r24, 0x58	; 88
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	10 c0       	rjmp	.+32     	; 0x1034 <vfprintf+0x6ea>
    1014:	88 e7       	ldi	r24, 0x78	; 120
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	0d c0       	rjmp	.+26     	; 0x1034 <vfprintf+0x6ea>
    101a:	c5 01       	movw	r24, r10
    101c:	86 78       	andi	r24, 0x86	; 134
    101e:	90 70       	andi	r25, 0x00	; 0
    1020:	00 97       	sbiw	r24, 0x00	; 0
    1022:	91 f0       	breq	.+36     	; 0x1048 <vfprintf+0x6fe>
    1024:	a1 fc       	sbrc	r10, 1
    1026:	02 c0       	rjmp	.+4      	; 0x102c <vfprintf+0x6e2>
    1028:	80 e2       	ldi	r24, 0x20	; 32
    102a:	01 c0       	rjmp	.+2      	; 0x102e <vfprintf+0x6e4>
    102c:	8b e2       	ldi	r24, 0x2B	; 43
    102e:	07 fd       	sbrc	r16, 7
    1030:	8d e2       	ldi	r24, 0x2D	; 45
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	b4 01       	movw	r22, r8
    1036:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    103a:	06 c0       	rjmp	.+12     	; 0x1048 <vfprintf+0x6fe>
    103c:	80 e3       	ldi	r24, 0x30	; 48
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	b4 01       	movw	r22, r8
    1042:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    1046:	fa 94       	dec	r15
    1048:	ef 14       	cp	r14, r15
    104a:	c0 f3       	brcs	.-16     	; 0x103c <vfprintf+0x6f2>
    104c:	ea 94       	dec	r14
    104e:	f1 01       	movw	r30, r2
    1050:	ee 0d       	add	r30, r14
    1052:	f1 1d       	adc	r31, r1
    1054:	80 81       	ld	r24, Z
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	b4 01       	movw	r22, r8
    105a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    105e:	ee 20       	and	r14, r14
    1060:	a9 f7       	brne	.-22     	; 0x104c <vfprintf+0x702>
    1062:	06 c0       	rjmp	.+12     	; 0x1070 <vfprintf+0x726>
    1064:	80 e2       	ldi	r24, 0x20	; 32
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	b4 01       	movw	r22, r8
    106a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <fputc>
    106e:	da 94       	dec	r13
    1070:	dd 20       	and	r13, r13
    1072:	c1 f7       	brne	.-16     	; 0x1064 <vfprintf+0x71a>
    1074:	8e cc       	rjmp	.-1764   	; 0x992 <vfprintf+0x48>
    1076:	f4 01       	movw	r30, r8
    1078:	86 81       	ldd	r24, Z+6	; 0x06
    107a:	97 81       	ldd	r25, Z+7	; 0x07
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <vfprintf+0x738>
    107e:	8f ef       	ldi	r24, 0xFF	; 255
    1080:	9f ef       	ldi	r25, 0xFF	; 255
    1082:	65 96       	adiw	r28, 0x15	; 21
    1084:	0f b6       	in	r0, 0x3f	; 63
    1086:	f8 94       	cli
    1088:	de bf       	out	0x3e, r29	; 62
    108a:	0f be       	out	0x3f, r0	; 63
    108c:	cd bf       	out	0x3d, r28	; 61
    108e:	df 91       	pop	r29
    1090:	cf 91       	pop	r28
    1092:	1f 91       	pop	r17
    1094:	0f 91       	pop	r16
    1096:	ff 90       	pop	r15
    1098:	ef 90       	pop	r14
    109a:	df 90       	pop	r13
    109c:	cf 90       	pop	r12
    109e:	bf 90       	pop	r11
    10a0:	af 90       	pop	r10
    10a2:	9f 90       	pop	r9
    10a4:	8f 90       	pop	r8
    10a6:	7f 90       	pop	r7
    10a8:	6f 90       	pop	r6
    10aa:	5f 90       	pop	r5
    10ac:	4f 90       	pop	r4
    10ae:	3f 90       	pop	r3
    10b0:	2f 90       	pop	r2
    10b2:	08 95       	ret

000010b4 <__cmpsf2>:
    10b4:	97 d0       	rcall	.+302    	; 0x11e4 <__fp_cmp>
    10b6:	08 f4       	brcc	.+2      	; 0x10ba <__cmpsf2+0x6>
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	08 95       	ret

000010bc <__divsf3>:
    10bc:	0c d0       	rcall	.+24     	; 0x10d6 <__divsf3x>
    10be:	cd c0       	rjmp	.+410    	; 0x125a <__fp_round>
    10c0:	c5 d0       	rcall	.+394    	; 0x124c <__fp_pscB>
    10c2:	40 f0       	brcs	.+16     	; 0x10d4 <__divsf3+0x18>
    10c4:	bc d0       	rcall	.+376    	; 0x123e <__fp_pscA>
    10c6:	30 f0       	brcs	.+12     	; 0x10d4 <__divsf3+0x18>
    10c8:	21 f4       	brne	.+8      	; 0x10d2 <__divsf3+0x16>
    10ca:	5f 3f       	cpi	r21, 0xFF	; 255
    10cc:	19 f0       	breq	.+6      	; 0x10d4 <__divsf3+0x18>
    10ce:	ae c0       	rjmp	.+348    	; 0x122c <__fp_inf>
    10d0:	51 11       	cpse	r21, r1
    10d2:	f7 c0       	rjmp	.+494    	; 0x12c2 <__fp_szero>
    10d4:	b1 c0       	rjmp	.+354    	; 0x1238 <__fp_nan>

000010d6 <__divsf3x>:
    10d6:	d2 d0       	rcall	.+420    	; 0x127c <__fp_split3>
    10d8:	98 f3       	brcs	.-26     	; 0x10c0 <__divsf3+0x4>

000010da <__divsf3_pse>:
    10da:	99 23       	and	r25, r25
    10dc:	c9 f3       	breq	.-14     	; 0x10d0 <__divsf3+0x14>
    10de:	55 23       	and	r21, r21
    10e0:	b1 f3       	breq	.-20     	; 0x10ce <__divsf3+0x12>
    10e2:	95 1b       	sub	r25, r21
    10e4:	55 0b       	sbc	r21, r21
    10e6:	bb 27       	eor	r27, r27
    10e8:	aa 27       	eor	r26, r26
    10ea:	62 17       	cp	r22, r18
    10ec:	73 07       	cpc	r23, r19
    10ee:	84 07       	cpc	r24, r20
    10f0:	38 f0       	brcs	.+14     	; 0x1100 <__stack+0x1>
    10f2:	9f 5f       	subi	r25, 0xFF	; 255
    10f4:	5f 4f       	sbci	r21, 0xFF	; 255
    10f6:	22 0f       	add	r18, r18
    10f8:	33 1f       	adc	r19, r19
    10fa:	44 1f       	adc	r20, r20
    10fc:	aa 1f       	adc	r26, r26
    10fe:	a9 f3       	breq	.-22     	; 0x10ea <__divsf3_pse+0x10>
    1100:	33 d0       	rcall	.+102    	; 0x1168 <__stack+0x69>
    1102:	0e 2e       	mov	r0, r30
    1104:	3a f0       	brmi	.+14     	; 0x1114 <__stack+0x15>
    1106:	e0 e8       	ldi	r30, 0x80	; 128
    1108:	30 d0       	rcall	.+96     	; 0x116a <__stack+0x6b>
    110a:	91 50       	subi	r25, 0x01	; 1
    110c:	50 40       	sbci	r21, 0x00	; 0
    110e:	e6 95       	lsr	r30
    1110:	00 1c       	adc	r0, r0
    1112:	ca f7       	brpl	.-14     	; 0x1106 <__stack+0x7>
    1114:	29 d0       	rcall	.+82     	; 0x1168 <__stack+0x69>
    1116:	fe 2f       	mov	r31, r30
    1118:	27 d0       	rcall	.+78     	; 0x1168 <__stack+0x69>
    111a:	66 0f       	add	r22, r22
    111c:	77 1f       	adc	r23, r23
    111e:	88 1f       	adc	r24, r24
    1120:	bb 1f       	adc	r27, r27
    1122:	26 17       	cp	r18, r22
    1124:	37 07       	cpc	r19, r23
    1126:	48 07       	cpc	r20, r24
    1128:	ab 07       	cpc	r26, r27
    112a:	b0 e8       	ldi	r27, 0x80	; 128
    112c:	09 f0       	breq	.+2      	; 0x1130 <__stack+0x31>
    112e:	bb 0b       	sbc	r27, r27
    1130:	80 2d       	mov	r24, r0
    1132:	bf 01       	movw	r22, r30
    1134:	ff 27       	eor	r31, r31
    1136:	93 58       	subi	r25, 0x83	; 131
    1138:	5f 4f       	sbci	r21, 0xFF	; 255
    113a:	2a f0       	brmi	.+10     	; 0x1146 <__stack+0x47>
    113c:	9e 3f       	cpi	r25, 0xFE	; 254
    113e:	51 05       	cpc	r21, r1
    1140:	68 f0       	brcs	.+26     	; 0x115c <__stack+0x5d>
    1142:	74 c0       	rjmp	.+232    	; 0x122c <__fp_inf>
    1144:	be c0       	rjmp	.+380    	; 0x12c2 <__fp_szero>
    1146:	5f 3f       	cpi	r21, 0xFF	; 255
    1148:	ec f3       	brlt	.-6      	; 0x1144 <__stack+0x45>
    114a:	98 3e       	cpi	r25, 0xE8	; 232
    114c:	dc f3       	brlt	.-10     	; 0x1144 <__stack+0x45>
    114e:	86 95       	lsr	r24
    1150:	77 95       	ror	r23
    1152:	67 95       	ror	r22
    1154:	b7 95       	ror	r27
    1156:	f7 95       	ror	r31
    1158:	9f 5f       	subi	r25, 0xFF	; 255
    115a:	c9 f7       	brne	.-14     	; 0x114e <__stack+0x4f>
    115c:	88 0f       	add	r24, r24
    115e:	91 1d       	adc	r25, r1
    1160:	96 95       	lsr	r25
    1162:	87 95       	ror	r24
    1164:	97 f9       	bld	r25, 7
    1166:	08 95       	ret
    1168:	e1 e0       	ldi	r30, 0x01	; 1
    116a:	66 0f       	add	r22, r22
    116c:	77 1f       	adc	r23, r23
    116e:	88 1f       	adc	r24, r24
    1170:	bb 1f       	adc	r27, r27
    1172:	62 17       	cp	r22, r18
    1174:	73 07       	cpc	r23, r19
    1176:	84 07       	cpc	r24, r20
    1178:	ba 07       	cpc	r27, r26
    117a:	20 f0       	brcs	.+8      	; 0x1184 <__stack+0x85>
    117c:	62 1b       	sub	r22, r18
    117e:	73 0b       	sbc	r23, r19
    1180:	84 0b       	sbc	r24, r20
    1182:	ba 0b       	sbc	r27, r26
    1184:	ee 1f       	adc	r30, r30
    1186:	88 f7       	brcc	.-30     	; 0x116a <__stack+0x6b>
    1188:	e0 95       	com	r30
    118a:	08 95       	ret

0000118c <__fixunssfsi>:
    118c:	7f d0       	rcall	.+254    	; 0x128c <__fp_splitA>
    118e:	88 f0       	brcs	.+34     	; 0x11b2 <__fixunssfsi+0x26>
    1190:	9f 57       	subi	r25, 0x7F	; 127
    1192:	90 f0       	brcs	.+36     	; 0x11b8 <__fixunssfsi+0x2c>
    1194:	b9 2f       	mov	r27, r25
    1196:	99 27       	eor	r25, r25
    1198:	b7 51       	subi	r27, 0x17	; 23
    119a:	a0 f0       	brcs	.+40     	; 0x11c4 <__fixunssfsi+0x38>
    119c:	d1 f0       	breq	.+52     	; 0x11d2 <__fixunssfsi+0x46>
    119e:	66 0f       	add	r22, r22
    11a0:	77 1f       	adc	r23, r23
    11a2:	88 1f       	adc	r24, r24
    11a4:	99 1f       	adc	r25, r25
    11a6:	1a f0       	brmi	.+6      	; 0x11ae <__fixunssfsi+0x22>
    11a8:	ba 95       	dec	r27
    11aa:	c9 f7       	brne	.-14     	; 0x119e <__fixunssfsi+0x12>
    11ac:	12 c0       	rjmp	.+36     	; 0x11d2 <__fixunssfsi+0x46>
    11ae:	b1 30       	cpi	r27, 0x01	; 1
    11b0:	81 f0       	breq	.+32     	; 0x11d2 <__fixunssfsi+0x46>
    11b2:	86 d0       	rcall	.+268    	; 0x12c0 <__fp_zero>
    11b4:	b1 e0       	ldi	r27, 0x01	; 1
    11b6:	08 95       	ret
    11b8:	83 c0       	rjmp	.+262    	; 0x12c0 <__fp_zero>
    11ba:	67 2f       	mov	r22, r23
    11bc:	78 2f       	mov	r23, r24
    11be:	88 27       	eor	r24, r24
    11c0:	b8 5f       	subi	r27, 0xF8	; 248
    11c2:	39 f0       	breq	.+14     	; 0x11d2 <__fixunssfsi+0x46>
    11c4:	b9 3f       	cpi	r27, 0xF9	; 249
    11c6:	cc f3       	brlt	.-14     	; 0x11ba <__fixunssfsi+0x2e>
    11c8:	86 95       	lsr	r24
    11ca:	77 95       	ror	r23
    11cc:	67 95       	ror	r22
    11ce:	b3 95       	inc	r27
    11d0:	d9 f7       	brne	.-10     	; 0x11c8 <__fixunssfsi+0x3c>
    11d2:	3e f4       	brtc	.+14     	; 0x11e2 <__fixunssfsi+0x56>
    11d4:	90 95       	com	r25
    11d6:	80 95       	com	r24
    11d8:	70 95       	com	r23
    11da:	61 95       	neg	r22
    11dc:	7f 4f       	sbci	r23, 0xFF	; 255
    11de:	8f 4f       	sbci	r24, 0xFF	; 255
    11e0:	9f 4f       	sbci	r25, 0xFF	; 255
    11e2:	08 95       	ret

000011e4 <__fp_cmp>:
    11e4:	99 0f       	add	r25, r25
    11e6:	00 08       	sbc	r0, r0
    11e8:	55 0f       	add	r21, r21
    11ea:	aa 0b       	sbc	r26, r26
    11ec:	e0 e8       	ldi	r30, 0x80	; 128
    11ee:	fe ef       	ldi	r31, 0xFE	; 254
    11f0:	16 16       	cp	r1, r22
    11f2:	17 06       	cpc	r1, r23
    11f4:	e8 07       	cpc	r30, r24
    11f6:	f9 07       	cpc	r31, r25
    11f8:	c0 f0       	brcs	.+48     	; 0x122a <__fp_cmp+0x46>
    11fa:	12 16       	cp	r1, r18
    11fc:	13 06       	cpc	r1, r19
    11fe:	e4 07       	cpc	r30, r20
    1200:	f5 07       	cpc	r31, r21
    1202:	98 f0       	brcs	.+38     	; 0x122a <__fp_cmp+0x46>
    1204:	62 1b       	sub	r22, r18
    1206:	73 0b       	sbc	r23, r19
    1208:	84 0b       	sbc	r24, r20
    120a:	95 0b       	sbc	r25, r21
    120c:	39 f4       	brne	.+14     	; 0x121c <__fp_cmp+0x38>
    120e:	0a 26       	eor	r0, r26
    1210:	61 f0       	breq	.+24     	; 0x122a <__fp_cmp+0x46>
    1212:	23 2b       	or	r18, r19
    1214:	24 2b       	or	r18, r20
    1216:	25 2b       	or	r18, r21
    1218:	21 f4       	brne	.+8      	; 0x1222 <__fp_cmp+0x3e>
    121a:	08 95       	ret
    121c:	0a 26       	eor	r0, r26
    121e:	09 f4       	brne	.+2      	; 0x1222 <__fp_cmp+0x3e>
    1220:	a1 40       	sbci	r26, 0x01	; 1
    1222:	a6 95       	lsr	r26
    1224:	8f ef       	ldi	r24, 0xFF	; 255
    1226:	81 1d       	adc	r24, r1
    1228:	81 1d       	adc	r24, r1
    122a:	08 95       	ret

0000122c <__fp_inf>:
    122c:	97 f9       	bld	r25, 7
    122e:	9f 67       	ori	r25, 0x7F	; 127
    1230:	80 e8       	ldi	r24, 0x80	; 128
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	60 e0       	ldi	r22, 0x00	; 0
    1236:	08 95       	ret

00001238 <__fp_nan>:
    1238:	9f ef       	ldi	r25, 0xFF	; 255
    123a:	80 ec       	ldi	r24, 0xC0	; 192
    123c:	08 95       	ret

0000123e <__fp_pscA>:
    123e:	00 24       	eor	r0, r0
    1240:	0a 94       	dec	r0
    1242:	16 16       	cp	r1, r22
    1244:	17 06       	cpc	r1, r23
    1246:	18 06       	cpc	r1, r24
    1248:	09 06       	cpc	r0, r25
    124a:	08 95       	ret

0000124c <__fp_pscB>:
    124c:	00 24       	eor	r0, r0
    124e:	0a 94       	dec	r0
    1250:	12 16       	cp	r1, r18
    1252:	13 06       	cpc	r1, r19
    1254:	14 06       	cpc	r1, r20
    1256:	05 06       	cpc	r0, r21
    1258:	08 95       	ret

0000125a <__fp_round>:
    125a:	09 2e       	mov	r0, r25
    125c:	03 94       	inc	r0
    125e:	00 0c       	add	r0, r0
    1260:	11 f4       	brne	.+4      	; 0x1266 <__fp_round+0xc>
    1262:	88 23       	and	r24, r24
    1264:	52 f0       	brmi	.+20     	; 0x127a <__fp_round+0x20>
    1266:	bb 0f       	add	r27, r27
    1268:	40 f4       	brcc	.+16     	; 0x127a <__fp_round+0x20>
    126a:	bf 2b       	or	r27, r31
    126c:	11 f4       	brne	.+4      	; 0x1272 <__fp_round+0x18>
    126e:	60 ff       	sbrs	r22, 0
    1270:	04 c0       	rjmp	.+8      	; 0x127a <__fp_round+0x20>
    1272:	6f 5f       	subi	r22, 0xFF	; 255
    1274:	7f 4f       	sbci	r23, 0xFF	; 255
    1276:	8f 4f       	sbci	r24, 0xFF	; 255
    1278:	9f 4f       	sbci	r25, 0xFF	; 255
    127a:	08 95       	ret

0000127c <__fp_split3>:
    127c:	57 fd       	sbrc	r21, 7
    127e:	90 58       	subi	r25, 0x80	; 128
    1280:	44 0f       	add	r20, r20
    1282:	55 1f       	adc	r21, r21
    1284:	59 f0       	breq	.+22     	; 0x129c <__fp_splitA+0x10>
    1286:	5f 3f       	cpi	r21, 0xFF	; 255
    1288:	71 f0       	breq	.+28     	; 0x12a6 <__fp_splitA+0x1a>
    128a:	47 95       	ror	r20

0000128c <__fp_splitA>:
    128c:	88 0f       	add	r24, r24
    128e:	97 fb       	bst	r25, 7
    1290:	99 1f       	adc	r25, r25
    1292:	61 f0       	breq	.+24     	; 0x12ac <__fp_splitA+0x20>
    1294:	9f 3f       	cpi	r25, 0xFF	; 255
    1296:	79 f0       	breq	.+30     	; 0x12b6 <__fp_splitA+0x2a>
    1298:	87 95       	ror	r24
    129a:	08 95       	ret
    129c:	12 16       	cp	r1, r18
    129e:	13 06       	cpc	r1, r19
    12a0:	14 06       	cpc	r1, r20
    12a2:	55 1f       	adc	r21, r21
    12a4:	f2 cf       	rjmp	.-28     	; 0x128a <__fp_split3+0xe>
    12a6:	46 95       	lsr	r20
    12a8:	f1 df       	rcall	.-30     	; 0x128c <__fp_splitA>
    12aa:	08 c0       	rjmp	.+16     	; 0x12bc <__fp_splitA+0x30>
    12ac:	16 16       	cp	r1, r22
    12ae:	17 06       	cpc	r1, r23
    12b0:	18 06       	cpc	r1, r24
    12b2:	99 1f       	adc	r25, r25
    12b4:	f1 cf       	rjmp	.-30     	; 0x1298 <__fp_splitA+0xc>
    12b6:	86 95       	lsr	r24
    12b8:	71 05       	cpc	r23, r1
    12ba:	61 05       	cpc	r22, r1
    12bc:	08 94       	sec
    12be:	08 95       	ret

000012c0 <__fp_zero>:
    12c0:	e8 94       	clt

000012c2 <__fp_szero>:
    12c2:	bb 27       	eor	r27, r27
    12c4:	66 27       	eor	r22, r22
    12c6:	77 27       	eor	r23, r23
    12c8:	cb 01       	movw	r24, r22
    12ca:	97 f9       	bld	r25, 7
    12cc:	08 95       	ret

000012ce <__gesf2>:
    12ce:	8a df       	rcall	.-236    	; 0x11e4 <__fp_cmp>
    12d0:	08 f4       	brcc	.+2      	; 0x12d4 <__gesf2+0x6>
    12d2:	8f ef       	ldi	r24, 0xFF	; 255
    12d4:	08 95       	ret

000012d6 <__mulsf3>:
    12d6:	0b d0       	rcall	.+22     	; 0x12ee <__mulsf3x>
    12d8:	c0 cf       	rjmp	.-128    	; 0x125a <__fp_round>
    12da:	b1 df       	rcall	.-158    	; 0x123e <__fp_pscA>
    12dc:	28 f0       	brcs	.+10     	; 0x12e8 <__mulsf3+0x12>
    12de:	b6 df       	rcall	.-148    	; 0x124c <__fp_pscB>
    12e0:	18 f0       	brcs	.+6      	; 0x12e8 <__mulsf3+0x12>
    12e2:	95 23       	and	r25, r21
    12e4:	09 f0       	breq	.+2      	; 0x12e8 <__mulsf3+0x12>
    12e6:	a2 cf       	rjmp	.-188    	; 0x122c <__fp_inf>
    12e8:	a7 cf       	rjmp	.-178    	; 0x1238 <__fp_nan>
    12ea:	11 24       	eor	r1, r1
    12ec:	ea cf       	rjmp	.-44     	; 0x12c2 <__fp_szero>

000012ee <__mulsf3x>:
    12ee:	c6 df       	rcall	.-116    	; 0x127c <__fp_split3>
    12f0:	a0 f3       	brcs	.-24     	; 0x12da <__mulsf3+0x4>

000012f2 <__mulsf3_pse>:
    12f2:	95 9f       	mul	r25, r21
    12f4:	d1 f3       	breq	.-12     	; 0x12ea <__mulsf3+0x14>
    12f6:	95 0f       	add	r25, r21
    12f8:	50 e0       	ldi	r21, 0x00	; 0
    12fa:	55 1f       	adc	r21, r21
    12fc:	62 9f       	mul	r22, r18
    12fe:	f0 01       	movw	r30, r0
    1300:	72 9f       	mul	r23, r18
    1302:	bb 27       	eor	r27, r27
    1304:	f0 0d       	add	r31, r0
    1306:	b1 1d       	adc	r27, r1
    1308:	63 9f       	mul	r22, r19
    130a:	aa 27       	eor	r26, r26
    130c:	f0 0d       	add	r31, r0
    130e:	b1 1d       	adc	r27, r1
    1310:	aa 1f       	adc	r26, r26
    1312:	64 9f       	mul	r22, r20
    1314:	66 27       	eor	r22, r22
    1316:	b0 0d       	add	r27, r0
    1318:	a1 1d       	adc	r26, r1
    131a:	66 1f       	adc	r22, r22
    131c:	82 9f       	mul	r24, r18
    131e:	22 27       	eor	r18, r18
    1320:	b0 0d       	add	r27, r0
    1322:	a1 1d       	adc	r26, r1
    1324:	62 1f       	adc	r22, r18
    1326:	73 9f       	mul	r23, r19
    1328:	b0 0d       	add	r27, r0
    132a:	a1 1d       	adc	r26, r1
    132c:	62 1f       	adc	r22, r18
    132e:	83 9f       	mul	r24, r19
    1330:	a0 0d       	add	r26, r0
    1332:	61 1d       	adc	r22, r1
    1334:	22 1f       	adc	r18, r18
    1336:	74 9f       	mul	r23, r20
    1338:	33 27       	eor	r19, r19
    133a:	a0 0d       	add	r26, r0
    133c:	61 1d       	adc	r22, r1
    133e:	23 1f       	adc	r18, r19
    1340:	84 9f       	mul	r24, r20
    1342:	60 0d       	add	r22, r0
    1344:	21 1d       	adc	r18, r1
    1346:	82 2f       	mov	r24, r18
    1348:	76 2f       	mov	r23, r22
    134a:	6a 2f       	mov	r22, r26
    134c:	11 24       	eor	r1, r1
    134e:	9f 57       	subi	r25, 0x7F	; 127
    1350:	50 40       	sbci	r21, 0x00	; 0
    1352:	8a f0       	brmi	.+34     	; 0x1376 <__mulsf3_pse+0x84>
    1354:	e1 f0       	breq	.+56     	; 0x138e <__mulsf3_pse+0x9c>
    1356:	88 23       	and	r24, r24
    1358:	4a f0       	brmi	.+18     	; 0x136c <__mulsf3_pse+0x7a>
    135a:	ee 0f       	add	r30, r30
    135c:	ff 1f       	adc	r31, r31
    135e:	bb 1f       	adc	r27, r27
    1360:	66 1f       	adc	r22, r22
    1362:	77 1f       	adc	r23, r23
    1364:	88 1f       	adc	r24, r24
    1366:	91 50       	subi	r25, 0x01	; 1
    1368:	50 40       	sbci	r21, 0x00	; 0
    136a:	a9 f7       	brne	.-22     	; 0x1356 <__mulsf3_pse+0x64>
    136c:	9e 3f       	cpi	r25, 0xFE	; 254
    136e:	51 05       	cpc	r21, r1
    1370:	70 f0       	brcs	.+28     	; 0x138e <__mulsf3_pse+0x9c>
    1372:	5c cf       	rjmp	.-328    	; 0x122c <__fp_inf>
    1374:	a6 cf       	rjmp	.-180    	; 0x12c2 <__fp_szero>
    1376:	5f 3f       	cpi	r21, 0xFF	; 255
    1378:	ec f3       	brlt	.-6      	; 0x1374 <__mulsf3_pse+0x82>
    137a:	98 3e       	cpi	r25, 0xE8	; 232
    137c:	dc f3       	brlt	.-10     	; 0x1374 <__mulsf3_pse+0x82>
    137e:	86 95       	lsr	r24
    1380:	77 95       	ror	r23
    1382:	67 95       	ror	r22
    1384:	b7 95       	ror	r27
    1386:	f7 95       	ror	r31
    1388:	e7 95       	ror	r30
    138a:	9f 5f       	subi	r25, 0xFF	; 255
    138c:	c1 f7       	brne	.-16     	; 0x137e <__mulsf3_pse+0x8c>
    138e:	fe 2b       	or	r31, r30
    1390:	88 0f       	add	r24, r24
    1392:	91 1d       	adc	r25, r1
    1394:	96 95       	lsr	r25
    1396:	87 95       	ror	r24
    1398:	97 f9       	bld	r25, 7
    139a:	08 95       	ret

0000139c <__ftoa_engine>:
    139c:	28 30       	cpi	r18, 0x08	; 8
    139e:	08 f0       	brcs	.+2      	; 0x13a2 <__ftoa_engine+0x6>
    13a0:	27 e0       	ldi	r18, 0x07	; 7
    13a2:	33 27       	eor	r19, r19
    13a4:	da 01       	movw	r26, r20
    13a6:	99 0f       	add	r25, r25
    13a8:	31 1d       	adc	r19, r1
    13aa:	87 fd       	sbrc	r24, 7
    13ac:	91 60       	ori	r25, 0x01	; 1
    13ae:	00 96       	adiw	r24, 0x00	; 0
    13b0:	61 05       	cpc	r22, r1
    13b2:	71 05       	cpc	r23, r1
    13b4:	39 f4       	brne	.+14     	; 0x13c4 <__ftoa_engine+0x28>
    13b6:	32 60       	ori	r19, 0x02	; 2
    13b8:	2e 5f       	subi	r18, 0xFE	; 254
    13ba:	3d 93       	st	X+, r19
    13bc:	30 e3       	ldi	r19, 0x30	; 48
    13be:	2a 95       	dec	r18
    13c0:	e1 f7       	brne	.-8      	; 0x13ba <__ftoa_engine+0x1e>
    13c2:	08 95       	ret
    13c4:	9f 3f       	cpi	r25, 0xFF	; 255
    13c6:	30 f0       	brcs	.+12     	; 0x13d4 <__ftoa_engine+0x38>
    13c8:	80 38       	cpi	r24, 0x80	; 128
    13ca:	71 05       	cpc	r23, r1
    13cc:	61 05       	cpc	r22, r1
    13ce:	09 f0       	breq	.+2      	; 0x13d2 <__ftoa_engine+0x36>
    13d0:	3c 5f       	subi	r19, 0xFC	; 252
    13d2:	3c 5f       	subi	r19, 0xFC	; 252
    13d4:	3d 93       	st	X+, r19
    13d6:	91 30       	cpi	r25, 0x01	; 1
    13d8:	08 f0       	brcs	.+2      	; 0x13dc <__ftoa_engine+0x40>
    13da:	80 68       	ori	r24, 0x80	; 128
    13dc:	91 1d       	adc	r25, r1
    13de:	df 93       	push	r29
    13e0:	cf 93       	push	r28
    13e2:	1f 93       	push	r17
    13e4:	0f 93       	push	r16
    13e6:	ff 92       	push	r15
    13e8:	ef 92       	push	r14
    13ea:	19 2f       	mov	r17, r25
    13ec:	98 7f       	andi	r25, 0xF8	; 248
    13ee:	96 95       	lsr	r25
    13f0:	e9 2f       	mov	r30, r25
    13f2:	96 95       	lsr	r25
    13f4:	96 95       	lsr	r25
    13f6:	e9 0f       	add	r30, r25
    13f8:	ff 27       	eor	r31, r31
    13fa:	e2 51       	subi	r30, 0x12	; 18
    13fc:	ff 4f       	sbci	r31, 0xFF	; 255
    13fe:	99 27       	eor	r25, r25
    1400:	33 27       	eor	r19, r19
    1402:	ee 24       	eor	r14, r14
    1404:	ff 24       	eor	r15, r15
    1406:	a7 01       	movw	r20, r14
    1408:	e7 01       	movw	r28, r14
    140a:	05 90       	lpm	r0, Z+
    140c:	08 94       	sec
    140e:	07 94       	ror	r0
    1410:	28 f4       	brcc	.+10     	; 0x141c <__ftoa_engine+0x80>
    1412:	36 0f       	add	r19, r22
    1414:	e7 1e       	adc	r14, r23
    1416:	f8 1e       	adc	r15, r24
    1418:	49 1f       	adc	r20, r25
    141a:	51 1d       	adc	r21, r1
    141c:	66 0f       	add	r22, r22
    141e:	77 1f       	adc	r23, r23
    1420:	88 1f       	adc	r24, r24
    1422:	99 1f       	adc	r25, r25
    1424:	06 94       	lsr	r0
    1426:	a1 f7       	brne	.-24     	; 0x1410 <__ftoa_engine+0x74>
    1428:	05 90       	lpm	r0, Z+
    142a:	07 94       	ror	r0
    142c:	28 f4       	brcc	.+10     	; 0x1438 <__ftoa_engine+0x9c>
    142e:	e7 0e       	add	r14, r23
    1430:	f8 1e       	adc	r15, r24
    1432:	49 1f       	adc	r20, r25
    1434:	56 1f       	adc	r21, r22
    1436:	c1 1d       	adc	r28, r1
    1438:	77 0f       	add	r23, r23
    143a:	88 1f       	adc	r24, r24
    143c:	99 1f       	adc	r25, r25
    143e:	66 1f       	adc	r22, r22
    1440:	06 94       	lsr	r0
    1442:	a1 f7       	brne	.-24     	; 0x142c <__ftoa_engine+0x90>
    1444:	05 90       	lpm	r0, Z+
    1446:	07 94       	ror	r0
    1448:	28 f4       	brcc	.+10     	; 0x1454 <__ftoa_engine+0xb8>
    144a:	f8 0e       	add	r15, r24
    144c:	49 1f       	adc	r20, r25
    144e:	56 1f       	adc	r21, r22
    1450:	c7 1f       	adc	r28, r23
    1452:	d1 1d       	adc	r29, r1
    1454:	88 0f       	add	r24, r24
    1456:	99 1f       	adc	r25, r25
    1458:	66 1f       	adc	r22, r22
    145a:	77 1f       	adc	r23, r23
    145c:	06 94       	lsr	r0
    145e:	a1 f7       	brne	.-24     	; 0x1448 <__ftoa_engine+0xac>
    1460:	05 90       	lpm	r0, Z+
    1462:	07 94       	ror	r0
    1464:	20 f4       	brcc	.+8      	; 0x146e <__ftoa_engine+0xd2>
    1466:	49 0f       	add	r20, r25
    1468:	56 1f       	adc	r21, r22
    146a:	c7 1f       	adc	r28, r23
    146c:	d8 1f       	adc	r29, r24
    146e:	99 0f       	add	r25, r25
    1470:	66 1f       	adc	r22, r22
    1472:	77 1f       	adc	r23, r23
    1474:	88 1f       	adc	r24, r24
    1476:	06 94       	lsr	r0
    1478:	a9 f7       	brne	.-22     	; 0x1464 <__ftoa_engine+0xc8>
    147a:	84 91       	lpm	r24, Z
    147c:	10 95       	com	r17
    147e:	17 70       	andi	r17, 0x07	; 7
    1480:	41 f0       	breq	.+16     	; 0x1492 <__ftoa_engine+0xf6>
    1482:	d6 95       	lsr	r29
    1484:	c7 95       	ror	r28
    1486:	57 95       	ror	r21
    1488:	47 95       	ror	r20
    148a:	f7 94       	ror	r15
    148c:	e7 94       	ror	r14
    148e:	1a 95       	dec	r17
    1490:	c1 f7       	brne	.-16     	; 0x1482 <__ftoa_engine+0xe6>
    1492:	e4 e9       	ldi	r30, 0x94	; 148
    1494:	f0 e0       	ldi	r31, 0x00	; 0
    1496:	68 94       	set
    1498:	15 90       	lpm	r1, Z+
    149a:	15 91       	lpm	r17, Z+
    149c:	35 91       	lpm	r19, Z+
    149e:	65 91       	lpm	r22, Z+
    14a0:	95 91       	lpm	r25, Z+
    14a2:	05 90       	lpm	r0, Z+
    14a4:	7f e2       	ldi	r23, 0x2F	; 47
    14a6:	73 95       	inc	r23
    14a8:	e1 18       	sub	r14, r1
    14aa:	f1 0a       	sbc	r15, r17
    14ac:	43 0b       	sbc	r20, r19
    14ae:	56 0b       	sbc	r21, r22
    14b0:	c9 0b       	sbc	r28, r25
    14b2:	d0 09       	sbc	r29, r0
    14b4:	c0 f7       	brcc	.-16     	; 0x14a6 <__ftoa_engine+0x10a>
    14b6:	e1 0c       	add	r14, r1
    14b8:	f1 1e       	adc	r15, r17
    14ba:	43 1f       	adc	r20, r19
    14bc:	56 1f       	adc	r21, r22
    14be:	c9 1f       	adc	r28, r25
    14c0:	d0 1d       	adc	r29, r0
    14c2:	7e f4       	brtc	.+30     	; 0x14e2 <__ftoa_engine+0x146>
    14c4:	70 33       	cpi	r23, 0x30	; 48
    14c6:	11 f4       	brne	.+4      	; 0x14cc <__ftoa_engine+0x130>
    14c8:	8a 95       	dec	r24
    14ca:	e6 cf       	rjmp	.-52     	; 0x1498 <__ftoa_engine+0xfc>
    14cc:	e8 94       	clt
    14ce:	01 50       	subi	r16, 0x01	; 1
    14d0:	30 f0       	brcs	.+12     	; 0x14de <__ftoa_engine+0x142>
    14d2:	08 0f       	add	r16, r24
    14d4:	0a f4       	brpl	.+2      	; 0x14d8 <__ftoa_engine+0x13c>
    14d6:	00 27       	eor	r16, r16
    14d8:	02 17       	cp	r16, r18
    14da:	08 f4       	brcc	.+2      	; 0x14de <__ftoa_engine+0x142>
    14dc:	20 2f       	mov	r18, r16
    14de:	23 95       	inc	r18
    14e0:	02 2f       	mov	r16, r18
    14e2:	7a 33       	cpi	r23, 0x3A	; 58
    14e4:	28 f0       	brcs	.+10     	; 0x14f0 <__ftoa_engine+0x154>
    14e6:	79 e3       	ldi	r23, 0x39	; 57
    14e8:	7d 93       	st	X+, r23
    14ea:	2a 95       	dec	r18
    14ec:	e9 f7       	brne	.-6      	; 0x14e8 <__ftoa_engine+0x14c>
    14ee:	10 c0       	rjmp	.+32     	; 0x1510 <__ftoa_engine+0x174>
    14f0:	7d 93       	st	X+, r23
    14f2:	2a 95       	dec	r18
    14f4:	89 f6       	brne	.-94     	; 0x1498 <__ftoa_engine+0xfc>
    14f6:	06 94       	lsr	r0
    14f8:	97 95       	ror	r25
    14fa:	67 95       	ror	r22
    14fc:	37 95       	ror	r19
    14fe:	17 95       	ror	r17
    1500:	17 94       	ror	r1
    1502:	e1 18       	sub	r14, r1
    1504:	f1 0a       	sbc	r15, r17
    1506:	43 0b       	sbc	r20, r19
    1508:	56 0b       	sbc	r21, r22
    150a:	c9 0b       	sbc	r28, r25
    150c:	d0 09       	sbc	r29, r0
    150e:	98 f0       	brcs	.+38     	; 0x1536 <__ftoa_engine+0x19a>
    1510:	23 95       	inc	r18
    1512:	7e 91       	ld	r23, -X
    1514:	73 95       	inc	r23
    1516:	7a 33       	cpi	r23, 0x3A	; 58
    1518:	08 f0       	brcs	.+2      	; 0x151c <__ftoa_engine+0x180>
    151a:	70 e3       	ldi	r23, 0x30	; 48
    151c:	7c 93       	st	X, r23
    151e:	20 13       	cpse	r18, r16
    1520:	b8 f7       	brcc	.-18     	; 0x1510 <__ftoa_engine+0x174>
    1522:	7e 91       	ld	r23, -X
    1524:	70 61       	ori	r23, 0x10	; 16
    1526:	7d 93       	st	X+, r23
    1528:	30 f0       	brcs	.+12     	; 0x1536 <__ftoa_engine+0x19a>
    152a:	83 95       	inc	r24
    152c:	71 e3       	ldi	r23, 0x31	; 49
    152e:	7d 93       	st	X+, r23
    1530:	70 e3       	ldi	r23, 0x30	; 48
    1532:	2a 95       	dec	r18
    1534:	e1 f7       	brne	.-8      	; 0x152e <__ftoa_engine+0x192>
    1536:	11 24       	eor	r1, r1
    1538:	ef 90       	pop	r14
    153a:	ff 90       	pop	r15
    153c:	0f 91       	pop	r16
    153e:	1f 91       	pop	r17
    1540:	cf 91       	pop	r28
    1542:	df 91       	pop	r29
    1544:	99 27       	eor	r25, r25
    1546:	87 fd       	sbrc	r24, 7
    1548:	90 95       	com	r25
    154a:	08 95       	ret

0000154c <strnlen_P>:
    154c:	fc 01       	movw	r30, r24
    154e:	05 90       	lpm	r0, Z+
    1550:	61 50       	subi	r22, 0x01	; 1
    1552:	70 40       	sbci	r23, 0x00	; 0
    1554:	01 10       	cpse	r0, r1
    1556:	d8 f7       	brcc	.-10     	; 0x154e <strnlen_P+0x2>
    1558:	80 95       	com	r24
    155a:	90 95       	com	r25
    155c:	8e 0f       	add	r24, r30
    155e:	9f 1f       	adc	r25, r31
    1560:	08 95       	ret

00001562 <strnlen>:
    1562:	fc 01       	movw	r30, r24
    1564:	61 50       	subi	r22, 0x01	; 1
    1566:	70 40       	sbci	r23, 0x00	; 0
    1568:	01 90       	ld	r0, Z+
    156a:	01 10       	cpse	r0, r1
    156c:	d8 f7       	brcc	.-10     	; 0x1564 <strnlen+0x2>
    156e:	80 95       	com	r24
    1570:	90 95       	com	r25
    1572:	8e 0f       	add	r24, r30
    1574:	9f 1f       	adc	r25, r31
    1576:	08 95       	ret

00001578 <fputc>:
    1578:	0f 93       	push	r16
    157a:	1f 93       	push	r17
    157c:	cf 93       	push	r28
    157e:	df 93       	push	r29
    1580:	8c 01       	movw	r16, r24
    1582:	eb 01       	movw	r28, r22
    1584:	8b 81       	ldd	r24, Y+3	; 0x03
    1586:	81 ff       	sbrs	r24, 1
    1588:	1b c0       	rjmp	.+54     	; 0x15c0 <fputc+0x48>
    158a:	82 ff       	sbrs	r24, 2
    158c:	0d c0       	rjmp	.+26     	; 0x15a8 <fputc+0x30>
    158e:	2e 81       	ldd	r18, Y+6	; 0x06
    1590:	3f 81       	ldd	r19, Y+7	; 0x07
    1592:	8c 81       	ldd	r24, Y+4	; 0x04
    1594:	9d 81       	ldd	r25, Y+5	; 0x05
    1596:	28 17       	cp	r18, r24
    1598:	39 07       	cpc	r19, r25
    159a:	64 f4       	brge	.+24     	; 0x15b4 <fputc+0x3c>
    159c:	e8 81       	ld	r30, Y
    159e:	f9 81       	ldd	r31, Y+1	; 0x01
    15a0:	01 93       	st	Z+, r16
    15a2:	f9 83       	std	Y+1, r31	; 0x01
    15a4:	e8 83       	st	Y, r30
    15a6:	06 c0       	rjmp	.+12     	; 0x15b4 <fputc+0x3c>
    15a8:	e8 85       	ldd	r30, Y+8	; 0x08
    15aa:	f9 85       	ldd	r31, Y+9	; 0x09
    15ac:	80 2f       	mov	r24, r16
    15ae:	09 95       	icall
    15b0:	00 97       	sbiw	r24, 0x00	; 0
    15b2:	31 f4       	brne	.+12     	; 0x15c0 <fputc+0x48>
    15b4:	8e 81       	ldd	r24, Y+6	; 0x06
    15b6:	9f 81       	ldd	r25, Y+7	; 0x07
    15b8:	01 96       	adiw	r24, 0x01	; 1
    15ba:	9f 83       	std	Y+7, r25	; 0x07
    15bc:	8e 83       	std	Y+6, r24	; 0x06
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <fputc+0x4c>
    15c0:	0f ef       	ldi	r16, 0xFF	; 255
    15c2:	1f ef       	ldi	r17, 0xFF	; 255
    15c4:	c8 01       	movw	r24, r16
    15c6:	df 91       	pop	r29
    15c8:	cf 91       	pop	r28
    15ca:	1f 91       	pop	r17
    15cc:	0f 91       	pop	r16
    15ce:	08 95       	ret

000015d0 <__ultoa_invert>:
    15d0:	fa 01       	movw	r30, r20
    15d2:	aa 27       	eor	r26, r26
    15d4:	28 30       	cpi	r18, 0x08	; 8
    15d6:	51 f1       	breq	.+84     	; 0x162c <__ultoa_invert+0x5c>
    15d8:	20 31       	cpi	r18, 0x10	; 16
    15da:	81 f1       	breq	.+96     	; 0x163c <__ultoa_invert+0x6c>
    15dc:	e8 94       	clt
    15de:	6f 93       	push	r22
    15e0:	6e 7f       	andi	r22, 0xFE	; 254
    15e2:	6e 5f       	subi	r22, 0xFE	; 254
    15e4:	7f 4f       	sbci	r23, 0xFF	; 255
    15e6:	8f 4f       	sbci	r24, 0xFF	; 255
    15e8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ea:	af 4f       	sbci	r26, 0xFF	; 255
    15ec:	b1 e0       	ldi	r27, 0x01	; 1
    15ee:	3e d0       	rcall	.+124    	; 0x166c <__ultoa_invert+0x9c>
    15f0:	b4 e0       	ldi	r27, 0x04	; 4
    15f2:	3c d0       	rcall	.+120    	; 0x166c <__ultoa_invert+0x9c>
    15f4:	67 0f       	add	r22, r23
    15f6:	78 1f       	adc	r23, r24
    15f8:	89 1f       	adc	r24, r25
    15fa:	9a 1f       	adc	r25, r26
    15fc:	a1 1d       	adc	r26, r1
    15fe:	68 0f       	add	r22, r24
    1600:	79 1f       	adc	r23, r25
    1602:	8a 1f       	adc	r24, r26
    1604:	91 1d       	adc	r25, r1
    1606:	a1 1d       	adc	r26, r1
    1608:	6a 0f       	add	r22, r26
    160a:	71 1d       	adc	r23, r1
    160c:	81 1d       	adc	r24, r1
    160e:	91 1d       	adc	r25, r1
    1610:	a1 1d       	adc	r26, r1
    1612:	20 d0       	rcall	.+64     	; 0x1654 <__ultoa_invert+0x84>
    1614:	09 f4       	brne	.+2      	; 0x1618 <__ultoa_invert+0x48>
    1616:	68 94       	set
    1618:	3f 91       	pop	r19
    161a:	2a e0       	ldi	r18, 0x0A	; 10
    161c:	26 9f       	mul	r18, r22
    161e:	11 24       	eor	r1, r1
    1620:	30 19       	sub	r19, r0
    1622:	30 5d       	subi	r19, 0xD0	; 208
    1624:	31 93       	st	Z+, r19
    1626:	de f6       	brtc	.-74     	; 0x15de <__ultoa_invert+0xe>
    1628:	cf 01       	movw	r24, r30
    162a:	08 95       	ret
    162c:	46 2f       	mov	r20, r22
    162e:	47 70       	andi	r20, 0x07	; 7
    1630:	40 5d       	subi	r20, 0xD0	; 208
    1632:	41 93       	st	Z+, r20
    1634:	b3 e0       	ldi	r27, 0x03	; 3
    1636:	0f d0       	rcall	.+30     	; 0x1656 <__ultoa_invert+0x86>
    1638:	c9 f7       	brne	.-14     	; 0x162c <__ultoa_invert+0x5c>
    163a:	f6 cf       	rjmp	.-20     	; 0x1628 <__ultoa_invert+0x58>
    163c:	46 2f       	mov	r20, r22
    163e:	4f 70       	andi	r20, 0x0F	; 15
    1640:	40 5d       	subi	r20, 0xD0	; 208
    1642:	4a 33       	cpi	r20, 0x3A	; 58
    1644:	18 f0       	brcs	.+6      	; 0x164c <__ultoa_invert+0x7c>
    1646:	49 5d       	subi	r20, 0xD9	; 217
    1648:	31 fd       	sbrc	r19, 1
    164a:	40 52       	subi	r20, 0x20	; 32
    164c:	41 93       	st	Z+, r20
    164e:	02 d0       	rcall	.+4      	; 0x1654 <__ultoa_invert+0x84>
    1650:	a9 f7       	brne	.-22     	; 0x163c <__ultoa_invert+0x6c>
    1652:	ea cf       	rjmp	.-44     	; 0x1628 <__ultoa_invert+0x58>
    1654:	b4 e0       	ldi	r27, 0x04	; 4
    1656:	a6 95       	lsr	r26
    1658:	97 95       	ror	r25
    165a:	87 95       	ror	r24
    165c:	77 95       	ror	r23
    165e:	67 95       	ror	r22
    1660:	ba 95       	dec	r27
    1662:	c9 f7       	brne	.-14     	; 0x1656 <__ultoa_invert+0x86>
    1664:	00 97       	sbiw	r24, 0x00	; 0
    1666:	61 05       	cpc	r22, r1
    1668:	71 05       	cpc	r23, r1
    166a:	08 95       	ret
    166c:	9b 01       	movw	r18, r22
    166e:	ac 01       	movw	r20, r24
    1670:	0a 2e       	mov	r0, r26
    1672:	06 94       	lsr	r0
    1674:	57 95       	ror	r21
    1676:	47 95       	ror	r20
    1678:	37 95       	ror	r19
    167a:	27 95       	ror	r18
    167c:	ba 95       	dec	r27
    167e:	c9 f7       	brne	.-14     	; 0x1672 <__ultoa_invert+0xa2>
    1680:	62 0f       	add	r22, r18
    1682:	73 1f       	adc	r23, r19
    1684:	84 1f       	adc	r24, r20
    1686:	95 1f       	adc	r25, r21
    1688:	a0 1d       	adc	r26, r0
    168a:	08 95       	ret

0000168c <_exit>:
    168c:	f8 94       	cli

0000168e <__stop_program>:
    168e:	ff cf       	rjmp	.-2      	; 0x168e <__stop_program>
